-- ============================================================================
-- SQL-Datenbankschema für PostgreSQL: eCommerce-Domäne (Normalisierte Version)
-- Enthält Tabellen zur Modellierung von Nutzern, Produkten, Bestellungen u.v.m.
-- Erstellt für Performancevergleich mit Graphdatenbank (Bachelorarbeit)
-- ============================================================================

-- Nutzerverwaltung
CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  -- Eindeutige Nutzer-ID
  "name" varchar,                                          -- Anzeigename des Nutzers
  "email" varchar UNIQUE,                                  -- Eindeutige E-Mail-Adresse
  "created_at" timestamp                                   -- Zeitstempel der Registrierung
);

-- Adressverwaltung
CREATE TABLE "addresses" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,                                           -- Fremdschlüssel auf Nutzer
  "street" varchar,
  "city" varchar,
  "zip" varchar,
  "country" varchar,
  "is_primary" boolean                                     -- Gibt an, ob es die Hauptadresse ist
);

-- Produktkatalog
CREATE TABLE "products" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar,                                          -- Produktname
  "description" text,                                      -- Ausführliche Produktbeschreibung
  "price" decimal,                                         -- Aktueller Preis
  "stock" int,                                             -- Verfügbare Lagermenge
  "created_at" timestamp,                                  -- Erstelldatum
  "updated_at" timestamp                                   -- Letzte Aktualisierung
);

-- Kategorien für Produkte
CREATE TABLE "categories" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar                                           -- Bezeichnung der Kategorie
);

-- N:M-Beziehung zwischen Produkten und Kategorien
CREATE TABLE "product_categories" (
  "product_id" int,
  "category_id" int,
  PRIMARY KEY ("product_id", "category_id")                -- Composite Key für Zuordnung
);

-- Bestellungen
CREATE TABLE "orders" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,                                           -- Kunde, der bestellt hat
  "status" varchar,                                        -- Bestellstatus (z. B. offen, abgeschlossen)
  "total" decimal,                                         -- Gesamtsumme der Bestellung
  "created_at" timestamp,
  "updated_at" timestamp
);

-- Einzelpositionen innerhalb einer Bestellung
CREATE TABLE "order_items" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" int,
  "product_id" int,
  "quantity" int,                                          -- Anzahl des Produkts
  "price" decimal                                          -- Einzelpreis zum Bestellzeitpunkt
);

-- Zahlungen zu Bestellungen
CREATE TABLE "payments" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" int,
  "payment_method" varchar,                                -- Zahlungsmethode (z. B. PayPal)
  "payment_status" varchar,                                -- Status (bezahlt, offen, fehlgeschlagen)
  "paid_at" timestamp
);

-- Produktbewertungen durch Nutzer
CREATE TABLE "reviews" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "product_id" int,
  "rating" int,                                            -- Bewertungsskala (z. B. 1–5)
  "comment" text,                                          -- Freitextkommentar
  "created_at" timestamp
);

-- Einkaufswagen-Inhalte
CREATE TABLE "cart_items" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "product_id" int,
  "quantity" int,
  "added_at" timestamp
);

-- Versandinformationen zu Bestellungen
CREATE TABLE "shipments" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" int,
  "tracking_number" varchar,
  "shipped_at" timestamp,
  "delivered_at" timestamp,
  "carrier" varchar                                        -- Versanddienstleister
);

-- Wunschlisten von Nutzern
CREATE TABLE "wishlists" (
  "user_id" int,
  "product_id" int,
  "created_at" timestamp,
  PRIMARY KEY ("user_id", "product_id")                    -- Eindeutige Kombination pro Wunsch
);

-- Produktaufrufe (Tracking)
CREATE TABLE "product_views" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "product_id" int,
  "viewed_at" timestamp
);

-- Historie von Produktkäufen
CREATE TABLE "product_purchases" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "product_id" int,
  "purchased_at" timestamp
);

-- ------------------------- Fremdschlüssel-Definitionen -------------------------
ALTER TABLE "addresses"           ADD FOREIGN KEY ("user_id")       REFERENCES "users" ("id");
ALTER TABLE "product_categories"  ADD FOREIGN KEY ("product_id")     REFERENCES "products" ("id");
ALTER TABLE "product_categories"  ADD FOREIGN KEY ("category_id")    REFERENCES "categories" ("id");
ALTER TABLE "orders"              ADD FOREIGN KEY ("user_id")        REFERENCES "users" ("id");
ALTER TABLE "order_items"         ADD FOREIGN KEY ("order_id")       REFERENCES "orders" ("id");
ALTER TABLE "order_items"         ADD FOREIGN KEY ("product_id")     REFERENCES "products" ("id");
ALTER TABLE "payments"            ADD FOREIGN KEY ("order_id")       REFERENCES "orders" ("id");
ALTER TABLE "reviews"             ADD FOREIGN KEY ("user_id")        REFERENCES "users" ("id");
ALTER TABLE "reviews"             ADD FOREIGN KEY ("product_id")     REFERENCES "products" ("id");
ALTER TABLE "cart_items"          ADD FOREIGN KEY ("user_id")        REFERENCES "users" ("id");
ALTER TABLE "cart_items"          ADD FOREIGN KEY ("product_id")     REFERENCES "products" ("id");
ALTER TABLE "shipments"           ADD FOREIGN KEY ("order_id")       REFERENCES "orders" ("id");
ALTER TABLE "wishlists"           ADD FOREIGN KEY ("user_id")        REFERENCES "users" ("id");
ALTER TABLE "wishlists"           ADD FOREIGN KEY ("product_id")     REFERENCES "products" ("id");
ALTER TABLE "product_views"       ADD FOREIGN KEY ("user_id")        REFERENCES "users" ("id");
ALTER TABLE "product_views"       ADD FOREIGN KEY ("product_id")     REFERENCES "products" ("id");
ALTER TABLE "product_purchases"   ADD FOREIGN KEY ("user_id")        REFERENCES "users" ("id");
ALTER TABLE "product_purchases"   ADD FOREIGN KEY ("product_id")     REFERENCES "products" ("id");
