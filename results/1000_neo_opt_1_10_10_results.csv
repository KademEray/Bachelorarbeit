"db","mode","phase","concurrency","query_no","repeat","complexity","duration_ms","server_ms","qps","avg_cpu","avg_mem","disk_mb","statement","result"
"neo4j","optimized","warmup",1,1,1,"simple","6439.58","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,2,"simple","1414.22","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,3,"simple","1471.69","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,4,"simple","1374.65","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,5,"simple","1206.51","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,6,"simple","1197.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,7,"simple","1176.69","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,8,"simple","1307.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,9,"simple","1434.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,10,"simple","1438.24","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,1,1,"simple","1403.34","638.00","0.71","4.89","3108.54","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 638, ""counters"": {}}"
"neo4j","optimized","steady",1,1,2,"simple","1389.44","628.00","0.72","4.23","3393.53","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 628, ""counters"": {}}"
"neo4j","optimized","steady",1,1,3,"simple","1380.74","627.00","0.72","4.21","3676.18","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 627, ""counters"": {}}"
"neo4j","optimized","steady",1,1,4,"simple","1388.84","629.00","0.72","4.21","3961.52","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 629, ""counters"": {}}"
"neo4j","optimized","steady",1,1,5,"simple","1381.70","627.00","0.72","4.21","4246.69","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 627, ""counters"": {}}"
"neo4j","optimized","steady",1,1,6,"simple","1387.64","626.00","0.72","4.17","4532.11","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 626, ""counters"": {}}"
"neo4j","optimized","steady",1,1,7,"simple","1228.33","454.00","0.81","4.00","4736.56","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 454, ""counters"": {}}"
"neo4j","optimized","steady",1,1,8,"simple","1131.72","360.00","0.88","3.63","4801.34","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 360, ""counters"": {}}"
"neo4j","optimized","steady",1,1,9,"simple","1134.42","361.00","0.88","3.17","4804.25","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 361, ""counters"": {}}"
"neo4j","optimized","steady",1,1,10,"simple","1139.98","359.00","0.88","3.08","4804.35","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 359, ""counters"": {}}"
"neo4j","optimized","warmup",1,2,1,"simple","109.00","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,2,"simple","59.92","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,3,"simple","59.78","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,4,"simple","59.81","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,5,"simple","60.01","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,6,"simple","59.75","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,7,"simple","60.02","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,8,"simple","60.29","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,9,"simple","60.20","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,10,"simple","60.22","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,2,1,"simple","13.26","1.00","75.41","31.60","4805.19","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,2,"simple","9.34","1.00","107.12","33.30","4802.27","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,3,"simple","9.28","0.00","107.77","32.65","4799.67","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,4,"simple","9.43","1.00","106.07","36.20","4799.67","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,5,"simple","9.46","1.00","105.76","33.70","4799.66","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,6,"simple","9.66","1.00","103.55","34.36","4799.97","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,7,"simple","9.42","1.00","106.17","33.39","4799.83","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,8,"simple","9.21","0.00","108.62","33.25","4799.66","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,9,"simple","9.18","0.00","108.95","33.83","4799.76","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,10,"simple","9.39","0.00","106.48","34.31","4799.71","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",1,3,1,"simple","138.01","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,2,"simple","74.90","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,3,"simple","74.52","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,4,"simple","74.20","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,5,"simple","74.28","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,6,"simple","74.58","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,7,"simple","74.14","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,8,"simple","74.43","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,9,"simple","74.99","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,10,"simple","73.88","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,3,1,"simple","29.84","3.00","33.51","16.69","4807.21","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Sami-Förster-Ring 240"", ""city"": ""Siegen"", ""zip"": ""61105"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,2,"simple","23.87","3.00","41.89","15.29","4807.34","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Sami-Förster-Ring 240"", ""city"": ""Siegen"", ""zip"": ""61105"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,3,"simple","23.67","3.00","42.24","15.00","4807.25","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Sami-Förster-Ring 240"", ""city"": ""Siegen"", ""zip"": ""61105"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,4,"simple","24.01","2.00","41.65","16.97","4807.22","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Sami-Förster-Ring 240"", ""city"": ""Siegen"", ""zip"": ""61105"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,3,5,"simple","23.90","3.00","41.85","15.29","4807.28","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Sami-Förster-Ring 240"", ""city"": ""Siegen"", ""zip"": ""61105"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,6,"simple","23.70","3.00","42.20","14.10","4807.23","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Sami-Förster-Ring 240"", ""city"": ""Siegen"", ""zip"": ""61105"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,7,"simple","23.48","3.00","42.59","14.23","4806.68","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Sami-Förster-Ring 240"", ""city"": ""Siegen"", ""zip"": ""61105"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,8,"simple","23.34","3.00","42.85","15.94","4806.34","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Sami-Förster-Ring 240"", ""city"": ""Siegen"", ""zip"": ""61105"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,9,"simple","24.07","3.00","41.55","14.19","4806.61","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Sami-Förster-Ring 240"", ""city"": ""Siegen"", ""zip"": ""61105"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,10,"simple","23.82","3.00","41.98","14.08","4800.86","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Sami-Förster-Ring 240"", ""city"": ""Siegen"", ""zip"": ""61105"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",1,4,1,"medium","755.22","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,2,"medium","569.48","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,3,"medium","563.62","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,4,"medium","567.02","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,5,"medium","569.01","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,6,"medium","569.71","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,7,"medium","562.39","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,8,"medium","570.54","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,9,"medium","564.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,10,"medium","1423.95","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,4,1,"medium","569.79","483.00","1.76","17.88","7231.52","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 483, ""counters"": {}}"
"neo4j","optimized","steady",1,4,2,"medium","538.82","459.00","1.86","14.31","7263.49","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 459, ""counters"": {}}"
"neo4j","optimized","steady",1,4,3,"medium","533.91","452.00","1.87","13.61","7290.44","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 452, ""counters"": {}}"
"neo4j","optimized","steady",1,4,4,"medium","534.19","453.00","1.87","13.71","7290.52","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 453, ""counters"": {}}"
"neo4j","optimized","steady",1,4,5,"medium","533.63","454.00","1.87","14.06","7290.22","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 454, ""counters"": {}}"
"neo4j","optimized","steady",1,4,6,"medium","530.22","450.00","1.89","13.90","7290.76","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 450, ""counters"": {}}"
"neo4j","optimized","steady",1,4,7,"medium","537.41","457.00","1.86","14.98","7290.92","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 457, ""counters"": {}}"
"neo4j","optimized","steady",1,4,8,"medium","488.85","409.00","2.05","8.22","7290.88","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 409, ""counters"": {}}"
"neo4j","optimized","steady",1,4,9,"medium","551.86","472.00","1.81","15.83","7290.87","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 472, ""counters"": {}}"
"neo4j","optimized","steady",1,4,10,"medium","488.42","407.00","2.05","8.20","7290.99","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 35, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 407, ""counters"": {}}"
"neo4j","optimized","warmup",1,5,1,"medium","174.94","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,2,"medium","61.59","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,3,"medium","60.93","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,4,"medium","61.31","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,5,"medium","60.07","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,6,"medium","60.27","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,7,"medium","59.74","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,8,"medium","59.80","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,9,"medium","59.92","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,10,"medium","60.14","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,5,1,"medium","16.24","2.00","61.59","27.89","7304.24","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 50, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,2,"medium","9.39","2.00","106.53","32.99","7302.51","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 50, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,3,"medium","9.50","1.00","105.27","35.26","7300.55","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 50, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,5,4,"medium","10.53","2.00","94.92","61.84","7300.30","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 50, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,5,"medium","9.57","2.00","104.50","36.34","7300.48","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 50, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,6,"medium","9.90","2.00","101.05","41.14","7300.47","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 50, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,7,"medium","9.38","2.00","106.57","39.75","7300.31","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 50, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,8,"medium","9.32","2.00","107.30","35.07","7300.30","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 50, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,9,"medium","9.41","1.00","106.31","33.00","7300.74","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 50, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,5,10,"medium","9.27","1.00","107.89","38.70","7300.86","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 50, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",1,6,1,"medium","131.90","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,2,"medium","62.27","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,3,"medium","60.89","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,4,"medium","60.47","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,5,"medium","60.12","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,6,"medium","60.46","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,7,"medium","59.90","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,8,"medium","59.60","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,9,"medium","60.44","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,10,"medium","60.49","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,6,1,"medium","13.50","1.00","74.08","39.80","7302.54","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,2,"medium","10.23","1.00","97.73","32.99","7302.53","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,3,"medium","9.55","1.00","104.69","36.81","7302.63","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,4,"medium","9.53","1.00","104.93","33.42","7302.71","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,5,"medium","9.49","1.00","105.43","34.90","7302.41","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,6,"medium","9.48","1.00","105.48","32.14","7303.00","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,7,"medium","9.59","1.00","104.23","84.18","7302.89","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,8,"medium","9.39","1.00","106.55","34.36","7302.75","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,9,"medium","9.36","1.00","106.81","32.79","7303.11","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,10,"medium","9.72","1.00","102.86","31.70","7302.62","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",1,7,1,"complex","207.91","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,2,"complex","146.73","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,3,"complex","86.88","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,4,"complex","82.31","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,5,"complex","83.39","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,6,"complex","84.12","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,7,"complex","86.30","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,8,"complex","83.90","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,9,"complex","85.59","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,10,"complex","83.01","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,7,1,"complex","38.45","6.00","26.01","15.91","7311.77","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,2,"complex","33.09","6.00","30.22","11.42","7311.70","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,3,"complex","32.62","6.00","30.66","11.28","7311.64","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,4,"complex","33.21","6.00","30.11","10.98","7311.71","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,5,"complex","32.50","6.00","30.77","10.87","7311.61","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,6,"complex","32.67","6.00","30.60","10.60","7311.98","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,7,"complex","32.49","6.00","30.78","10.48","7311.89","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,8,"complex","32.27","6.00","30.99","10.78","7311.47","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,9,"complex","32.94","6.00","30.36","10.86","7311.71","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,10,"complex","33.14","6.00","30.17","10.64","7311.93","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",1,8,1,"complex","130.48","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,2,"complex","57.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,3,"complex","57.05","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,4,"complex","56.07","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,5,"complex","55.30","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,6,"complex","55.39","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,7,"complex","55.24","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,8,"complex","55.24","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,9,"complex","55.15","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,10,"complex","55.35","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,8,1,"complex","9.00","1.00","111.10","38.57","7313.63","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,2,"complex","5.11","1.00","195.61","60.08","7313.77","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,3,"complex","4.93","1.00","203.00","61.47","7313.44","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,4,"complex","5.02","1.00","199.02","60.13","7313.74","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,5,"complex","5.16","1.00","193.81","62.97","7313.73","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,6,"complex","5.22","1.00","191.63","142.14","7313.80","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,7,"complex","5.33","1.00","187.48","61.73","7313.99","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,8,"complex","5.24","1.00","190.81","65.67","7313.80","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,9,"complex","5.08","0.00","196.74","64.00","7314.15","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,8,10,"complex","5.03","1.00","198.99","59.49","7313.79","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",1,9,1,"complex","159.02","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,2,"complex","64.34","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,3,"complex","63.36","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,4,"complex","62.19","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,5,"complex","60.61","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,6,"complex","60.89","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,7,"complex","60.55","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,8,"complex","59.88","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,9,"complex","59.69","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,10,"complex","60.37","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,9,1,"complex","14.79","2.00","67.59","35.75","7317.88","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 288, ""first"": {""id"": 6, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,2,"complex","9.95","2.00","100.52","31.83","7317.73","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 288, ""first"": {""id"": 6, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,3,"complex","9.83","2.00","101.72","66.80","7317.66","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 288, ""first"": {""id"": 6, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,4,"complex","9.77","2.00","102.35","33.45","7317.85","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 288, ""first"": {""id"": 6, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,5,"complex","9.79","2.00","102.10","32.20","7317.87","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 288, ""first"": {""id"": 6, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,6,"complex","9.73","2.00","102.79","31.80","7317.74","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 288, ""first"": {""id"": 6, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,7,"complex","9.63","2.00","103.82","33.61","7318.08","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 288, ""first"": {""id"": 6, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,8,"complex","9.80","3.00","102.03","33.93","7317.67","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 288, ""first"": {""id"": 6, ""orders_last_30d"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,9,9,"complex","9.47","2.00","105.55","32.25","7317.77","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 288, ""first"": {""id"": 6, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,10,"complex","9.58","2.00","104.34","32.51","7317.68","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 288, ""first"": {""id"": 6, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","warmup",1,10,1,"very_complex","216.63","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,2,"very_complex","59.28","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,3,"very_complex","58.29","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,4,"very_complex","58.51","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,5,"very_complex","57.77","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,6,"very_complex","58.40","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,7,"very_complex","57.94","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,8,"very_complex","58.12","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,9,"very_complex","58.06","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,10,"very_complex","57.84","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,10,1,"very_complex","12.93","4.00","77.36","41.69","7324.05","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,2,"very_complex","7.61","4.00","131.38","44.73","7324.20","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,3,"very_complex","7.38","4.00","135.53","45.12","7324.24","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,4,"very_complex","7.16","4.00","139.67","45.37","7324.44","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,5,"very_complex","7.07","4.00","141.47","46.87","7324.34","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,6,"very_complex","7.05","5.00","141.77","45.72","7324.15","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,10,7,"very_complex","6.93","5.00","144.38","45.70","7324.03","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,10,8,"very_complex","6.94","4.00","144.02","46.49","7324.24","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,9,"very_complex","7.25","5.00","137.98","46.91","7324.21","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,10,10,"very_complex","7.34","4.00","136.18","55.21","7324.29","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","warmup",1,11,1,"very_complex","157.04","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,2,"very_complex","72.29","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,3,"very_complex","71.87","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,4,"very_complex","71.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,5,"very_complex","71.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,6,"very_complex","71.49","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,7,"very_complex","72.35","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,8,"very_complex","71.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,9,"very_complex","71.89","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,10,"very_complex","70.79","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,11,1,"very_complex","25.01","16.00","39.98","22.42","7328.50","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",1,11,2,"very_complex","21.34","16.00","46.86","20.28","7328.77","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",1,11,3,"very_complex","20.99","16.00","47.64","20.27","7328.95","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",1,11,4,"very_complex","20.58","16.00","48.59","20.60","7328.65","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",1,11,5,"very_complex","20.83","16.00","48.01","20.47","7329.01","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",1,11,6,"very_complex","21.21","16.00","47.16","20.60","7328.70","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",1,11,7,"very_complex","20.68","16.00","48.35","20.20","7328.81","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",1,11,8,"very_complex","20.58","16.00","48.59","20.85","7328.92","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",1,11,9,"very_complex","20.60","16.00","48.54","20.77","7328.89","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",1,11,10,"very_complex","21.15","16.00","47.28","20.08","7328.40","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","warmup",1,12,1,"very_complex","148.77","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,2,"very_complex","61.50","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,3,"very_complex","60.47","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,4,"very_complex","60.30","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,5,"very_complex","60.48","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,6,"very_complex","59.05","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,7,"very_complex","59.97","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,8,"very_complex","59.55","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,9,"very_complex","59.77","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,10,"very_complex","60.00","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,12,1,"very_complex","16.05","6.00","62.31","57.67","7330.00","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,2,"very_complex","9.58","7.00","104.37","36.36","7329.81","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",1,12,3,"very_complex","9.55","6.00","104.69","35.98","7330.07","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,4,"very_complex","9.56","6.00","104.55","36.54","7329.96","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,5,"very_complex","9.77","7.00","102.37","49.44","7330.09","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",1,12,6,"very_complex","9.79","7.00","102.15","35.89","7330.25","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",1,12,7,"very_complex","9.85","7.00","101.47","38.56","7330.08","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",1,12,8,"very_complex","9.57","7.00","104.51","39.64","7330.29","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",1,12,9,"very_complex","9.82","6.00","101.87","35.23","7330.40","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,10,"very_complex","9.95","7.00","100.47","35.34","7330.00","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","warmup",1,13,1,"create","230.37","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,2,"create","65.55","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,3,"create","65.07","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,4,"create","65.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,5,"create","64.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,6,"create","56.97","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,7,"create","64.27","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,8,"create","63.68","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,9,"create","64.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,10,"create","64.00","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,13,1,"create","17.59","1.00","56.84","33.81","7339.17","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1363}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,2,"create","13.32","1.00","75.09","25.46","7339.51","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1364}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,3,"create","13.51","1.00","74.00","25.42","7339.50","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1365}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,4,"create","13.61","1.00","73.45","25.56","7339.67","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1366}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,5,"create","13.84","1.00","72.27","28.80","7339.66","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1367}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,6,"create","13.48","1.00","74.18","24.42","7339.98","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1368}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,7,"create","12.98","1.00","77.04","26.03","7339.88","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1369}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,8,"create","13.21","1.00","75.71","25.02","7340.04","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1370}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,9,"create","13.21","1.00","75.70","41.74","7340.23","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1371}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,10,"create","6.09","0.00","164.16","51.35","7340.14","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1372}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",1,14,1,"create","115.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,2,"create","63.76","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,3,"create","64.16","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,4,"create","57.99","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,5,"create","64.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,6,"create","63.97","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,7,"create","63.70","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,8,"create","63.36","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,9,"create","62.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,10,"create","56.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,14,1,"create","18.06","1.00","55.37","34.95","7341.06","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 1995}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,2,"create","6.04","1.00","165.49","51.45","7340.90","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 1996}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,3,"create","12.68","1.00","78.87","24.50","7341.04","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 1997}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,4,"create","6.12","1.00","163.34","56.28","7341.18","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 1998}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,5,"create","13.23","1.00","75.56","28.26","7341.13","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 1999}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,6,"create","6.13","1.00","163.26","77.06","7341.05","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2000}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,7,"create","13.41","1.00","74.58","26.72","7341.27","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2001}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,8,"create","16.38","1.00","61.06","32.89","7341.41","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2002}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,9,"create","15.73","1.00","63.57","22.50","7341.69","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2003}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,10,"create","16.05","1.00","62.29","19.44","7341.45","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2004}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",1,15,1,"create","148.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,2,"create","64.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,3,"create","57.08","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,4,"create","63.79","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,5,"create","64.36","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,6,"create","63.87","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,7,"create","63.77","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,8,"create","64.16","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,9,"create","63.89","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,10,"create","64.42","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,15,1,"create","17.37","1.00","57.58","23.19","7345.56","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1515}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,2,"create","13.44","2.00","74.39","24.39","7345.45","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1516}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,3,"create","12.80","2.00","78.14","24.19","7345.41","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1517}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,4,"create","13.24","1.00","75.50","23.59","7345.54","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1518}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,5,"create","13.22","1.00","75.66","25.11","7345.69","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1519}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,6,"create","13.25","1.00","75.48","26.94","7345.70","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1520}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,7,"create","13.23","1.00","75.59","26.77","7345.68","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1521}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,8,"create","13.26","1.00","75.44","24.62","7345.62","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1522}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,9,"create","12.98","1.00","77.06","30.14","7345.48","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1523}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,10,"create","12.63","1.00","79.17","26.75","7345.97","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1524}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",1,16,1,"create","125.37","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,2,"create","59.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,3,"create","66.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,4,"create","66.59","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,5,"create","66.72","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,6,"create","66.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,7,"create","66.59","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,8,"create","66.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,9,"create","66.21","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,10,"create","66.84","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,16,1,"create","20.26","4.00","49.37","22.11","7346.06","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10511}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,2,"create","16.55","4.00","60.42","20.78","7345.88","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10512}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,3,"create","16.15","4.00","61.93","20.44","7346.03","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10513}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,4,"create","9.21","5.00","108.58","40.76","7345.86","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10514}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,5,"create","15.98","5.00","62.56","20.53","7346.26","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10515}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,6,"create","16.18","4.00","61.79","21.12","7346.01","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10516}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,7,"create","8.95","5.00","111.72","39.40","7346.44","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10517}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,8,"create","16.37","5.00","61.09","20.89","7346.15","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10518}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,9,"create","9.66","4.00","103.50","38.03","7346.14","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10519}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,10,"create","17.12","4.00","58.40","21.32","7345.87","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10520}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",1,17,1,"update","508.29","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,2,"update","477.78","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,3,"update","450.77","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,4,"update","455.90","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,5,"update","462.17","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,6,"update","457.11","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,7,"update","453.77","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,8,"update","454.64","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,9,"update","444.31","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,10,"update","456.23","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,17,1,"update","403.86","390.00","2.48","8.86","7347.66","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 46}, ""server_ms"": 390, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,2,"update","401.41","397.00","2.49","9.15","7347.45","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 47}, ""server_ms"": 397, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,3,"update","406.55","395.00","2.46","8.86","7347.46","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 48}, ""server_ms"": 395, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,4,"update","404.81","392.00","2.47","8.85","7347.67","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 49}, ""server_ms"": 392, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,5,"update","401.62","390.00","2.49","8.83","7347.31","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 50}, ""server_ms"": 390, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,6,"update","410.81","399.00","2.43","8.84","7347.39","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 51}, ""server_ms"": 399, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,7,"update","404.44","393.00","2.47","8.87","7347.34","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 52}, ""server_ms"": 393, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,8,"update","404.22","393.00","2.47","8.83","7347.58","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 53}, ""server_ms"": 393, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,9,"update","410.54","399.00","2.44","8.84","7347.63","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 54}, ""server_ms"": 399, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,10,"update","402.62","392.00","2.48","8.83","7347.60","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 55}, ""server_ms"": 392, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,18,1,"update","113.51","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,2,"update","61.99","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,3,"update","54.20","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,4,"update","53.65","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,5,"update","53.33","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,6,"update","53.47","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,7,"update","53.40","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,8,"update","53.22","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,9,"update","53.18","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,10,"update","53.02","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,18,1,"update","6.41","0.00","155.99","85.44","7348.84","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,2,"update","15.83","1.00","63.18","18.87","7348.88","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,3,"update","3.27","1.00","306.01","88.90","7348.66","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,4,"update","3.03","0.00","330.46","98.82","7348.90","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,5,"update","3.01","1.00","332.55","95.89","7348.89","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,6,"update","3.07","0.00","325.23","93.13","7348.94","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,7,"update","3.03","0.00","330.43","95.58","7348.90","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,8,"update","3.31","0.00","301.97","87.98","7349.01","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,9,"update","3.01","0.00","332.28","96.08","7346.64","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,10,"update","3.02","0.00","331.62","94.75","7344.34","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,19,1,"update","84.80","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,2,"update","62.53","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,3,"update","63.15","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,4,"update","62.47","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,5,"update","62.59","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,6,"update","62.79","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,7,"update","62.74","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,8,"update","62.38","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,9,"update","62.83","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,10,"update","62.24","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,19,1,"update","8.32","1.00","120.26","54.49","7344.92","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 34}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,2,"update","5.37","1.00","186.30","58.44","7344.80","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 37}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,3,"update","5.40","1.00","185.25","57.03","7344.95","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 40}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,4,"update","12.56","1.00","79.62","24.32","7344.82","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 43}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,5,"update","12.23","1.00","81.75","23.97","7344.80","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 46}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,6,"update","12.36","1.00","80.93","25.44","7344.81","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 49}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,7,"update","11.98","1.00","83.50","24.96","7344.77","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 52}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,8,"update","12.15","1.00","82.30","24.45","7344.53","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 55}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,9,"update","5.62","1.00","178.01","55.79","7344.71","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 58}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,10,"update","11.90","1.00","84.00","25.21","7345.16","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 61}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,20,1,"update","84.98","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,2,"update","62.35","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,3,"update","62.28","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,4,"update","62.82","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,5,"update","62.00","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,6,"update","54.80","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,7,"update","62.32","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,8,"update","61.88","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,9,"update","61.71","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,10,"update","61.62","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,20,1,"update","14.31","0.00","69.89","23.90","7352.61","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,2,"update","11.51","1.00","86.91","26.84","7352.68","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,3,"update","11.51","1.00","86.87","28.07","7352.41","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,4,"update","11.36","0.00","88.05","26.38","7352.30","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,5,"update","11.59","0.00","86.30","25.54","7352.82","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,6,"update","11.73","0.00","85.23","25.13","7352.37","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,7,"update","11.80","1.00","84.73","24.79","7352.49","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,8,"update","11.62","0.00","86.05","25.90","7352.52","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,9,"update","11.51","0.00","86.88","27.02","7352.44","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,10,"update","4.36","1.00","229.52","71.03","7341.94","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,21,1,"delete","116.01","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,2,"delete","62.41","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,3,"delete","63.34","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,4,"delete","62.42","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,5,"delete","55.38","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,6,"delete","62.69","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,7,"delete","63.28","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,8,"delete","55.39","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,9,"delete","63.42","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,10,"delete","55.60","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,21,1,"delete","15.24","0.00","65.63","23.27","7346.60","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 11}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,2,"delete","5.11","0.00","195.64","61.60","7346.87","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 12}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,3,"delete","12.21","0.00","81.91","24.86","7346.36","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 13}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,4,"delete","5.63","0.00","177.61","63.11","7346.52","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 14}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,5,"delete","12.42","1.00","80.52","26.40","7346.64","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 15}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,6,"delete","5.29","1.00","189.14","58.40","7346.84","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 16}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,7,"delete","12.13","0.00","82.43","26.23","7346.98","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 17}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,8,"delete","5.42","0.00","184.50","59.66","7346.86","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 18}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,9,"delete","14.51","1.00","68.93","20.84","7346.93","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 19}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,10,"delete","12.12","1.00","82.54","25.00","7347.01","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 20}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,22,1,"delete","88.93","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,2,"delete","62.60","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,3,"delete","61.98","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,4,"delete","55.49","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,5,"delete","61.89","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,6,"delete","62.08","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,7,"delete","61.91","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,8,"delete","62.08","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,9,"delete","54.87","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,10,"delete","62.06","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,22,1,"delete","13.92","0.00","71.84","26.90","7347.26","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 11}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,2,"delete","5.10","0.00","196.22","59.69","7347.40","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 12}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,3,"delete","4.65","0.00","215.19","66.15","7347.18","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 13}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,4,"delete","11.82","1.00","84.60","27.41","7347.42","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 14}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,5,"delete","11.94","1.00","83.78","25.35","7347.34","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 15}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,6,"delete","11.65","1.00","85.86","25.47","7347.40","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 16}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,7,"delete","11.52","1.00","86.80","26.14","7347.72","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 17}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,8,"delete","11.49","1.00","87.06","25.73","7347.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 18}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,9,"delete","11.48","1.00","87.09","27.30","7347.14","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 19}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,10,"delete","4.84","0.00","206.58","62.34","7347.82","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 20}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,23,1,"delete","96.74","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,2,"delete","62.69","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,3,"delete","55.62","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,4,"delete","63.39","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,5,"delete","62.88","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,6,"delete","63.12","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,7,"delete","63.87","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,8,"delete","55.24","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,9,"delete","62.50","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,10,"delete","63.34","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,23,1,"delete","15.16","1.00","65.97","23.47","7348.99","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 11}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,2,"delete","13.11","1.00","76.28","23.03","7349.02","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 12}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,3,"delete","12.15","1.00","82.29","25.28","7349.05","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 13}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,4,"delete","12.54","1.00","79.76","24.68","7348.68","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 14}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,5,"delete","11.93","1.00","83.83","24.33","7348.90","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 15}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,6,"delete","12.45","1.00","80.30","24.72","7348.82","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 16}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,7,"delete","5.36","1.00","186.62","60.79","7348.70","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 17}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,8,"delete","12.74","1.00","78.51","26.40","7348.82","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 18}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,9,"delete","5.46","1.00","183.21","57.22","7348.85","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 19}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,10,"delete","12.39","1.00","80.72","23.96","7348.85","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 20}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,24,1,"delete","95.08","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,2,"delete","57.87","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,3,"delete","64.17","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,4,"delete","64.35","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,5,"delete","65.19","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,6,"delete","64.23","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,7,"delete","57.51","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,8,"delete","63.96","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,9,"delete","64.21","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,10,"delete","64.61","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,24,1,"delete","9.42","3.00","106.21","39.08","7349.44","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 11}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,2,"delete","14.55","2.00","68.71","22.39","7349.72","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 12}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,3,"delete","7.15","3.00","139.94","45.63","7349.37","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 13}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,4,"delete","14.18","2.00","70.53","23.41","7349.35","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 14}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,5,"delete","14.03","2.00","71.26","22.64","7349.53","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 15}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,6,"delete","14.53","3.00","68.83","21.89","7349.76","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 16}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,7,"delete","14.15","2.00","70.65","22.25","7349.65","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 17}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,8,"delete","14.84","2.00","67.39","21.22","7349.56","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 18}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,9,"delete","13.80","3.00","72.48","22.18","7350.03","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 19}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,10,"delete","13.97","3.00","71.58","23.12","7349.84","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 20}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",3,1,1,"simple","3317.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,2,"simple","3262.81","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,3,"simple","3256.40","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,4,"simple","3281.50","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,5,"simple","3286.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,6,"simple","3292.19","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,7,"simple","3284.06","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,8,"simple","3274.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,9,"simple","3288.06","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,10,"simple","3273.36","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,1,1,"simple","3254.12","379.00","0.92","3.31","7367.00","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 379, ""counters"": {}}"
"neo4j","optimized","steady",3,1,2,"simple","3225.69","386.00","0.93","3.34","7367.05","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 386, ""counters"": {}}"
"neo4j","optimized","steady",3,1,3,"simple","3206.33","373.00","0.94","3.59","7367.20","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 373, ""counters"": {}}"
"neo4j","optimized","steady",3,1,4,"simple","3251.99","377.00","0.92","3.20","7367.28","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 377, ""counters"": {}}"
"neo4j","optimized","steady",3,1,5,"simple","3220.22","379.00","0.93","3.28","7367.23","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 379, ""counters"": {}}"
"neo4j","optimized","steady",3,1,6,"simple","3241.39","385.00","0.93","3.26","7367.10","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 385, ""counters"": {}}"
"neo4j","optimized","steady",3,1,7,"simple","3232.04","395.00","0.93","3.37","7367.73","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 395, ""counters"": {}}"
"neo4j","optimized","steady",3,1,8,"simple","3293.76","382.00","0.91","3.17","7367.23","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 382, ""counters"": {}}"
"neo4j","optimized","steady",3,1,9,"simple","3228.42","384.00","0.93","3.26","7367.57","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 384, ""counters"": {}}"
"neo4j","optimized","steady",3,1,10,"simple","3241.84","378.00","0.93","3.23","7367.56","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 378, ""counters"": {}}"
"neo4j","optimized","warmup",3,2,1,"simple","74.70","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,2,"simple","73.45","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,3,"simple","74.97","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,4,"simple","73.97","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,5,"simple","78.35","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,6,"simple","74.36","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,7,"simple","73.73","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,8,"simple","74.27","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,9,"simple","74.93","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,10,"simple","75.29","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,2,1,"simple","23.24","0.00","129.07","13.95","7367.29","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,2,"simple","23.38","1.00","128.32","13.54","7367.70","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,3,"simple","23.51","0.00","127.62","13.88","7367.27","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,4,"simple","22.90","0.00","131.02","14.30","7367.63","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,5,"simple","23.33","1.00","128.56","14.34","7367.39","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,6,"simple","23.23","0.00","129.13","14.32","7367.58","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,7,"simple","23.42","0.00","128.10","14.29","7367.58","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,8,"simple","23.64","1.00","126.93","13.74","7367.61","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,9,"simple","22.98","0.00","130.57","14.23","7367.45","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,10,"simple","23.71","1.00","126.54","14.40","7367.47","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",3,3,1,"simple","134.95","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,2,"simple","132.80","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,3,"simple","131.29","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,4,"simple","134.00","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,5,"simple","130.96","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,6,"simple","130.41","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,7,"simple","132.22","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,8,"simple","139.32","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,9,"simple","129.50","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,10,"simple","129.61","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,3,1,"simple","87.43","3.00","34.31","4.87","7367.59","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Rädelweg 509"", ""city"": ""Artern"", ""zip"": ""72649"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,2,"simple","79.05","3.00","37.95","7.66","7367.26","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Rädelweg 509"", ""city"": ""Artern"", ""zip"": ""72649"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,3,"simple","82.97","3.00","36.16","5.57","7367.55","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Rädelweg 509"", ""city"": ""Artern"", ""zip"": ""72649"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,4,"simple","80.56","3.00","37.24","5.86","7367.49","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Rädelweg 509"", ""city"": ""Artern"", ""zip"": ""72649"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,5,"simple","79.64","3.00","37.67","5.56","7367.78","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Rädelweg 509"", ""city"": ""Artern"", ""zip"": ""72649"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,6,"simple","79.51","3.00","37.73","5.85","7367.74","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Rädelweg 509"", ""city"": ""Artern"", ""zip"": ""72649"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,7,"simple","80.17","3.00","37.42","5.95","7367.89","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Rädelweg 509"", ""city"": ""Artern"", ""zip"": ""72649"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,8,"simple","81.39","3.00","36.86","5.93","7367.81","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Rädelweg 509"", ""city"": ""Artern"", ""zip"": ""72649"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,9,"simple","80.61","3.00","37.22","6.25","7368.06","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Rädelweg 509"", ""city"": ""Artern"", ""zip"": ""72649"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,10,"simple","79.83","3.00","37.58","5.79","7367.99","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Rädelweg 509"", ""city"": ""Artern"", ""zip"": ""72649"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",3,4,1,"medium","807.88","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,2,"medium","790.04","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,3,"medium","788.45","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,4,"medium","784.33","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,5,"medium","1731.17","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,6,"medium","788.58","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,7,"medium","991.58","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,8,"medium","922.55","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,9,"medium","987.78","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,10,"medium","956.12","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,4,1,"medium","829.58","547.00","3.62","28.60","7390.59","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 547, ""counters"": {}}"
"neo4j","optimized","steady",3,4,2,"medium","947.62","671.00","3.17","31.69","7391.58","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 671, ""counters"": {}}"
"neo4j","optimized","steady",3,4,3,"medium","839.07","545.00","3.58","33.55","7392.52","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 545, ""counters"": {}}"
"neo4j","optimized","steady",3,4,4,"medium","1043.31","751.00","2.88","38.51","7395.41","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 751, ""counters"": {}}"
"neo4j","optimized","steady",3,4,5,"medium","733.22","447.00","4.09","16.93","7398.68","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 447, ""counters"": {}}"
"neo4j","optimized","steady",3,4,6,"medium","961.02","687.00","3.12","34.40","7399.05","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 687, ""counters"": {}}"
"neo4j","optimized","steady",3,4,7,"medium","912.65","694.00","3.29","31.51","7399.40","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 694, ""counters"": {}}"
"neo4j","optimized","steady",3,4,8,"medium","832.02","554.00","3.61","33.99","7399.72","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 554, ""counters"": {}}"
"neo4j","optimized","steady",3,4,9,"medium","963.28","682.00","3.11","31.82","7399.88","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 682, ""counters"": {}}"
"neo4j","optimized","steady",3,4,10,"medium","833.53","546.00","3.60","33.58","7400.07","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 55, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 546, ""counters"": {}}"
"neo4j","optimized","warmup",3,5,1,"medium","54.54","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,2,"medium","54.09","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,3,"medium","54.14","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,4,"medium","54.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,5,"medium","54.27","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,6,"medium","54.33","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,7,"medium","54.36","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,8,"medium","54.40","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,9,"medium","54.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,10,"medium","54.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,5,1,"medium","4.16","1.00","720.82","77.66","7399.89","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,2,"medium","4.03","1.00","743.53","88.72","7399.91","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,3,"medium","4.01","2.00","748.90","82.01","7399.85","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,5,4,"medium","4.08","1.00","735.76","85.38","7399.93","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,5,"medium","4.00","2.00","750.47","81.72","7400.07","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,5,6,"medium","3.95","1.00","759.65","81.27","7400.00","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,7,"medium","4.13","1.00","725.92","77.88","7399.64","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,8,"medium","4.28","2.00","701.74","86.33","7400.07","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,5,9,"medium","4.04","1.00","743.44","90.59","7399.78","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,10,"medium","4.02","1.00","745.60","78.75","7399.98","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",3,6,1,"medium","76.91","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,2,"medium","72.11","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,3,"medium","73.76","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,4,"medium","73.45","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,5,"medium","72.61","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,6,"medium","73.22","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,7,"medium","73.27","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,8,"medium","74.34","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,9,"medium","73.30","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,10,"medium","73.57","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,6,1,"medium","21.58","1.00","138.99","14.29","7400.06","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,2,"medium","22.17","1.00","135.34","15.45","7399.74","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,3,"medium","22.15","1.00","135.42","20.04","7399.97","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,4,"medium","22.70","0.00","132.16","13.87","7399.62","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,6,5,"medium","22.60","0.00","132.71","14.26","7399.87","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,6,6,"medium","22.01","1.00","136.31","14.42","7399.89","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,7,"medium","21.86","0.00","137.24","14.38","7400.21","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,6,8,"medium","21.75","0.00","137.95","14.99","7400.12","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,6,9,"medium","21.93","1.00","136.79","14.65","7399.80","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,10,"medium","23.65","1.00","126.83","13.52","7399.94","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 36, ""user_id"": 159, ""product_id"": 577207, ""rating"": 3, ""created_at"": ""2025-07-12T07:38:51.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",3,7,1,"complex","157.32","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,2,"complex","147.31","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,3,"complex","152.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,4,"complex","149.17","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,5,"complex","148.30","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,6,"complex","150.32","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,7,"complex","148.70","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,8,"complex","147.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,9,"complex","148.10","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,10,"complex","147.91","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,7,1,"complex","100.27","6.00","29.92","4.76","7416.27","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,2,"complex","98.57","6.00","30.43","4.62","7416.46","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,3,"complex","98.59","5.00","30.43","4.75","7416.21","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,7,4,"complex","97.77","6.00","30.68","9.45","7418.57","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,5,"complex","96.55","6.00","31.07","4.91","7420.64","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,6,"complex","98.38","6.00","30.49","4.74","7420.51","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,7,"complex","98.47","6.00","30.47","6.64","7419.96","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,8,"complex","98.08","6.00","30.59","6.05","7420.20","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,9,"complex","191.40","101.00","15.67","43.45","7420.65","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 101, ""counters"": {}}"
"neo4j","optimized","steady",3,7,10,"complex","98.27","5.00","30.53","4.64","7420.31","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","warmup",3,8,1,"complex","56.62","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,2,"complex","56.40","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,3,"complex","56.41","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,4,"complex","56.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,5,"complex","56.62","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,6,"complex","56.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,7,"complex","56.57","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,8,"complex","56.72","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,9,"complex","56.49","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,10,"complex","56.30","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,8,1,"complex","6.10","0.00","492.09","51.71","7416.08","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 47, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,8,2,"complex","6.15","0.00","488.00","51.33","7415.68","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 47, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,8,3,"complex","6.12","1.00","490.58","50.22","7416.02","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 47, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,8,4,"complex","6.56","1.00","457.34","47.02","7415.72","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 47, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,8,5,"complex","6.15","0.00","487.84","50.97","7415.64","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 47, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,8,6,"complex","6.19","1.00","484.82","48.86","7415.83","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 47, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,8,7,"complex","6.10","1.00","491.86","51.28","7415.55","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 47, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,8,8,"complex","5.99","1.00","500.71","50.83","7415.76","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 47, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,8,9,"complex","6.46","1.00","464.50","60.74","7415.99","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 47, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,8,10,"complex","6.28","1.00","477.38","48.09","7416.18","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 47, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",3,9,1,"complex","75.13","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,2,"complex","73.70","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,3,"complex","73.92","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,4,"complex","72.71","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,5,"complex","72.78","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,6,"complex","72.40","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,7,"complex","73.19","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,8,"complex","71.93","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,9,"complex","71.91","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,10,"complex","73.30","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,9,1,"complex","21.63","3.00","138.68","17.32","7415.88","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,9,2,"complex","21.41","2.00","140.13","16.54","7416.03","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,3,"complex","21.55","2.00","139.23","16.52","7416.06","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,4,"complex","45.65","26.00","65.71","49.56","7416.13","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",3,9,5,"complex","21.43","2.00","139.97","16.32","7415.86","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,6,"complex","21.80","2.00","137.62","16.49","7416.31","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,7,"complex","21.47","2.00","139.71","16.27","7415.94","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,8,"complex","21.22","2.00","141.37","17.24","7416.18","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,9,"complex","21.62","2.00","138.79","17.65","7416.23","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,10,"complex","21.15","2.00","141.81","16.61","7416.12","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","warmup",3,10,1,"very_complex","56.69","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,2,"very_complex","56.66","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,3,"very_complex","56.23","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,4,"very_complex","56.68","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,5,"very_complex","56.78","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,6,"very_complex","56.53","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,7,"very_complex","56.38","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,8,"very_complex","56.19","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,9,"very_complex","56.48","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,10,"very_complex","56.20","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,10,1,"very_complex","6.11","4.00","491.22","62.01","7416.00","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,10,2,"very_complex","6.08","3.00","493.19","62.96","7416.18","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,10,3,"very_complex","6.07","4.00","494.34","62.31","7416.08","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,10,4,"very_complex","6.09","3.00","492.36","62.91","7415.83","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,10,5,"very_complex","6.16","4.00","487.37","61.59","7416.13","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,10,6,"very_complex","6.15","3.00","488.04","61.64","7416.02","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,10,7,"very_complex","6.15","3.00","487.94","63.70","7416.05","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,10,8,"very_complex","6.13","4.00","489.56","61.75","7415.98","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,10,9,"very_complex","6.13","3.00","489.70","62.04","7415.91","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,10,10,"very_complex","6.08","3.00","493.14","64.10","7416.09","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",3,11,1,"very_complex","74.59","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,2,"very_complex","73.57","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,3,"very_complex","73.25","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,4,"very_complex","73.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,5,"very_complex","74.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,6,"very_complex","73.25","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,7,"very_complex","73.63","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,8,"very_complex","73.68","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,9,"very_complex","74.38","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,10,"very_complex","75.18","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,11,1,"very_complex","22.86","15.00","131.22","28.85","7415.90","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",3,11,2,"very_complex","22.51","14.00","133.29","29.00","7415.95","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,3,"very_complex","22.62","14.00","132.60","28.68","7416.11","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,4,"very_complex","22.60","15.00","132.73","28.87","7416.20","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",3,11,5,"very_complex","23.05","14.00","130.14","28.87","7416.13","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,6,"very_complex","23.42","15.00","128.08","28.73","7415.85","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",3,11,7,"very_complex","23.18","15.00","129.41","29.48","7416.01","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",3,11,8,"very_complex","22.84","14.00","131.34","29.78","7416.19","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,9,"very_complex","22.71","14.00","132.12","28.56","7415.96","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,10,"very_complex","23.08","15.00","129.97","28.59","7416.24","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","warmup",3,12,1,"very_complex","58.88","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,2,"very_complex","58.27","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,3,"very_complex","58.06","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,4,"very_complex","58.42","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,5,"very_complex","58.52","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,6,"very_complex","58.55","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,7,"very_complex","58.78","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,8,"very_complex","58.57","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,9,"very_complex","58.39","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,10,"very_complex","58.59","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,12,1,"very_complex","7.97","5.00","376.23","54.75","7416.13","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,12,2,"very_complex","8.14","6.00","368.65","55.00","7416.15","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,3,"very_complex","8.10","5.00","370.31","54.26","7416.30","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,12,4,"very_complex","8.28","6.00","362.30","52.13","7415.85","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,5,"very_complex","7.97","6.00","376.20","53.48","7416.20","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,6,"very_complex","8.01","6.00","374.51","53.29","7416.30","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,7,"very_complex","8.13","6.00","369.22","55.05","7416.17","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,8,"very_complex","8.16","5.00","367.80","61.28","7416.38","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,12,9,"very_complex","8.04","6.00","373.03","53.45","7416.38","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,10,"very_complex","8.18","6.00","366.72","52.81","7416.07","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",3,13,1,"create","63.02","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,2,"create","63.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,3,"create","55.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,4,"create","62.88","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,5,"create","62.80","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,6,"create","62.76","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,7,"create","67.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,8,"create","62.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,9,"create","66.74","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,10,"create","63.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,13,1,"create","13.07","1.00","229.46","27.33","7416.45","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1383}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,2,"create","17.00","1.00","176.43","22.75","7416.51","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1384}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,3,"create","12.77","1.00","234.89","29.62","7416.47","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1385}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,4,"create","13.21","0.00","227.07","27.02","7416.40","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1386}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,5,"create","12.34","0.00","243.09","28.71","7416.46","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1387}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,6,"create","12.72","1.00","235.88","29.61","7416.81","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1388}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,7,"create","16.20","1.00","185.15","26.93","7416.78","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1389}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,8,"create","12.83","1.00","233.74","34.88","7417.03","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1390}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,9,"create","5.60","1.00","535.78","65.76","7416.45","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1391}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,10,"create","12.29","1.00","244.07","29.50","7416.74","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1392}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",3,14,1,"create","62.86","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,2,"create","55.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,3,"create","62.80","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,4,"create","62.92","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,5,"create","62.73","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,6,"create","63.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,7,"create","55.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,8,"create","62.59","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,9,"create","63.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,10,"create","63.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,14,1,"create","5.38","1.00","557.21","63.42","7417.10","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2015}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,2,"create","12.71","1.00","236.05","28.73","7416.89","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2016}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,3,"create","5.53","1.00","542.61","62.23","7417.29","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2017}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,4,"create","12.45","1.00","241.03","29.96","7417.09","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2018}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,5,"create","5.56","0.00","539.61","63.21","7417.09","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2019}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,6,"create","12.73","1.00","235.70","29.67","7416.98","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2020}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,7,"create","12.85","1.00","233.52","26.90","7417.33","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2021}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,8,"create","13.08","1.00","229.30","56.57","7417.42","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2022}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,9,"create","12.57","1.00","238.65","27.26","7417.21","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2023}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,10,"create","12.66","1.00","237.00","31.51","7417.09","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2024}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",3,15,1,"create","66.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,2,"create","64.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,3,"create","68.27","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,4,"create","64.14","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,5,"create","62.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,6,"create","62.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,7,"create","62.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,8,"create","62.87","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,9,"create","62.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,10,"create","62.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,15,1,"create","12.26","1.00","244.80","29.36","7418.22","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1535}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,2,"create","12.42","1.00","241.62","28.37","7418.15","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1536}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,3,"create","12.74","1.00","235.53","27.56","7418.15","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1537}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,4,"create","12.46","1.00","240.81","27.72","7418.26","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1538}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,5,"create","12.04","1.00","249.22","32.76","7418.20","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1539}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,6,"create","12.32","1.00","243.51","30.57","7418.63","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1540}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,7,"create","12.41","1.00","241.82","30.49","7418.33","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1541}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,8,"create","5.25","1.00","571.18","66.59","7418.52","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1542}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,9,"create","12.37","1.00","242.52","30.97","7418.59","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1543}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,10,"create","5.32","1.00","563.98","68.21","7418.39","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1544}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",3,16,1,"create","65.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,2,"create","65.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,3,"create","65.79","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,4,"create","58.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,5,"create","65.72","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,6,"create","65.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,7,"create","65.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,8,"create","66.77","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,9,"create","58.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,10,"create","65.53","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,16,1,"create","15.67","4.00","191.44","26.81","7418.87","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10531}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,2,"create","8.66","4.00","346.46","49.94","7418.67","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10532}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,3,"create","15.06","4.00","199.22","27.68","7418.68","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10533}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,4,"create","15.74","4.00","190.55","28.63","7418.75","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10534}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,5,"create","15.52","4.00","193.24","27.10","7418.94","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10535}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,6,"create","15.91","5.00","188.54","27.17","7418.89","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10536}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,7,"create","15.40","4.00","194.85","35.08","7419.00","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10537}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,8,"create","16.03","4.00","187.15","26.55","7418.71","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10538}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,9,"create","15.89","5.00","188.74","37.63","7418.91","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10539}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,10,"create","15.66","4.00","191.57","27.64","7418.73","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10540}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",3,17,1,"update","500.44","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,2,"update","488.67","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,3,"update","452.50","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,4,"update","500.23","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,5,"update","463.81","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,6,"update","494.19","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,7,"update","529.78","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,8,"update","504.15","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,9,"update","451.46","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,10,"update","454.89","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,17,1,"update","407.41","394.00","7.36","25.93","7418.90","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 86}, ""server_ms"": 394, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,2,"update","399.78","396.00","7.50","25.48","7419.22","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 90}, ""server_ms"": 396, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,3,"update","402.65","390.00","7.45","24.98","7419.07","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 92}, ""server_ms"": 390, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,4,"update","407.05","394.00","7.37","25.33","7419.43","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 95}, ""server_ms"": 394, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,5,"update","409.15","404.00","7.33","25.24","7419.45","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 99}, ""server_ms"": 404, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,6,"update","419.52","415.00","7.15","27.12","7419.17","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 102}, ""server_ms"": 415, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,7,"update","405.85","400.00","7.39","25.11","7419.07","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 105}, ""server_ms"": 400, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,8,"update","437.13","435.00","6.86","24.74","7419.16","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 109}, ""server_ms"": 435, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,9,"update","422.77","415.00","7.10","25.08","7419.03","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 111}, ""server_ms"": 415, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,10,"update","403.70","401.00","7.43","24.93","7419.20","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 115}, ""server_ms"": 401, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,18,1,"update","65.02","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,2,"update","52.93","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,3,"update","54.06","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,4,"update","53.09","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,5,"update","53.61","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,6,"update","53.74","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,7,"update","53.63","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,8,"update","53.76","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,9,"update","52.98","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,10,"update","53.69","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,18,1,"update","3.57","1.00","840.17","86.26","7419.30","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,2,"update","2.58","0.00","1162.48","116.27","7418.99","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,3,"update","3.67","1.00","817.84","81.52","7418.99","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,4,"update","2.64","1.00","1134.34","120.03","7419.26","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,5,"update","3.53","0.00","849.23","172.17","7419.17","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,6,"update","3.90","1.00","768.29","84.81","7419.64","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,7,"update","3.92","0.00","764.66","112.61","7419.26","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,8,"update","3.57","0.00","841.33","82.44","7419.34","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,9,"update","3.58","1.00","838.81","85.85","7419.29","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,10,"update","3.53","0.00","850.10","96.29","7419.17","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,19,1,"update","64.45","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,2,"update","63.77","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,3,"update","56.45","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,4,"update","65.16","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,5,"update","64.18","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,6,"update","67.39","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,7,"update","64.24","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,8,"update","64.38","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,9,"update","63.67","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,10,"update","64.19","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,19,1,"update","13.56","11.00","221.21","25.46","7419.45","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 101}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,2,"update","7.10","4.00","422.56","94.78","7419.31","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 110}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,3,"update","13.58","10.00","220.90","23.98","7419.30","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 116}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,4,"update","13.50","11.00","222.15","23.78","7419.35","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 128}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,5,"update","13.36","1.00","224.61","24.19","7419.31","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 131}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,6,"update","13.42","1.00","223.59","23.65","7419.27","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 140}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,7,"update","13.66","10.00","219.61","24.14","7419.52","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 152}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,8,"update","13.53","1.00","221.81","23.47","7418.98","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 158}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,9,"update","14.50","1.00","206.90","22.27","7419.42","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 167}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,10,"update","13.85","1.00","216.63","31.54","7418.74","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 176}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,20,1,"update","63.36","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,2,"update","56.64","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,3,"update","56.48","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,4,"update","63.19","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,5,"update","65.33","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,6,"update","64.22","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,7,"update","55.49","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,8,"update","64.27","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,9,"update","62.92","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,10,"update","62.99","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,20,1,"update","12.86","10.00","233.29","24.08","7419.44","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,2,"update","13.95","12.00","215.00","22.40","7419.55","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,3,"update","5.47","1.00","548.44","56.86","7419.44","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,4,"update","12.95","10.00","231.70","24.54","7419.45","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,5,"update","6.72","0.00","446.48","57.71","7419.38","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,6,"update","13.10","1.00","229.07","24.47","7419.30","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,7,"update","14.12","9.00","212.43","24.16","7419.47","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,8,"update","13.43","0.00","223.34","22.51","7419.36","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,9,"update","12.81","0.00","234.27","23.53","7419.16","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,10,"update","13.00","0.00","230.83","24.85","7419.60","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,21,1,"delete","63.78","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,2,"delete","63.81","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,3,"delete","56.15","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,4,"delete","62.47","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,5,"delete","63.45","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,6,"delete","56.20","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,7,"delete","64.06","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,8,"delete","63.52","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,9,"delete","63.65","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,10,"delete","62.41","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,21,1,"delete","12.26","10.00","244.78","26.37","7419.11","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 31}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,2,"delete","13.30","11.00","225.60","23.59","7419.18","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 32}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,3,"delete","12.25","1.00","244.96","27.39","7419.22","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 33}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,4,"delete","12.19","1.00","246.15","25.33","7419.23","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 34}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,5,"delete","12.26","0.00","244.76","25.67","7419.46","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 35}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,6,"delete","12.29","9.00","244.05","26.10","7419.68","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 36}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,7,"delete","13.27","11.00","226.11","23.23","7419.60","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 37}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,8,"delete","5.85","3.00","512.76","57.79","7419.42","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 38}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,9,"delete","13.38","10.00","224.28","23.22","7419.28","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 39}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,10,"delete","5.82","3.00","515.71","54.38","7419.75","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 40}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","warmup",3,22,1,"delete","62.71","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,2,"delete","63.60","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,3,"delete","55.85","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,4,"delete","55.82","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,5,"delete","64.63","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,6,"delete","62.51","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,7,"delete","63.63","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,8,"delete","62.35","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,9,"delete","62.43","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,10,"delete","62.22","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,22,1,"delete","12.06","11.00","248.70","28.46","7419.22","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 31}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,22,2,"delete","5.66","3.00","530.46","54.39","7419.53","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 32}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,22,3,"delete","12.08","0.00","248.41","24.75","7419.45","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 33}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,4,"delete","12.05","11.00","248.86","29.80","7419.37","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 34}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,22,5,"delete","12.03","11.00","249.44","25.27","7419.39","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 35}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,22,6,"delete","11.13","9.00","269.47","121.80","7421.28","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 36}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",3,22,7,"delete","11.14","1.00","269.28","27.37","7423.37","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 37}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,8,"delete","12.11","1.00","247.69","26.22","7423.62","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 38}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,9,"delete","12.10","0.00","247.97","25.66","7423.55","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 39}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,10,"delete","13.16","11.00","227.93","27.91","7423.59","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 40}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","warmup",3,23,1,"delete","64.63","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,2,"delete","64.06","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,3,"delete","56.68","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,4,"delete","62.79","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,5,"delete","63.14","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,6,"delete","64.25","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,7,"delete","64.15","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,8,"delete","64.21","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,9,"delete","62.88","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,10,"delete","66.33","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,23,1,"delete","11.91","10.00","251.98","31.65","7431.88","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 31}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,23,2,"delete","12.96","1.00","231.55","25.81","7432.03","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 32}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,3,"delete","6.25","4.00","479.68","51.73","7432.01","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 33}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,23,4,"delete","12.77","1.00","234.98","25.61","7432.17","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 34}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,5,"delete","6.32","4.00","474.59","50.81","7432.01","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 35}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,23,6,"delete","13.78","1.00","217.73","24.28","7431.92","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 36}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,7,"delete","6.53","3.00","459.40","51.02","7431.91","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 37}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,23,8,"delete","12.79","10.00","234.51","28.45","7431.91","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 38}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,23,9,"delete","12.98","1.00","231.11","24.58","7432.07","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 39}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,10,"delete","12.77","9.00","234.88","26.11","7432.12","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 40}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","warmup",3,24,1,"delete","64.89","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,2,"delete","64.61","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,3,"delete","57.64","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,4,"delete","64.97","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,5,"delete","64.66","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,6,"delete","64.69","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,7,"delete","65.00","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,8,"delete","64.90","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,9,"delete","64.91","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,10,"delete","64.45","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,24,1,"delete","14.60","12.00","205.49","25.66","7432.07","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 31}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",3,24,2,"delete","14.48","11.00","207.20","25.98","7432.12","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 32}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,24,3,"delete","14.70","12.00","204.10","25.25","7432.21","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 33}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",3,24,4,"delete","14.30","11.00","209.84","25.13","7432.04","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 34}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,24,5,"delete","15.80","12.00","189.89","44.49","7432.33","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 35}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",3,24,6,"delete","7.90","6.00","379.63","73.50","7431.95","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 36}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,24,7,"delete","15.40","12.00","194.78","23.86","7432.28","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 37}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",3,24,8,"delete","9.91","8.00","302.82","35.61","7432.31","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 38}, ""server_ms"": 8, ""counters"": {}}"
"neo4j","optimized","steady",3,24,9,"delete","14.18","3.00","211.64","25.09","7432.03","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 39}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,10,"delete","14.25","11.00","210.48","25.14","7432.18","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 40}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","warmup",5,1,1,"simple","5430.57","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,2,"simple","5387.11","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,3,"simple","5375.66","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,4,"simple","5246.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,5,"simple","5343.67","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,6,"simple","5291.43","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,7,"simple","5301.20","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,8,"simple","5293.80","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,9,"simple","5326.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,10,"simple","5292.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,1,1,"simple","5312.28","441.00","0.94","3.78","7448.23","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 441, ""counters"": {}}"
"neo4j","optimized","steady",5,1,2,"simple","5279.22","477.00","0.95","3.91","7448.21","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 477, ""counters"": {}}"
"neo4j","optimized","steady",5,1,3,"simple","5304.45","449.00","0.94","3.78","7447.97","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 449, ""counters"": {}}"
"neo4j","optimized","steady",5,1,4,"simple","5276.31","446.00","0.95","3.90","7448.17","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 446, ""counters"": {}}"
"neo4j","optimized","steady",5,1,5,"simple","5255.53","445.00","0.95","3.74","7448.06","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 445, ""counters"": {}}"
"neo4j","optimized","steady",5,1,6,"simple","5190.30","478.00","0.96","3.87","7448.27","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 478, ""counters"": {}}"
"neo4j","optimized","steady",5,1,7,"simple","5326.76","413.00","0.94","3.76","7448.22","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 413, ""counters"": {}}"
"neo4j","optimized","steady",5,1,8,"simple","5249.62","433.00","0.95","3.89","7448.13","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 433, ""counters"": {}}"
"neo4j","optimized","steady",5,1,9,"simple","5258.83","430.00","0.95","3.94","7447.98","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 430, ""counters"": {}}"
"neo4j","optimized","steady",5,1,10,"simple","5255.96","439.00","0.95","3.94","7447.91","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 439, ""counters"": {}}"
"neo4j","optimized","warmup",5,2,1,"simple","90.24","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,2,"simple","88.80","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,3,"simple","88.47","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,4,"simple","88.15","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,5,"simple","87.88","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,6,"simple","89.51","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,7,"simple","88.18","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,8,"simple","88.73","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,9,"simple","88.19","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,10,"simple","91.62","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,2,1,"simple","37.71","1.00","132.59","8.97","7448.77","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,2,"simple","36.79","0.00","135.92","11.50","7444.46","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,3,"simple","36.54","0.00","136.84","9.42","7444.31","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,4,"simple","36.50","0.00","136.98","9.22","7444.39","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,5,"simple","36.45","0.00","137.17","9.43","7444.17","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,6,"simple","36.51","0.00","136.93","9.28","7444.40","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,7,"simple","36.99","0.00","135.19","9.08","7444.08","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,8,"simple","36.41","0.00","137.33","9.17","7444.43","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,9,"simple","36.85","0.00","135.70","9.67","7444.18","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,10,"simple","44.44","0.00","112.52","7.62","7444.40","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",5,3,1,"simple","185.35","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,2,"simple","186.14","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,3,"simple","190.46","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,4,"simple","181.35","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,5,"simple","193.43","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,6,"simple","181.72","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,7,"simple","182.85","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,8,"simple","182.52","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,9,"simple","182.91","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,10,"simple","182.45","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,3,1,"simple","132.16","3.00","37.83","3.73","7444.48","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Zobelgasse 225"", ""city"": ""Sondershausen"", ""zip"": ""53775"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,2,"simple","131.84","3.00","37.92","3.90","7444.37","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Zobelgasse 225"", ""city"": ""Sondershausen"", ""zip"": ""53775"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,3,"simple","145.41","3.00","34.38","3.53","7444.81","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Zobelgasse 225"", ""city"": ""Sondershausen"", ""zip"": ""53775"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,4,"simple","132.85","3.00","37.64","3.81","7444.27","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Zobelgasse 225"", ""city"": ""Sondershausen"", ""zip"": ""53775"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,5,"simple","133.13","3.00","37.56","4.08","7444.29","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Zobelgasse 225"", ""city"": ""Sondershausen"", ""zip"": ""53775"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,6,"simple","132.28","3.00","37.80","4.04","7444.33","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Zobelgasse 225"", ""city"": ""Sondershausen"", ""zip"": ""53775"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,7,"simple","144.48","3.00","34.61","4.64","7444.40","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Zobelgasse 225"", ""city"": ""Sondershausen"", ""zip"": ""53775"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,8,"simple","133.48","3.00","37.46","3.77","7444.35","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Zobelgasse 225"", ""city"": ""Sondershausen"", ""zip"": ""53775"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,9,"simple","132.21","3.00","37.82","3.82","7444.58","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Zobelgasse 225"", ""city"": ""Sondershausen"", ""zip"": ""53775"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,10,"simple","131.58","3.00","38.00","3.80","7444.26","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Zobelgasse 225"", ""city"": ""Sondershausen"", ""zip"": ""53775"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",5,4,1,"medium","1022.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,2,"medium","1432.74","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,3,"medium","1450.14","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,4,"medium","1331.95","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,5,"medium","1371.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,6,"medium","1370.45","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,7,"medium","1319.22","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,8,"medium","1351.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,9,"medium","1337.62","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,10,"medium","1329.97","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,4,1,"medium","1295.51","849.00","3.86","43.65","7498.43","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 849, ""counters"": {}}"
"neo4j","optimized","steady",5,4,2,"medium","1326.77","865.00","3.77","43.53","7498.68","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 865, ""counters"": {}}"
"neo4j","optimized","steady",5,4,3,"medium","1286.94","830.00","3.89","44.03","7498.71","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 830, ""counters"": {}}"
"neo4j","optimized","steady",5,4,4,"medium","1302.88","814.00","3.84","43.25","7499.05","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 814, ""counters"": {}}"
"neo4j","optimized","steady",5,4,5,"medium","1302.68","851.00","3.84","43.29","7499.06","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 851, ""counters"": {}}"
"neo4j","optimized","steady",5,4,6,"medium","1288.66","772.00","3.88","43.38","7499.29","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 772, ""counters"": {}}"
"neo4j","optimized","steady",5,4,7,"medium","1290.45","822.00","3.87","43.59","7499.17","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 822, ""counters"": {}}"
"neo4j","optimized","steady",5,4,8,"medium","1293.70","839.00","3.86","44.14","7501.05","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 839, ""counters"": {}}"
"neo4j","optimized","steady",5,4,9,"medium","1263.71","850.00","3.96","43.87","7502.64","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 850, ""counters"": {}}"
"neo4j","optimized","steady",5,4,10,"medium","1291.16","850.00","3.87","44.30","7502.82","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 115, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 850, ""counters"": {}}"
"neo4j","optimized","warmup",5,5,1,"medium","55.22","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,2,"medium","54.70","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,3,"medium","54.43","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,4,"medium","54.58","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,5,"medium","54.58","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,6,"medium","54.99","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,7,"medium","54.85","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,8,"medium","54.48","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,9,"medium","54.27","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,10,"medium","54.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,5,1,"medium","4.36","1.00","1147.53","82.27","7503.09","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,2,"medium","4.37","1.00","1143.67","78.54","7503.33","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,3,"medium","4.36","1.00","1147.97","80.23","7502.92","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,4,"medium","4.22","2.00","1184.89","81.23","7502.90","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,5,5,"medium","4.37","1.00","1144.01","79.53","7502.76","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,6,"medium","4.29","2.00","1165.75","97.16","7502.99","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,5,7,"medium","4.34","1.00","1153.35","79.94","7503.03","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,8,"medium","4.35","1.00","1150.32","78.72","7503.11","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,9,"medium","4.38","2.00","1140.69","79.43","7502.89","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,5,10,"medium","4.33","1.00","1154.04","81.03","7502.62","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 1863229, ""name"": ""adidas Men's Adizero Avanti Tyo Sneaker"", ""price"": 160.0, ""stock"": 35, ""created_at"": ""2023-11-28T20:02:22.000000000+00:00"", ""updated_at"": ""2025-01-31T17:53:38.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",5,6,1,"medium","87.71","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,2,"medium","86.08","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,3,"medium","86.52","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,4,"medium","86.38","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,5,"medium","86.31","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,6,"medium","90.27","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,7,"medium","86.20","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,8,"medium","85.26","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,9,"medium","85.87","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,10,"medium","90.86","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,6,1,"medium","35.35","0.00","141.45","9.85","7503.09","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,6,2,"medium","36.04","0.00","138.73","8.92","7502.87","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,6,3,"medium","41.97","0.00","119.13","7.93","7503.24","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,6,4,"medium","34.65","1.00","144.30","9.44","7502.71","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,5,"medium","34.69","1.00","144.12","9.36","7503.20","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,6,"medium","34.23","0.00","146.07","9.63","7503.02","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,6,7,"medium","35.74","1.00","139.89","9.28","7503.11","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,8,"medium","34.27","0.00","145.89","10.22","7502.93","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,6,9,"medium","34.61","0.00","144.46","9.38","7503.07","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,6,10,"medium","34.44","0.00","145.20","9.32","7503.11","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",5,7,1,"complex","211.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,2,"complex","209.92","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,3,"complex","211.45","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,4,"complex","210.04","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,5,"complex","210.33","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,6,"complex","210.25","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,7,"complex","211.15","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,8,"complex","209.23","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,9,"complex","210.75","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,10,"complex","209.60","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,7,1,"complex","171.32","6.00","29.19","4.08","7502.86","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,2,"complex","158.75","6.00","31.50","4.04","7502.88","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,3,"complex","158.89","6.00","31.47","3.69","7503.04","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,4,"complex","159.47","6.00","31.35","3.67","7503.08","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,5,"complex","159.02","6.00","31.44","3.94","7503.12","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,6,"complex","157.18","7.00","31.81","3.74","7503.21","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",5,7,7,"complex","158.23","6.00","31.60","3.71","7502.83","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,8,"complex","181.84","6.00","27.50","3.22","7503.13","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,9,"complex","160.78","6.00","31.10","3.54","7503.19","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,10,"complex","156.43","6.00","31.96","3.70","7503.17","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",5,8,1,"complex","58.37","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,2,"complex","58.83","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,3,"complex","58.01","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,4,"complex","58.08","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,5,"complex","58.30","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,6,"complex","58.36","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,7,"complex","58.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,8,"complex","60.23","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,9,"complex","58.41","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,10,"complex","58.39","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,8,1,"complex","7.96","0.00","628.39","50.89","7502.98","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 43, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,2,"complex","7.88","0.00","634.64","58.60","7503.16","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 43, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,3,"complex","8.07","0.00","619.71","51.49","7503.15","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 43, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,4,"complex","8.06","1.00","620.42","51.36","7503.23","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 43, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,8,5,"complex","8.12","0.00","615.61","43.82","7503.08","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 43, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,6,"complex","7.88","0.00","634.82","40.17","7503.35","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 43, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,7,"complex","8.00","0.00","625.34","50.23","7503.05","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 43, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,8,"complex","7.99","1.00","625.58","39.54","7503.29","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 43, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,8,9,"complex","7.74","0.00","646.01","40.98","7503.00","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 43, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,10,"complex","7.90","0.00","632.76","40.92","7502.97","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 43, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",5,9,1,"complex","88.08","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,2,"complex","86.11","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,3,"complex","85.52","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,4,"complex","85.14","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,5,"complex","85.86","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,6,"complex","85.23","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,7,"complex","85.39","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,8,"complex","85.77","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,9,"complex","85.58","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,10,"complex","86.13","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,9,1,"complex","35.09","2.00","142.51","20.22","7520.19","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,2,"complex","33.83","2.00","147.79","16.98","7520.08","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,3,"complex","78.45","47.00","63.73","51.89","7520.22","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 47, ""counters"": {}}"
"neo4j","optimized","steady",5,9,4,"complex","34.65","2.00","144.31","24.41","7520.14","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,5,"complex","33.82","2.00","147.83","12.79","7520.42","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,6,"complex","33.61","3.00","148.76","12.26","7520.61","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,9,7,"complex","33.25","2.00","150.36","12.57","7520.22","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,8,"complex","33.88","2.00","147.56","24.87","7520.18","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,9,"complex","33.88","2.00","147.60","17.69","7520.47","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,10,"complex","33.35","2.00","149.91","12.52","7520.24","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","warmup",5,10,1,"very_complex","57.02","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,2,"very_complex","56.57","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,3,"very_complex","73.41","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,4,"very_complex","56.57","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,5,"very_complex","56.88","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,6,"very_complex","56.81","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,7,"very_complex","56.26","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,8,"very_complex","56.73","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,9,"very_complex","56.77","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,10,"very_complex","56.36","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,10,1,"very_complex","6.33","4.00","789.75","75.12","7507.33","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,2,"very_complex","6.40","3.00","781.71","70.10","7507.29","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,10,3,"very_complex","6.48","4.00","771.66","79.34","7507.39","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,4,"very_complex","6.32","4.00","790.74","69.14","7507.38","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,5,"very_complex","6.35","4.00","787.94","67.68","7507.44","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,6,"very_complex","6.37","4.00","784.78","69.20","7507.22","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,7,"very_complex","6.27","4.00","797.45","71.22","7507.38","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,8,"very_complex","6.28","3.00","796.28","122.19","7507.58","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,10,9,"very_complex","6.46","3.00","774.28","78.58","7507.25","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,10,10,"very_complex","6.23","4.00","802.56","69.54","7507.58","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","warmup",5,11,1,"very_complex","78.94","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,2,"very_complex","79.29","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,3,"very_complex","78.38","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,4,"very_complex","79.03","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,5,"very_complex","79.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,6,"very_complex","79.05","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,7,"very_complex","79.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,8,"very_complex","79.41","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,9,"very_complex","82.43","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,10,"very_complex","79.48","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,11,1,"very_complex","27.95","16.00","178.88","33.95","7506.19","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",5,11,2,"very_complex","27.10","14.00","184.49","33.08","7506.63","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",5,11,3,"very_complex","27.81","13.00","179.82","33.36","7506.44","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 13, ""counters"": {}}"
"neo4j","optimized","steady",5,11,4,"very_complex","27.79","15.00","179.92","33.28","7506.66","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",5,11,5,"very_complex","27.56","14.00","181.42","33.93","7506.45","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",5,11,6,"very_complex","27.71","16.00","180.41","33.88","7506.22","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",5,11,7,"very_complex","27.79","16.00","179.95","33.71","7506.45","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",5,11,8,"very_complex","27.34","15.00","182.86","33.19","7506.45","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",5,11,9,"very_complex","27.60","14.00","181.16","35.64","7506.24","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",5,11,10,"very_complex","28.08","15.00","178.04","33.48","7506.37","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","warmup",5,12,1,"very_complex","58.78","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,2,"very_complex","58.77","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,3,"very_complex","58.80","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,4,"very_complex","59.04","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,5,"very_complex","58.84","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,6,"very_complex","58.65","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,7,"very_complex","58.73","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,8,"very_complex","58.75","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,9,"very_complex","58.38","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,10,"very_complex","58.88","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,12,1,"very_complex","8.11","6.00","616.83","63.68","7507.71","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,2,"very_complex","8.20","5.00","609.91","63.20","7507.56","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,12,3,"very_complex","8.45","6.00","592.00","64.59","7507.63","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,4,"very_complex","8.27","6.00","604.91","63.09","7507.52","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,5,"very_complex","8.29","5.00","603.46","62.98","7507.34","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,12,6,"very_complex","8.30","6.00","602.25","64.07","7507.42","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,7,"very_complex","8.50","6.00","588.36","61.19","7507.51","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,8,"very_complex","8.36","6.00","598.16","63.80","7507.61","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,9,"very_complex","8.49","6.00","588.79","62.00","7507.33","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,10,"very_complex","8.28","6.00","603.94","63.54","7507.49","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",5,13,1,"create","55.93","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,2,"create","62.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,3,"create","62.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,4,"create","62.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,5,"create","55.72","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,6,"create","62.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,7,"create","63.02","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,8,"create","62.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,9,"create","62.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,10,"create","55.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,13,1,"create","12.16","1.00","411.26","29.07","7507.71","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1403}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,2,"create","4.91","1.00","1018.50","70.56","7507.69","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1404}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,3,"create","12.08","1.00","413.92","30.22","7507.60","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1405}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,4,"create","5.09","1.00","982.22","65.46","7507.83","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1406}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,5,"create","11.89","0.00","420.61","30.41","7507.66","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1407}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,6,"create","12.01","1.00","416.36","33.41","7507.70","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1408}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,7,"create","12.21","0.00","409.36","28.98","7507.90","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1409}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,8,"create","12.34","0.00","405.06","26.80","7507.49","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1410}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,9,"create","11.99","1.00","417.18","28.31","7507.91","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1411}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,10,"create","13.05","1.00","383.21","29.96","7507.98","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1412}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",5,14,1,"create","62.32","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,2,"create","55.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,3,"create","62.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,4,"create","62.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,5,"create","62.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,6,"create","62.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,7,"create","62.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,8,"create","62.93","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,9,"create","62.58","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,10,"create","62.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,14,1,"create","12.40","1.00","403.12","28.55","7508.02","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2035}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,2,"create","12.03","1.00","415.78","27.95","7507.75","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2036}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,3,"create","5.32","1.00","939.21","66.73","7507.74","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2037}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,4,"create","12.90","1.00","387.50","30.26","7508.06","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2038}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,5,"create","5.56","0.00","899.09","60.61","7507.94","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2039}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,6,"create","12.29","0.00","406.85","27.79","7507.60","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2040}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,7,"create","12.65","1.00","395.18","36.05","7507.47","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2041}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,8,"create","13.00","1.00","384.64","27.14","7507.96","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2042}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,9,"create","12.00","1.00","416.66","28.78","7507.80","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2043}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,10,"create","12.37","1.00","404.25","27.28","7508.07","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2044}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",5,15,1,"create","62.88","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,2,"create","62.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,3,"create","62.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,4,"create","62.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,5,"create","62.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,6,"create","58.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,7,"create","62.11","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,8,"create","65.05","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,9,"create","57.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,10,"create","62.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,15,1,"create","12.14","1.00","411.79","28.82","7508.37","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1555}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,2,"create","12.39","1.00","403.40","35.91","7508.60","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1556}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,3,"create","12.15","1.00","411.68","28.88","7508.59","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1557}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,4,"create","13.10","1.00","381.64","30.69","7508.56","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1558}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,5,"create","12.52","1.00","399.34","28.16","7508.58","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1559}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,6,"create","4.87","1.00","1027.24","69.30","7508.45","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1560}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,7,"create","12.07","1.00","414.28","30.41","7508.47","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1561}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,8,"create","12.35","1.00","404.90","28.84","7508.52","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1562}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,9,"create","12.42","1.00","402.69","33.55","7508.41","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1563}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,10,"create","12.27","1.00","407.65","28.70","7508.40","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1564}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",5,16,1,"create","65.53","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,2,"create","66.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,3,"create","59.03","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,4,"create","65.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,5,"create","66.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,6,"create","66.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,7,"create","66.20","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,8,"create","66.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,9,"create","65.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,10,"create","66.14","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,16,1,"create","15.39","4.00","324.98","31.64","7510.43","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10551}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,2,"create","15.75","4.00","317.53","33.58","7510.69","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10552}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,3,"create","15.48","4.00","322.91","31.59","7510.55","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10553}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,4,"create","15.48","5.00","322.90","32.81","7510.66","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10554}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,5,"create","15.60","4.00","320.47","31.63","7510.56","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10555}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,6,"create","15.51","4.00","322.42","46.41","7510.56","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10556}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,7,"create","8.40","4.00","595.34","82.48","7510.58","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10557}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,8,"create","15.60","4.00","320.43","34.55","7510.59","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10558}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,9,"create","8.99","5.00","556.45","55.44","7510.58","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10559}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,10,"create","8.51","4.00","587.30","57.97","7510.56","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10560}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",5,17,1,"update","480.97","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,2,"update","487.48","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,3,"update","512.17","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,4,"update","518.54","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,5,"update","505.33","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,6,"update","491.51","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,7,"update","504.17","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,8,"update","503.49","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,9,"update","497.25","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,10,"update","519.80","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,17,1,"update","446.87","428.00","11.19","40.97","7510.74","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 167}, ""server_ms"": 428, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,2,"update","445.52","425.00","11.22","41.07","7510.58","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 172}, ""server_ms"": 425, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,3,"update","476.95","473.00","10.48","38.75","7510.70","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 179}, ""server_ms"": 473, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,4,"update","430.93","428.00","11.60","41.12","7510.73","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 185}, ""server_ms"": 428, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,5,"update","448.77","429.00","11.14","40.77","7510.73","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 188}, ""server_ms"": 429, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,6,"update","458.43","455.00","10.91","42.62","7510.72","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 194}, ""server_ms"": 455, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,7,"update","438.08","435.00","11.41","40.87","7510.45","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 200}, ""server_ms"": 435, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,8,"update","456.25","452.00","10.96","40.46","7510.32","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 204}, ""server_ms"": 452, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,9,"update","449.04","418.00","11.13","40.70","7510.71","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 206}, ""server_ms"": 418, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,10,"update","446.25","412.00","11.20","40.34","7510.73","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 211}, ""server_ms"": 412, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,18,1,"update","64.96","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,2,"update","53.04","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,3,"update","53.26","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,4,"update","53.41","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,5,"update","53.55","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,6,"update","53.21","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,7,"update","53.07","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,8,"update","53.79","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,9,"update","53.10","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,10,"update","53.16","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,18,1,"update","2.77","0.00","1804.21","113.05","7510.73","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,2,"update","2.85","1.00","1754.08","107.60","7510.84","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,3,"update","2.82","1.00","1769.97","112.56","7510.98","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,4,"update","2.75","1.00","1820.90","117.67","7511.10","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,5,"update","2.78","0.00","1801.09","111.55","7510.59","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,6,"update","2.87","0.00","1743.74","114.04","7510.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,7,"update","2.94","0.00","1698.77","101.84","7510.52","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,8,"update","2.75","0.00","1818.78","109.73","7510.62","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,9,"update","2.75","0.00","1817.72","137.59","7510.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,10,"update","3.40","1.00","1472.32","91.22","7510.58","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,19,1,"update","67.84","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,2,"update","68.51","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,3,"update","67.49","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,4,"update","66.94","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,5,"update","60.55","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,6,"update","66.66","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,7,"update","67.14","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,8,"update","67.11","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,9,"update","67.84","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,10,"update","59.62","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,19,1,"update","16.22","10.00","308.34","21.55","7510.72","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 157}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,2,"update","9.92","5.00","504.07","34.23","7510.46","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 178}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,3,"update","17.44","1.00","286.73","20.29","7510.67","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 184}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,4,"update","17.46","13.00","286.41","20.45","7510.60","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 208}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,5,"update","16.56","1.00","301.96","21.30","7510.66","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 214}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,6,"update","16.99","1.00","294.26","21.78","7510.51","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 229}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,7,"update","16.17","1.00","309.27","21.44","7510.61","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 244}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,8,"update","16.21","10.00","308.37","21.69","7510.71","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 262}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,9,"update","19.42","9.00","257.49","17.98","7510.56","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 277}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,10,"update","17.23","1.00","290.14","19.90","7510.36","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 289}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,20,1,"update","66.77","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,2,"update","58.86","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,3,"update","66.36","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,4,"update","66.56","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,5,"update","66.68","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,6,"update","66.54","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,7,"update","60.98","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,8,"update","66.37","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,9,"update","66.73","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,10,"update","66.43","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,20,1,"update","10.42","6.00","479.76","33.29","7510.98","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,2,"update","17.57","0.00","284.61","18.01","7510.91","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,3,"update","17.30","13.00","288.98","19.24","7510.77","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,4,"update","9.31","0.00","536.84","33.74","7510.67","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,5,"update","16.50","1.00","303.00","19.65","7511.20","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,6,"update","17.47","0.00","286.15","21.05","7510.79","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,7,"update","17.23","12.00","290.12","18.86","7510.73","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,8,"update","7.96","2.00","628.52","39.42","7511.07","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,9,"update","17.65","12.00","283.36","18.49","7510.93","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,10,"update","10.28","2.00","486.57","30.96","7510.64","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,21,1,"delete","55.31","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,2,"delete","63.57","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,3,"delete","62.12","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,4,"delete","55.95","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,5,"delete","63.62","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,6,"delete","57.99","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,7,"delete","62.37","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,8,"delete","62.36","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,9,"delete","56.05","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,10,"delete","63.58","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,21,1,"delete","12.26","0.00","407.82","26.25","7510.67","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 51}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,2,"delete","11.75","10.00","425.54","55.51","7510.95","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 52}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,3,"delete","12.24","10.00","408.59","26.29","7510.97","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 53}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,4,"delete","12.26","1.00","407.97","30.31","7510.87","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 54}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,5,"delete","11.74","1.00","426.02","28.90","7510.86","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 55}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,6,"delete","12.14","10.00","411.81","26.91","7511.12","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 56}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,7,"delete","11.57","0.00","432.17","28.43","7511.07","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 57}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,8,"delete","11.77","1.00","424.97","26.86","7511.10","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 58}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,9,"delete","5.75","3.00","869.75","55.72","7511.13","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 59}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,10,"delete","13.19","0.00","379.05","28.97","7510.67","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 60}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",5,22,1,"delete","61.51","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,2,"delete","55.76","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,3,"delete","62.13","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,4,"delete","62.42","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,5,"delete","63.15","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,6,"delete","62.33","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,7,"delete","55.61","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,8,"delete","63.50","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,9,"delete","62.46","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,10,"delete","62.05","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,22,1,"delete","5.58","0.00","896.65","57.54","7511.25","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 51}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,2,"delete","12.06","9.00","414.56","27.41","7511.23","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 52}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",5,22,3,"delete","11.93","9.00","418.97","25.83","7511.12","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 53}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",5,22,4,"delete","11.91","0.00","419.68","27.06","7511.13","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 54}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,5,"delete","11.95","0.00","418.31","29.08","7510.88","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 55}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,6,"delete","12.06","10.00","414.61","26.80","7511.17","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 56}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,22,7,"delete","11.34","9.00","440.98","31.56","7511.50","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 57}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",5,22,8,"delete","11.57","1.00","432.31","26.80","7511.02","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 58}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,9,"delete","12.05","0.00","415.11","31.97","7511.25","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 59}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,10,"delete","5.52","3.00","905.60","69.25","7511.12","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 60}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",5,23,1,"delete","63.33","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,2,"delete","62.37","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,3,"delete","62.94","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,4,"delete","56.56","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,5,"delete","63.15","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,6,"delete","62.99","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,7,"delete","62.95","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,8,"delete","63.77","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,9,"delete","56.50","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,10,"delete","64.25","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,23,1,"delete","12.68","0.00","394.42","29.49","7511.30","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 51}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,2,"delete","12.83","10.00","389.69","26.35","7511.47","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 52}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,23,3,"delete","12.14","1.00","411.70","32.13","7511.23","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 53}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,4,"delete","15.11","13.00","330.97","22.86","7511.20","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 54}, ""server_ms"": 13, ""counters"": {}}"
"neo4j","optimized","steady",5,23,5,"delete","11.89","9.00","420.43","28.49","7511.37","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 55}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",5,23,6,"delete","12.15","10.00","411.52","30.40","7511.50","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 56}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,23,7,"delete","12.68","10.00","394.42","29.55","7511.16","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 57}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,23,8,"delete","12.18","10.00","410.38","28.05","7511.32","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 58}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,23,9,"delete","5.49","4.00","911.56","64.87","7511.53","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 59}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,23,10,"delete","5.41","4.00","923.82","69.59","7511.66","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 60}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","warmup",5,24,1,"delete","66.18","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,2,"delete","63.57","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,3,"delete","64.78","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,4,"delete","65.52","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,5,"delete","64.76","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,6,"delete","64.64","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,7,"delete","64.32","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,8,"delete","66.43","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,9,"delete","64.02","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,10,"delete","64.64","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,24,1,"delete","13.91","2.00","359.43","30.28","7511.65","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 51}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,2,"delete","14.11","3.00","354.30","28.74","7511.83","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 52}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,3,"delete","8.00","5.00","624.62","50.86","7511.27","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 53}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,24,4,"delete","14.04","11.00","356.17","31.13","7510.97","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 54}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",5,24,5,"delete","15.77","14.00","317.01","26.36","7511.45","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 55}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",5,24,6,"delete","14.70","3.00","340.12","28.62","7511.43","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 56}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,7,"delete","14.60","12.00","342.43","30.48","7511.97","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 57}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",5,24,8,"delete","7.00","5.00","714.14","58.59","7511.61","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 58}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,24,9,"delete","14.51","12.00","344.65","29.02","7511.32","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 59}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",5,24,10,"delete","14.39","12.00","347.34","28.91","7511.41","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 60}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","warmup",10,1,1,"simple","10431.72","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,2,"simple","10464.76","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,3,"simple","10499.15","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,4,"simple","10382.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,5,"simple","10484.47","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,6,"simple","10354.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,7,"simple","10455.04","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,8,"simple","10400.91","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,9,"simple","10440.11","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,10,"simple","10549.12","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,1,1,"simple","10491.57","517.00","0.95","4.17","7557.86","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 517, ""counters"": {}}"
"neo4j","optimized","steady",10,1,2,"simple","10490.45","509.00","0.95","4.25","7558.15","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 509, ""counters"": {}}"
"neo4j","optimized","steady",10,1,3,"simple","10415.97","485.00","0.96","4.16","7558.19","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 485, ""counters"": {}}"
"neo4j","optimized","steady",10,1,4,"simple","10339.52","508.00","0.97","4.20","7557.88","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 508, ""counters"": {}}"
"neo4j","optimized","steady",10,1,5,"simple","10490.92","528.00","0.95","4.32","7558.06","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 528, ""counters"": {}}"
"neo4j","optimized","steady",10,1,6,"simple","10469.89","473.00","0.96","4.24","7558.25","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 473, ""counters"": {}}"
"neo4j","optimized","steady",10,1,7,"simple","10422.73","509.00","0.96","4.15","7558.37","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 509, ""counters"": {}}"
"neo4j","optimized","steady",10,1,8,"simple","10481.74","466.00","0.95","4.35","7558.21","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 466, ""counters"": {}}"
"neo4j","optimized","steady",10,1,9,"simple","10521.03","504.00","0.95","4.18","7558.34","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 504, ""counters"": {}}"
"neo4j","optimized","steady",10,1,10,"simple","10518.06","526.00","0.95","4.32","7558.01","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 526, ""counters"": {}}"
"neo4j","optimized","warmup",10,2,1,"simple","124.99","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,2,"simple","124.12","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,3,"simple","123.52","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,4,"simple","123.86","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,5,"simple","123.84","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,6,"simple","125.30","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,7,"simple","123.18","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,8,"simple","124.20","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,9,"simple","122.64","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,10,"simple","122.75","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,2,1,"simple","73.31","1.00","136.40","5.48","7558.36","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,2,"simple","72.32","1.00","138.27","5.47","7558.35","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,3,"simple","73.05","1.00","136.89","5.49","7558.13","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,4,"simple","71.82","0.00","139.24","5.54","7558.10","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,5,"simple","72.98","0.00","137.02","5.41","7558.22","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,6,"simple","72.39","0.00","138.14","5.57","7558.04","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,7,"simple","74.83","1.00","133.63","6.20","7558.34","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,8,"simple","71.92","1.00","139.04","5.78","7558.43","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,9,"simple","85.70","0.00","116.69","4.68","7558.06","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,10,"simple","71.31","0.00","140.24","5.54","7558.21","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",10,3,1,"simple","319.11","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,2,"simple","327.39","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,3,"simple","316.82","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,4,"simple","311.51","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,5,"simple","313.39","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,6,"simple","326.50","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,7,"simple","313.32","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,8,"simple","313.40","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,9,"simple","314.63","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,10,"simple","350.40","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,3,1,"simple","264.20","3.00","37.85","2.72","7558.38","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Fabienne-Bloch-Ring 24"", ""city"": ""Dinkelsbühl"", ""zip"": ""77009"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,2,"simple","262.68","2.00","38.07","2.89","7558.34","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Fabienne-Bloch-Ring 24"", ""city"": ""Dinkelsbühl"", ""zip"": ""77009"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,3,3,"simple","265.14","4.00","37.72","2.97","7558.31","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Fabienne-Bloch-Ring 24"", ""city"": ""Dinkelsbühl"", ""zip"": ""77009"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,3,4,"simple","266.12","3.00","37.58","2.71","7558.47","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Fabienne-Bloch-Ring 24"", ""city"": ""Dinkelsbühl"", ""zip"": ""77009"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,5,"simple","267.26","2.00","37.42","2.73","7558.24","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Fabienne-Bloch-Ring 24"", ""city"": ""Dinkelsbühl"", ""zip"": ""77009"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,3,6,"simple","265.07","3.00","37.73","2.72","7558.45","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Fabienne-Bloch-Ring 24"", ""city"": ""Dinkelsbühl"", ""zip"": ""77009"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,7,"simple","263.02","3.00","38.02","2.75","7558.15","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Fabienne-Bloch-Ring 24"", ""city"": ""Dinkelsbühl"", ""zip"": ""77009"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,8,"simple","263.46","3.00","37.96","2.74","7558.35","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Fabienne-Bloch-Ring 24"", ""city"": ""Dinkelsbühl"", ""zip"": ""77009"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,9,"simple","262.03","3.00","38.16","2.84","7558.48","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Fabienne-Bloch-Ring 24"", ""city"": ""Dinkelsbühl"", ""zip"": ""77009"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,10,"simple","279.73","3.00","35.75","3.20","7558.15","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Fabienne-Bloch-Ring 24"", ""city"": ""Dinkelsbühl"", ""zip"": ""77009"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",10,4,1,"medium","1573.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,2,"medium","2423.29","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,3,"medium","2009.58","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,4,"medium","2113.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,5,"medium","2116.80","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,6,"medium","1989.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,7,"medium","1992.64","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,8,"medium","2003.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,9,"medium","2162.54","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,10,"medium","2251.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,4,1,"medium","1970.31","961.00","5.08","50.83","7608.49","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 961, ""counters"": {}}"
"neo4j","optimized","steady",10,4,2,"medium","1866.31","932.00","5.36","45.32","7616.24","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 932, ""counters"": {}}"
"neo4j","optimized","steady",10,4,3,"medium","1957.15","1024.00","5.11","47.70","7616.85","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 1024, ""counters"": {}}"
"neo4j","optimized","steady",10,4,4,"medium","1970.79","991.00","5.07","46.90","7617.02","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 991, ""counters"": {}}"
"neo4j","optimized","steady",10,4,5,"medium","1953.45","999.00","5.12","46.91","7620.60","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 999, ""counters"": {}}"
"neo4j","optimized","steady",10,4,6,"medium","1983.21","1188.00","5.04","51.72","7624.07","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 1188, ""counters"": {}}"
"neo4j","optimized","steady",10,4,7,"medium","1994.63","1029.00","5.01","56.15","7623.96","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 1029, ""counters"": {}}"
"neo4j","optimized","steady",10,4,8,"medium","1900.54","1019.00","5.26","47.51","7624.02","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 1019, ""counters"": {}}"
"neo4j","optimized","steady",10,4,9,"medium","1918.76","910.00","5.21","46.99","7624.08","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 910, ""counters"": {}}"
"neo4j","optimized","steady",10,4,10,"medium","1959.08","945.00","5.10","47.26","7633.34","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 215, ""created_at"": ""2021-02-13T15:02:17.000000000+00:00"", ""updated_at"": ""2021-03-21T22:54:45.000000000+00:00""}, ""server_ms"": 945, ""counters"": {}}"
"neo4j","optimized","warmup",10,5,1,"medium","56.44","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,2,"medium","56.07","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,3,"medium","55.80","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,4,"medium","56.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,5,"medium","55.70","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,6,"medium","56.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,7,"medium","56.00","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,8,"medium","55.65","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,9,"medium","55.95","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,10,"medium","56.10","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,5,1,"medium","130.81","127.00","76.44","83.25","7641.82","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 127, ""counters"": {}}"
"neo4j","optimized","steady",10,5,2,"medium","5.90","1.00","1694.40","78.32","7642.49","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,3,"medium","6.25","1.00","1600.69","79.76","7642.33","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,4,"medium","5.61","1.00","1783.39","81.22","7642.41","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,5,"medium","5.98","1.00","1672.41","118.11","7641.96","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,6,"medium","5.97","1.00","1674.17","72.84","7642.32","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,7,"medium","5.94","1.00","1683.76","156.60","7642.21","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,8,"medium","5.79","1.00","1727.74","88.37","7642.17","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,9,"medium","5.91","1.00","1692.76","89.16","7642.34","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,10,"medium","5.75","1.00","1738.04","72.36","7642.17","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",10,6,1,"medium","120.94","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,2,"medium","119.76","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,3,"medium","121.04","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,4,"medium","119.68","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,5,"medium","119.84","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,6,"medium","119.88","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,7,"medium","119.46","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,8,"medium","119.77","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,9,"medium","119.32","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,10,"medium","119.03","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,6,1,"medium","71.42","1.00","140.02","5.31","7649.06","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,2,"medium","68.89","0.00","145.16","5.47","7638.86","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,6,3,"medium","69.40","0.00","144.10","5.42","7638.91","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,6,4,"medium","68.62","1.00","145.73","5.40","7638.89","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,5,"medium","69.24","1.00","144.43","7.21","7639.11","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,6,"medium","79.21","1.00","126.25","6.13","7638.79","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,7,"medium","69.45","1.00","143.98","5.55","7638.91","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,8,"medium","68.65","0.00","145.66","6.43","7638.86","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,6,9,"medium","69.22","1.00","144.48","5.47","7639.17","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,10,"medium","71.90","0.00","139.09","5.38","7639.23","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 98, ""user_id"": 459, ""product_id"": 235865, ""rating"": 3, ""created_at"": ""2025-07-11T18:32:01.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",10,7,1,"complex","385.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,2,"complex","385.12","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,3,"complex","367.75","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,4,"complex","374.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,5,"complex","371.42","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,6,"complex","365.90","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,7,"complex","363.76","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,8,"complex","367.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,9,"complex","365.73","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,10,"complex","366.76","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,7,1,"complex","313.73","6.00","31.87","3.04","7638.88","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,2,"complex","310.61","6.00","32.19","3.21","7638.98","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,3,"complex","315.04","6.00","31.74","4.80","7639.85","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,4,"complex","318.75","7.00","31.37","3.23","7641.10","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",10,7,5,"complex","320.43","6.00","31.21","3.31","7640.93","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,6,"complex","317.55","7.00","31.49","5.04","7641.25","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",10,7,7,"complex","312.46","7.00","32.00","3.04","7641.00","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",10,7,8,"complex","316.61","6.00","31.58","2.90","7641.14","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,9,"complex","321.24","6.00","31.13","2.97","7641.21","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,10,"complex","313.45","7.00","31.90","4.23","7641.09","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-27T07:09:49.000000000+00:00"", ""total"": 146.42000007629395}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","warmup",10,8,1,"complex","63.66","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,2,"complex","65.11","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,3,"complex","65.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,4,"complex","64.91","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,5,"complex","63.34","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,6,"complex","66.12","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,7,"complex","64.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,8,"complex","64.13","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,9,"complex","64.80","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,10,"complex","64.04","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,8,1,"complex","13.85","0.00","721.99","25.77","7655.76","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 37, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,2,"complex","13.97","0.00","715.98","25.53","7655.66","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 37, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,3,"complex","25.75","0.00","388.41","17.37","7655.85","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 37, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,4,"complex","13.30","1.00","751.76","26.54","7655.62","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 37, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,8,5,"complex","13.25","0.00","754.46","27.16","7651.27","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 37, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,6,"complex","13.84","1.00","722.54","27.32","7651.34","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 37, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,8,7,"complex","13.60","0.00","735.28","69.44","7651.06","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 37, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,8,"complex","13.31","0.00","751.09","27.20","7651.39","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 37, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,9,"complex","13.42","0.00","745.25","31.10","7651.08","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 37, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,10,"complex","13.39","0.00","747.00","26.60","7651.04","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 37, ""first"": {""id"": 27968, ""name"": ""K-One Brown Buff Packing Parcel Tape 48mm x 66m (Pack of 6)"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",10,9,1,"complex","118.29","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,2,"complex","116.07","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,3,"complex","117.46","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,4,"complex","127.24","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,5,"complex","115.56","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,6,"complex","115.26","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,7,"complex","118.20","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,8,"complex","115.31","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,9,"complex","115.31","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,10,"complex","118.27","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,9,1,"complex","67.91","3.00","147.25","9.04","7648.52","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,2,"complex","64.05","3.00","156.13","9.39","7648.56","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,3,"complex","64.06","2.00","156.10","10.33","7648.63","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,9,4,"complex","63.35","2.00","157.86","10.07","7648.63","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,9,5,"complex","63.42","3.00","157.68","9.65","7648.43","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,6,"complex","63.35","3.00","157.86","9.02","7648.62","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,7,"complex","64.25","3.00","155.64","9.96","7648.50","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,8,"complex","64.00","3.00","156.24","9.00","7648.74","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,9,"complex","64.08","3.00","156.06","8.99","7648.72","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,10,"complex","64.30","3.00","155.53","25.81","7648.88","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 289, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",10,10,1,"very_complex","58.56","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,2,"very_complex","57.61","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,3,"very_complex","57.52","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,4,"very_complex","58.00","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,5,"very_complex","58.09","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,6,"very_complex","57.69","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,7,"very_complex","59.21","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,8,"very_complex","58.33","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,9,"very_complex","58.11","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,10,"very_complex","57.84","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,10,1,"very_complex","7.43","4.00","1345.23","77.80","7648.75","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,2,"very_complex","9.96","7.00","1004.03","73.10","7648.57","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",10,10,3,"very_complex","7.44","4.00","1344.59","84.15","7648.66","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,4,"very_complex","7.46","4.00","1339.71","114.90","7648.71","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,5,"very_complex","7.78","4.00","1286.09","74.97","7648.88","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,6,"very_complex","7.63","4.00","1310.60","78.25","7648.90","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,7,"very_complex","7.43","4.00","1346.46","83.63","7648.64","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,8,"very_complex","8.88","4.00","1125.59","67.84","7649.01","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,9,"very_complex","7.76","4.00","1289.22","84.98","7648.92","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,10,"very_complex","7.68","4.00","1301.27","76.46","7648.98","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""rec_id"": 33859, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","warmup",10,11,1,"very_complex","98.23","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,2,"very_complex","94.12","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,3,"very_complex","91.37","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,4,"very_complex","91.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,5,"very_complex","91.14","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,6,"very_complex","93.58","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,7,"very_complex","91.84","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,8,"very_complex","91.64","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,9,"very_complex","91.29","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,10,"very_complex","91.31","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,11,1,"very_complex","40.52","16.00","246.79","39.48","7649.03","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",10,11,2,"very_complex","39.60","15.00","252.50","40.13","7648.74","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",10,11,3,"very_complex","39.52","16.00","253.03","40.39","7648.95","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",10,11,4,"very_complex","40.56","17.00","246.57","39.60","7648.79","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",10,11,5,"very_complex","39.98","16.00","250.12","40.29","7648.86","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",10,11,6,"very_complex","40.50","16.00","246.93","39.79","7648.74","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",10,11,7,"very_complex","39.65","16.00","252.23","40.13","7648.79","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",10,11,8,"very_complex","39.84","16.00","251.03","42.46","7648.82","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",10,11,9,"very_complex","40.07","15.00","249.59","44.03","7648.82","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",10,11,10,"very_complex","40.90","17.00","244.51","44.97","7648.85","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 735, ""prodB"": 1616136, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","warmup",10,12,1,"very_complex","60.13","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,2,"very_complex","60.19","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,3,"very_complex","60.69","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,4,"very_complex","59.92","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,5,"very_complex","59.90","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,6,"very_complex","61.09","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,7,"very_complex","61.01","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,8,"very_complex","59.94","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,9,"very_complex","61.98","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,10,"very_complex","59.54","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,12,1,"very_complex","9.46","6.00","1056.79","76.93","7648.84","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,2,"very_complex","10.00","7.00","1000.16","78.04","7648.83","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",10,12,3,"very_complex","9.55","6.00","1047.52","82.83","7648.92","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,4,"very_complex","9.78","7.00","1022.02","211.61","7652.87","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",10,12,5,"very_complex","12.13","5.00","824.61","83.35","7660.60","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",10,12,6,"very_complex","12.25","6.00","816.05","145.29","7660.73","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,7,"very_complex","9.29","6.00","1076.04","80.03","7653.99","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,8,"very_complex","9.35","6.00","1069.35","82.39","7646.66","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,9,"very_complex","9.59","6.00","1043.00","79.19","7646.82","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,10,"very_complex","12.35","6.00","809.95","64.70","7646.74","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 3, ""first"": {""prod_id"": 33859, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",10,13,1,"create","56.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,2,"create","63.06","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,3,"create","62.95","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,4,"create","56.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,5,"create","63.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,6,"create","63.06","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,7,"create","62.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,8,"create","62.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,9,"create","56.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,10,"create","62.77","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,13,1,"create","12.31","1.00","812.61","38.78","7646.88","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1425}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,2,"create","12.26","0.00","815.74","30.71","7647.00","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1426}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,3,"create","12.55","0.00","796.53","30.62","7647.13","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1427}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,4,"create","12.76","1.00","783.44","48.40","7647.11","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1428}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,5,"create","12.36","0.00","808.87","52.67","7647.04","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1429}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,6,"create","12.55","1.00","796.73","31.72","7647.05","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1430}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,7,"create","6.03","1.00","1658.79","82.77","7647.16","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1431}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,8,"create","12.75","1.00","784.45","39.98","7646.88","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1433}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,9,"create","12.53","1.00","798.21","41.93","7647.15","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1434}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,10,"create","9.29","0.00","1076.14","59.90","7647.04","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1435}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",10,14,1,"create","58.76","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,2,"create","62.99","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,3,"create","63.48","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,4,"create","62.73","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,5,"create","62.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,6,"create","56.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,7,"create","63.46","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,8,"create","63.21","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,9,"create","62.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,10,"create","62.37","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,14,1,"create","12.57","1.00","795.48","39.84","7647.39","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2056}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,2,"create","13.00","1.00","769.49","37.93","7647.43","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2057}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,3,"create","12.18","1.00","821.05","31.32","7647.55","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2058}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,4,"create","6.11","1.00","1636.05","111.99","7647.20","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2059}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,5,"create","12.30","1.00","813.10","30.32","7647.41","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2061}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,6,"create","6.54","1.00","1528.00","96.97","7647.24","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2062}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,7,"create","13.22","1.00","756.69","35.25","7647.70","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2064}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,8,"create","12.97","1.00","770.87","37.10","7647.64","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2065}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,9,"create","13.19","1.00","758.12","31.45","7647.50","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2066}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,10,"create","12.65","1.00","790.73","30.54","7647.35","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2067}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",10,15,1,"create","57.77","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,2,"create","63.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,3,"create","56.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,4,"create","63.05","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,5,"create","63.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,6,"create","62.77","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,7,"create","63.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,8,"create","57.16","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,9,"create","62.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,10,"create","63.22","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,15,1,"create","13.48","1.00","742.11","28.96","7647.52","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1576}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,2,"create","13.00","1.00","769.11","88.99","7647.50","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1577}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,3,"create","12.51","1.00","799.20","31.13","7647.54","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1578}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,4,"create","12.62","0.00","792.42","36.30","7647.67","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1579}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,5,"create","6.33","1.00","1580.05","65.16","7647.79","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1580}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,6,"create","12.92","1.00","774.25","38.82","7647.58","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1582}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,7,"create","12.77","1.00","783.37","32.63","7647.54","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1583}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,8,"create","13.06","1.00","765.73","29.92","7647.54","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1584}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,9,"create","12.65","1.00","790.62","35.19","7647.47","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1585}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,10,"create","7.14","1.00","1401.31","56.23","7647.48","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1586}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",10,16,1,"create","67.58","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,2,"create","67.08","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,3,"create","66.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,4,"create","66.10","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,5,"create","60.59","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,6,"create","69.77","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,7,"create","69.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,8,"create","74.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,9,"create","65.99","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,10,"create","60.07","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,16,1,"create","17.61","4.00","567.90","46.52","7647.52","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10573}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,2,"create","10.09","4.00","991.06","74.30","7647.61","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10574}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,3,"create","10.23","4.00","977.27","67.50","7647.61","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10576}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,4,"create","16.57","5.00","603.43","41.63","7647.53","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10578}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,5,"create","16.21","5.00","616.93","43.19","7647.64","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10579}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,6,"create","17.17","4.00","582.54","41.67","7647.98","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10580}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,7,"create","22.84","7.00","437.92","78.57","7648.10","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10581}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,8,"create","19.53","4.00","511.96","42.55","7647.71","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10582}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,9,"create","9.97","5.00","1003.47","71.69","7647.75","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10583}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,10,"create","16.16","4.00","618.90","43.09","7647.83","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10585}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",10,17,1,"update","520.29","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,2,"update","552.85","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,3,"update","537.42","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,4,"update","523.26","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,5,"update","526.68","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,6,"update","585.14","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,7,"update","518.47","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,8,"update","526.83","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,9,"update","539.47","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,10,"update","544.95","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,17,1,"update","481.08","455.00","20.79","81.09","7647.87","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 316}, ""server_ms"": 455, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,2,"update","490.93","485.00","20.37","80.68","7648.00","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 333}, ""server_ms"": 485, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,3,"update","467.74","455.00","21.38","81.47","7647.60","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 338}, ""server_ms"": 455, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,4,"update","493.15","462.00","20.28","81.78","7648.03","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 346}, ""server_ms"": 462, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,5,"update","469.54","467.00","21.30","80.11","7647.73","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 365}, ""server_ms"": 467, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,6,"update","483.42","469.00","20.69","78.25","7647.75","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 374}, ""server_ms"": 469, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,7,"update","479.03","441.00","20.88","78.97","7647.94","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 378}, ""server_ms"": 441, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,8,"update","491.86","487.00","20.33","82.37","7647.84","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 393}, ""server_ms"": 487, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,9,"update","482.34","458.00","20.73","80.16","7648.17","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 398}, ""server_ms"": 458, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,10,"update","488.79","468.00","20.46","79.86","7647.86","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 412}, ""server_ms"": 468, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,18,1,"update","66.59","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,2,"update","54.76","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,3,"update","55.08","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,4,"update","54.85","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,5,"update","55.02","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,6,"update","55.00","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,7,"update","55.32","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,8,"update","55.18","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,9,"update","54.58","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,10,"update","55.00","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,18,1,"update","4.82","0.00","2074.99","64.92","7647.68","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,2,"update","4.55","0.00","2198.19","78.82","7647.70","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,3,"update","4.63","0.00","2161.65","67.23","7647.78","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,4,"update","4.56","0.00","2190.63","68.25","7647.56","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,5,"update","4.63","1.00","2160.90","67.75","7647.90","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,6,"update","4.87","1.00","2051.79","63.59","7647.80","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,7,"update","4.55","0.00","2196.84","69.40","7647.86","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,8,"update","4.78","0.00","2093.23","66.28","7647.98","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,9,"update","4.62","0.00","2164.13","68.87","7647.91","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,10,"update","4.63","1.00","2158.34","68.81","7647.89","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,19,1,"update","75.42","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,2,"update","74.04","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,3,"update","75.21","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,4,"update","74.99","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,5,"update","67.06","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,6,"update","74.80","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,7,"update","74.87","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,8,"update","74.32","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,9,"update","73.72","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,10,"update","68.45","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,19,1,"update","23.43","1.00","426.78","22.09","7647.90","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 304}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,2,"update","17.64","2.00","567.03","23.24","7647.76","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 337}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,3,"update","24.74","11.00","404.27","16.76","7647.80","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 367}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,4,"update","24.20","10.00","413.15","16.99","7647.60","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 397}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,5,"update","23.31","1.00","428.94","21.29","7647.91","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 424}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,6,"update","26.36","1.00","379.36","17.74","7648.04","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 454}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,7,"update","23.67","10.00","422.56","17.78","7647.79","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 487}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,8,"update","23.75","1.00","421.07","17.54","7647.78","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 514}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,9,"update","16.95","3.00","590.02","23.95","7648.14","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 547}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,10,"update","24.07","9.00","415.40","17.91","7647.73","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 577}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,20,1,"update","66.68","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,2,"update","74.13","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,3,"update","74.17","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,4,"update","73.43","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,5,"update","72.17","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,6,"update","65.47","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,7,"update","73.68","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,8,"update","74.83","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,9,"update","74.10","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,10,"update","73.49","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,20,1,"update","23.19","0.00","431.21","15.12","7647.94","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,2,"update","23.12","0.00","432.49","16.98","7647.79","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,3,"update","23.32","0.00","428.89","15.21","7647.96","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,4,"update","16.05","0.00","623.19","25.12","7647.97","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,5,"update","25.41","0.00","393.56","14.00","7648.07","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,6,"update","23.03","0.00","434.26","17.01","7647.83","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,7,"update","22.57","9.00","443.06","16.63","7648.24","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,8,"update","22.25","0.00","449.45","16.22","7647.83","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,9,"update","22.96","0.00","435.52","15.54","7647.86","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,10,"update","22.36","0.00","447.21","16.21","7647.90","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""bbecker@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,21,1,"delete","62.79","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,2,"delete","56.31","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,3,"delete","62.57","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,4,"delete","61.80","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,5,"delete","62.10","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,6,"delete","63.64","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,7,"delete","56.46","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,8,"delete","63.11","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,9,"delete","63.69","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,10,"delete","63.87","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,21,1,"delete","5.86","1.00","1705.38","67.14","7647.84","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 73}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,2,"delete","5.76","1.00","1735.96","64.64","7647.99","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 75}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,3,"delete","12.08","0.00","827.70","30.63","7648.01","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 77}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,4,"delete","12.69","1.00","787.76","29.15","7648.30","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 78}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,5,"delete","12.98","0.00","770.15","27.08","7647.93","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 79}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,6,"delete","12.24","1.00","817.29","28.92","7648.08","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 80}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,7,"delete","13.36","10.00","748.26","27.58","7648.06","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 81}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,8,"delete","6.20","1.00","1612.44","68.26","7648.23","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 82}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,9,"delete","13.02","1.00","767.85","32.77","7648.15","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 84}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,10,"delete","5.88","0.00","1701.03","59.96","7647.80","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 85}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",10,22,1,"delete","63.76","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,2,"delete","63.42","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,3,"delete","62.45","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,4,"delete","56.85","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,5,"delete","62.18","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,6,"delete","62.33","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,7,"delete","62.04","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,8,"delete","63.31","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,9,"delete","55.86","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,10,"delete","61.95","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,22,1,"delete","11.37","9.00","879.40","29.49","7648.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 73}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",10,22,2,"delete","12.26","9.00","815.78","27.18","7648.12","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 74}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",10,22,3,"delete","11.78","0.00","848.58","30.26","7648.06","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 75}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,4,"delete","11.89","0.00","840.92","28.08","7648.07","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 76}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,5,"delete","13.00","0.00","769.31","26.06","7648.26","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 77}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,6,"delete","12.01","9.00","832.78","28.06","7648.29","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 78}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",10,22,7,"delete","18.75","2.00","533.23","17.61","7648.41","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 79}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,22,8,"delete","5.64","0.00","1774.56","57.37","7648.16","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 82}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,9,"delete","12.03","9.00","831.57","28.38","7648.07","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 84}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",10,22,10,"delete","11.95","9.00","836.54","28.00","7648.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 85}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","warmup",10,23,1,"delete","63.81","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,2,"delete","64.36","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,3,"delete","64.08","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,4,"delete","64.70","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,5,"delete","56.75","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,6,"delete","69.62","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,7,"delete","65.49","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,8,"delete","63.27","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,9,"delete","62.84","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,10,"delete","56.69","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,23,1,"delete","14.02","11.00","713.46","28.93","7648.32","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 71}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,23,2,"delete","7.37","5.00","1356.30","55.77","7648.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 72}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",10,23,3,"delete","12.96","11.00","771.37","93.48","7648.54","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 74}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,23,4,"delete","13.79","1.00","724.96","29.84","7648.26","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 75}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,5,"delete","13.52","1.00","739.75","30.13","7648.33","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 76}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,6,"delete","12.70","10.00","787.63","46.40","7648.24","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 77}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",10,23,7,"delete","7.29","6.00","1371.07","56.37","7648.22","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 78}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,23,8,"delete","13.84","11.00","722.79","30.44","7648.70","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 79}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,23,9,"delete","6.37","1.00","1570.18","62.88","7648.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 80}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,10,"delete","12.83","10.00","779.14","31.63","7648.48","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 81}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","warmup",10,24,1,"delete","58.16","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,2,"delete","64.72","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,3,"delete","64.88","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,4,"delete","66.52","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,5,"delete","66.33","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,6,"delete","57.17","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,7,"delete","64.66","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,8,"delete","65.12","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,9,"delete","58.75","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,10,"delete","66.79","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,24,1,"delete","15.60","12.00","641.05","36.12","7648.82","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 71}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",10,24,2,"delete","14.98","3.00","667.55","36.10","7648.72","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 72}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,3,"delete","14.25","3.00","701.92","37.28","7648.66","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 73}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,4,"delete","15.97","2.00","626.19","33.74","7648.15","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 74}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,5,"delete","16.64","3.00","601.03","33.13","7648.61","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 75}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,6,"delete","8.58","3.00","1165.65","62.60","7648.68","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 76}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,7,"delete","14.93","11.00","669.91","35.77","7648.54","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 77}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,24,8,"delete","14.38","11.00","695.28","37.05","7648.72","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 78}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,24,9,"delete","16.64","14.00","600.99","32.45","7648.73","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 79}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",10,24,10,"delete","17.63","3.00","567.32","31.57","7648.62","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 80}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
