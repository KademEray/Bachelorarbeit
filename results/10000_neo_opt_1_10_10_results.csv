"db","mode","phase","concurrency","query_no","repeat","complexity","duration_ms","server_ms","qps","avg_cpu","avg_mem","disk_mb","statement","result"
"neo4j","optimized","warmup",1,1,1,"simple","6477.13","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,2,"simple","1420.77","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,3,"simple","1461.13","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,4,"simple","1269.79","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,5,"simple","1198.37","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,6,"simple","1169.63","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,7,"simple","1237.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,8,"simple","1452.39","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,9,"simple","1428.96","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,10,"simple","1444.63","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,1,1,"simple","1402.02","624.00","0.71","4.30","3209.34","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 624, ""counters"": {}}"
"neo4j","optimized","steady",1,1,2,"simple","1399.69","621.00","0.71","4.13","3494.90","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 621, ""counters"": {}}"
"neo4j","optimized","steady",1,1,3,"simple","1377.56","614.00","0.73","4.14","3779.74","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 614, ""counters"": {}}"
"neo4j","optimized","steady",1,1,4,"simple","1372.91","617.00","0.73","4.19","4064.59","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 617, ""counters"": {}}"
"neo4j","optimized","steady",1,1,5,"simple","1385.88","624.00","0.72","4.17","4349.40","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 624, ""counters"": {}}"
"neo4j","optimized","steady",1,1,6,"simple","1389.17","622.00","0.72","4.15","4634.35","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 622, ""counters"": {}}"
"neo4j","optimized","steady",1,1,7,"simple","1127.98","349.00","0.89","3.50","4790.50","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 349, ""counters"": {}}"
"neo4j","optimized","steady",1,1,8,"simple","1141.42","354.00","0.88","4.63","4807.88","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 354, ""counters"": {}}"
"neo4j","optimized","steady",1,1,9,"simple","1123.76","350.00","0.89","3.87","4811.32","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 350, ""counters"": {}}"
"neo4j","optimized","steady",1,1,10,"simple","1119.92","346.00","0.89","3.13","4809.31","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 346, ""counters"": {}}"
"neo4j","optimized","warmup",1,2,1,"simple","108.81","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,2,"simple","60.40","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,3,"simple","60.02","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,4,"simple","59.84","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,5,"simple","59.92","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,6,"simple","59.74","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,7,"simple","60.84","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,8,"simple","59.90","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,9,"simple","59.98","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,10,"simple","59.50","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,2,1,"simple","13.48","0.00","74.20","30.71","4808.62","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,2,"simple","9.46","0.00","105.70","33.05","4808.89","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,3,"simple","9.52","1.00","105.06","35.04","4808.88","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,4,"simple","9.59","0.00","104.24","32.77","4808.68","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,5,"simple","9.40","1.00","106.35","32.84","4808.93","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,6,"simple","9.64","1.00","103.78","32.75","4808.78","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,7,"simple","9.54","1.00","104.78","33.91","4808.81","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,8,"simple","9.54","1.00","104.85","32.83","4808.43","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,9,"simple","9.24","1.00","108.20","33.26","4808.28","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,10,"simple","9.79","1.00","102.15","33.15","4808.36","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",1,3,1,"simple","171.10","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,2,"simple","76.63","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,3,"simple","77.88","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,4,"simple","76.49","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,5,"simple","77.03","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,6,"simple","77.08","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,7,"simple","76.28","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,8,"simple","75.38","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,9,"simple","76.05","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,10,"simple","75.82","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,3,1,"simple","31.35","5.00","31.90","32.13","4823.46","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Margrit-Löffler-Straße 288"", ""city"": ""Heinsberg"", ""zip"": ""62718"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,3,2,"simple","26.26","6.00","38.08","14.31","4823.57","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Margrit-Löffler-Straße 288"", ""city"": ""Heinsberg"", ""zip"": ""62718"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,3,3,"simple","25.47","5.00","39.27","14.62","4823.45","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Margrit-Löffler-Straße 288"", ""city"": ""Heinsberg"", ""zip"": ""62718"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,3,4,"simple","25.53","5.00","39.17","15.89","4823.76","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Margrit-Löffler-Straße 288"", ""city"": ""Heinsberg"", ""zip"": ""62718"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,3,5,"simple","25.37","5.00","39.42","15.96","4823.00","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Margrit-Löffler-Straße 288"", ""city"": ""Heinsberg"", ""zip"": ""62718"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,3,6,"simple","25.65","6.00","38.98","14.00","4822.99","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Margrit-Löffler-Straße 288"", ""city"": ""Heinsberg"", ""zip"": ""62718"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,3,7,"simple","25.61","5.00","39.05","13.84","4823.13","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Margrit-Löffler-Straße 288"", ""city"": ""Heinsberg"", ""zip"": ""62718"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,3,8,"simple","25.44","5.00","39.31","14.55","4822.93","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Margrit-Löffler-Straße 288"", ""city"": ""Heinsberg"", ""zip"": ""62718"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,3,9,"simple","25.74","5.00","38.85","13.86","4822.91","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Margrit-Löffler-Straße 288"", ""city"": ""Heinsberg"", ""zip"": ""62718"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,3,10,"simple","25.50","5.00","39.21","13.89","4822.98","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Margrit-Löffler-Straße 288"", ""city"": ""Heinsberg"", ""zip"": ""62718"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","warmup",1,4,1,"medium","769.30","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,2,"medium","589.58","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,3,"medium","577.66","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,4,"medium","577.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,5,"medium","571.05","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,6,"medium","574.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,7,"medium","580.04","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,8,"medium","574.34","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,9,"medium","577.97","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,10,"medium","1427.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,4,1,"medium","581.20","494.00","1.72","18.32","7247.41","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 494, ""counters"": {}}"
"neo4j","optimized","steady",1,4,2,"medium","548.52","470.00","1.82","14.62","7271.78","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 470, ""counters"": {}}"
"neo4j","optimized","steady",1,4,3,"medium","547.71","467.00","1.83","13.71","7297.82","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 467, ""counters"": {}}"
"neo4j","optimized","steady",1,4,4,"medium","536.78","458.00","1.86","13.56","7298.11","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 458, ""counters"": {}}"
"neo4j","optimized","steady",1,4,5,"medium","542.08","464.00","1.84","13.73","7298.10","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 464, ""counters"": {}}"
"neo4j","optimized","steady",1,4,6,"medium","545.19","465.00","1.83","13.76","7298.66","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 465, ""counters"": {}}"
"neo4j","optimized","steady",1,4,7,"medium","541.89","464.00","1.85","13.72","7297.94","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 464, ""counters"": {}}"
"neo4j","optimized","steady",1,4,8,"medium","504.69","426.00","1.98","8.29","7298.21","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 426, ""counters"": {}}"
"neo4j","optimized","steady",1,4,9,"medium","554.55","476.00","1.80","15.60","7298.50","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 476, ""counters"": {}}"
"neo4j","optimized","steady",1,4,10,"medium","501.94","421.00","1.99","8.20","7298.35","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 89, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 421, ""counters"": {}}"
"neo4j","optimized","warmup",1,5,1,"medium","220.61","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,2,"medium","69.64","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,3,"medium","68.13","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,4,"medium","134.07","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,5,"medium","68.23","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,6,"medium","68.63","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,7,"medium","67.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,8,"medium","68.08","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,9,"medium","66.94","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,10,"medium","68.59","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,5,1,"medium","24.48","10.00","40.84","21.29","7312.47","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 45, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",1,5,2,"medium","17.73","11.00","56.39","22.64","7312.52","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 45, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",1,5,3,"medium","17.70","11.00","56.49","24.06","7307.79","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 45, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",1,5,4,"medium","17.50","10.00","57.15","21.73","7308.13","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 45, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",1,5,5,"medium","17.57","10.00","56.93","59.13","7308.81","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 45, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",1,5,6,"medium","17.49","10.00","57.18","41.28","7309.12","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 45, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",1,5,7,"medium","17.80","10.00","56.17","25.19","7309.22","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 45, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",1,5,8,"medium","17.50","10.00","57.14","21.63","7309.07","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 45, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",1,5,9,"medium","17.26","10.00","57.94","22.33","7309.15","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 45, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",1,5,10,"medium","17.17","10.00","58.24","22.63","7308.95","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 45, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","warmup",1,6,1,"medium","155.28","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,2,"medium","66.32","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,3,"medium","63.28","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,4,"medium","62.47","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,5,"medium","62.09","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,6,"medium","61.90","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,7,"medium","61.93","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,8,"medium","61.47","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,9,"medium","62.21","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,10,"medium","61.45","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,6,1,"medium","15.35","3.00","65.17","37.19","7325.29","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,6,2,"medium","11.45","3.00","87.32","28.08","7325.23","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,6,3,"medium","11.56","3.00","86.51","31.56","7322.75","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,6,4,"medium","11.38","3.00","87.84","29.90","7320.62","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,6,5,"medium","11.61","3.00","86.11","30.81","7320.81","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,6,6,"medium","11.32","3.00","88.35","28.33","7320.75","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,6,7,"medium","11.80","3.00","84.75","29.27","7320.71","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,6,8,"medium","11.52","3.00","86.80","28.17","7320.92","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,6,9,"medium","11.17","3.00","89.52","28.96","7320.87","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,6,10,"medium","11.56","3.00","86.48","28.21","7320.79","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",1,7,1,"complex","323.21","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,2,"complex","124.04","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,3,"complex","122.25","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,4,"complex","122.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,5,"complex","122.73","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,6,"complex","123.61","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,7,"complex","125.42","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,8,"complex","124.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,9,"complex","123.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,10,"complex","122.70","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,7,1,"complex","77.44","46.00","12.91","11.14","7333.85","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",1,7,2,"complex","72.15","46.00","13.86","9.77","7333.72","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",1,7,3,"complex","71.99","46.00","13.89","9.77","7333.52","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",1,7,4,"complex","72.52","46.00","13.79","9.54","7334.10","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",1,7,5,"complex","72.20","46.00","13.85","9.49","7333.71","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",1,7,6,"complex","72.55","46.00","13.78","9.58","7333.83","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",1,7,7,"complex","72.01","46.00","13.89","9.46","7333.68","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",1,7,8,"complex","86.16","59.00","11.61","66.52","7333.95","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 59, ""counters"": {}}"
"neo4j","optimized","steady",1,7,9,"complex","71.84","46.00","13.92","9.50","7333.95","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",1,7,10,"complex","74.44","45.00","13.43","9.13","7334.22","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 45, ""counters"": {}}"
"neo4j","optimized","warmup",1,8,1,"complex","190.02","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,2,"complex","67.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,3,"complex","65.75","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,4,"complex","65.20","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,5,"complex","63.93","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,6,"complex","63.96","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,7,"complex","64.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,8,"complex","64.17","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,9,"complex","63.51","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,10,"complex","63.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,8,1,"complex","17.68","3.00","56.57","22.22","7339.70","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 491, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,8,2,"complex","13.78","3.00","72.57","28.22","7339.66","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 491, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,8,3,"complex","13.64","3.00","73.31","25.45","7339.60","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 491, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,8,4,"complex","13.73","4.00","72.85","25.16","7339.71","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 491, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,8,5,"complex","13.68","3.00","73.11","24.94","7339.31","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 491, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,8,6,"complex","14.80","4.00","67.58","23.22","7339.72","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 491, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,8,7,"complex","13.48","3.00","74.20","24.83","7339.41","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 491, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,8,8,"complex","13.21","3.00","75.71","25.99","7339.57","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 491, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,8,9,"complex","13.33","3.00","75.02","25.17","7339.30","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 491, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,8,10,"complex","13.75","4.00","72.75","23.89","7339.37","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 491, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","warmup",1,9,1,"complex","218.47","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,2,"complex","86.62","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,3,"complex","81.58","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,4,"complex","80.31","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,5,"complex","81.92","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,6,"complex","79.05","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,7,"complex","80.27","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,8,"complex","79.71","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,9,"complex","79.14","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,10,"complex","79.47","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,9,1,"complex","34.03","18.00","29.38","18.37","7358.84","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",1,9,2,"complex","28.62","17.00","34.94","15.64","7358.90","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",1,9,3,"complex","28.59","18.00","34.98","16.50","7358.83","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",1,9,4,"complex","28.60","18.00","34.96","16.05","7358.85","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",1,9,5,"complex","27.93","17.00","35.80","15.90","7358.74","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",1,9,6,"complex","28.69","18.00","34.86","15.63","7358.77","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",1,9,7,"complex","30.73","20.00","32.54","16.59","7359.13","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",1,9,8,"complex","28.90","18.00","34.60","18.39","7358.90","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",1,9,9,"complex","28.74","18.00","34.80","16.45","7358.81","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",1,9,10,"complex","28.79","19.00","34.73","15.88","7358.80","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","warmup",1,10,1,"very_complex","267.85","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,2,"very_complex","96.21","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,3,"very_complex","91.18","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,4,"very_complex","86.41","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,5,"very_complex","85.14","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,6,"very_complex","88.16","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,7,"very_complex","85.33","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,8,"very_complex","87.23","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,9,"very_complex","86.08","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,10,"very_complex","85.57","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,10,1,"very_complex","40.37","32.00","24.77","20.12","7361.54","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",1,10,2,"very_complex","37.71","33.00","26.52","15.76","7361.70","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",1,10,3,"very_complex","37.18","34.00","26.90","15.81","7361.66","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",1,10,4,"very_complex","36.67","33.00","27.27","15.46","7361.69","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",1,10,5,"very_complex","34.68","31.00","28.84","16.34","7361.62","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",1,10,6,"very_complex","38.04","34.00","26.29","16.23","7361.72","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",1,10,7,"very_complex","36.58","33.00","27.34","16.42","7361.52","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",1,10,8,"very_complex","34.44","31.00","29.04","16.48","7361.78","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",1,10,9,"very_complex","34.13","31.00","29.30","16.95","7361.59","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",1,10,10,"very_complex","37.89","34.00","26.39","15.46","7361.70","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","warmup",1,11,1,"very_complex","291.07","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,2,"very_complex","199.69","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,3,"very_complex","201.04","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,4,"very_complex","198.98","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,5,"very_complex","202.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,6,"very_complex","208.03","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,7,"very_complex","208.83","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,8,"very_complex","205.27","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,9,"very_complex","200.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,10,"very_complex","207.13","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,11,1,"very_complex","166.58","157.00","6.00","10.54","7362.57","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 157, ""counters"": {}}"
"neo4j","optimized","steady",1,11,2,"very_complex","157.44","153.00","6.35","9.95","7362.51","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 153, ""counters"": {}}"
"neo4j","optimized","steady",1,11,3,"very_complex","151.21","146.00","6.61","10.06","7362.54","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 146, ""counters"": {}}"
"neo4j","optimized","steady",1,11,4,"very_complex","157.40","152.00","6.35","9.96","7362.55","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 152, ""counters"": {}}"
"neo4j","optimized","steady",1,11,5,"very_complex","154.62","149.00","6.47","10.02","7363.83","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 149, ""counters"": {}}"
"neo4j","optimized","steady",1,11,6,"very_complex","151.12","146.00","6.62","10.03","7364.78","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 146, ""counters"": {}}"
"neo4j","optimized","steady",1,11,7,"very_complex","152.94","148.00","6.54","10.00","7364.32","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 148, ""counters"": {}}"
"neo4j","optimized","steady",1,11,8,"very_complex","158.01","153.00","6.33","10.31","7364.52","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 153, ""counters"": {}}"
"neo4j","optimized","steady",1,11,9,"very_complex","148.45","143.00","6.74","10.07","7364.70","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 143, ""counters"": {}}"
"neo4j","optimized","steady",1,11,10,"very_complex","157.21","153.00","6.36","9.94","7364.85","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 153, ""counters"": {}}"
"neo4j","optimized","warmup",1,12,1,"very_complex","198.31","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,2,"very_complex","105.93","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,3,"very_complex","104.16","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,4,"very_complex","104.48","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,5,"very_complex","104.52","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,6,"very_complex","105.82","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,7,"very_complex","105.37","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,8,"very_complex","104.63","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,9,"very_complex","107.42","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,10,"very_complex","104.97","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,12,1,"very_complex","62.73","52.00","15.94","26.07","7366.37","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 52, ""counters"": {}}"
"neo4j","optimized","steady",1,12,2,"very_complex","57.38","54.00","17.43","13.27","7366.57","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 54, ""counters"": {}}"
"neo4j","optimized","steady",1,12,3,"very_complex","53.37","50.00","18.74","13.36","7366.11","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 50, ""counters"": {}}"
"neo4j","optimized","steady",1,12,4,"very_complex","53.68","50.00","18.63","13.88","7366.50","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 50, ""counters"": {}}"
"neo4j","optimized","steady",1,12,5,"very_complex","56.41","53.00","17.73","13.73","7366.35","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 53, ""counters"": {}}"
"neo4j","optimized","steady",1,12,6,"very_complex","57.51","54.00","17.39","13.12","7366.54","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 54, ""counters"": {}}"
"neo4j","optimized","steady",1,12,7,"very_complex","57.73","54.00","17.32","13.73","7366.32","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 54, ""counters"": {}}"
"neo4j","optimized","steady",1,12,8,"very_complex","53.27","50.00","18.77","13.57","7366.70","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 50, ""counters"": {}}"
"neo4j","optimized","steady",1,12,9,"very_complex","57.18","53.00","17.49","12.95","7366.71","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 53, ""counters"": {}}"
"neo4j","optimized","steady",1,12,10,"very_complex","57.42","54.00","17.42","12.98","7366.72","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 54, ""counters"": {}}"
"neo4j","optimized","warmup",1,13,1,"create","238.87","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,2,"create","68.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,3,"create","66.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,4,"create","66.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,5,"create","68.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,6,"create","66.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,7,"create","66.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,8,"create","65.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,9,"create","66.16","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,10,"create","65.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,13,1,"create","19.35","3.00","51.69","39.60","7370.86","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13543}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,2,"create","15.35","3.00","65.16","22.66","7371.00","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13544}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,3,"create","15.50","3.00","64.53","23.92","7371.09","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13545}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,4,"create","8.26","3.00","121.06","48.55","7370.98","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13546}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,5,"create","9.04","3.00","110.64","43.02","7371.09","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13547}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,6,"create","16.36","3.00","61.11","21.06","7371.22","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13548}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,7,"create","16.61","3.00","60.21","21.36","7371.26","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13549}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,8,"create","8.58","3.00","116.52","39.63","7371.16","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13550}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,9,"create","15.16","3.00","65.95","22.09","7371.01","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13551}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,10,"create","15.15","3.00","66.01","39.14","7371.07","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13552}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",1,14,1,"create","113.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,2,"create","66.88","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,3,"create","70.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,4,"create","70.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,5,"create","69.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,6,"create","66.26","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,7,"create","66.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,8,"create","66.54","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,9,"create","66.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,10,"create","66.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,14,1,"create","13.30","4.00","75.17","31.98","7371.88","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19893}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,2,"create","16.23","4.00","61.62","21.27","7371.25","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19894}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,3,"create","16.21","4.00","61.69","20.90","7371.41","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19895}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,4,"create","16.12","4.00","62.04","38.31","7371.38","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19896}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,5,"create","16.62","4.00","60.16","20.72","7371.42","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19897}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,6,"create","9.22","4.00","108.45","38.94","7371.35","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19898}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,7,"create","15.95","3.00","62.69","22.87","7371.36","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19899}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,8,"create","16.26","4.00","61.50","23.36","7371.85","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19900}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,9,"create","16.52","4.00","60.53","22.61","7371.55","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19901}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,10,"create","16.05","4.00","62.29","22.75","7371.57","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19902}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",1,15,1,"create","165.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,2,"create","61.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,3,"create","69.26","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,4,"create","75.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,5,"create","70.57","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,6,"create","68.25","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,7,"create","68.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,8,"create","69.22","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,9,"create","60.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,10,"create","67.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,15,1,"create","21.99","6.00","45.48","19.87","7376.80","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14924}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,2,"create","10.74","6.00","93.09","35.85","7376.87","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14925}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,3,"create","17.56","6.00","56.94","19.95","7376.52","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14926}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,4,"create","10.96","6.00","91.27","34.23","7376.50","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14927}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,5,"create","17.86","7.00","55.99","20.88","7376.71","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14928}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,6,"create","18.33","6.00","54.55","22.00","7376.86","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14929}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,7,"create","10.89","6.00","91.82","33.48","7376.89","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14930}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,8,"create","10.68","6.00","93.67","34.60","7376.69","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14931}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,9,"create","17.95","6.00","55.73","28.79","7376.94","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14932}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,10,"create","18.01","6.00","55.53","21.28","7377.21","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14933}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",1,16,1,"create","245.77","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,2,"create","101.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,3,"create","101.42","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,4,"create","94.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,5,"create","101.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,6,"create","101.29","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,7,"create","94.14","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,8,"create","100.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,9,"create","101.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,10,"create","101.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,16,1,"create","54.50","39.00","18.35","12.55","7388.06","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104830}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,2,"create","51.68","39.00","19.35","12.51","7387.87","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104831}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,3,"create","44.37","39.00","22.54","14.01","7387.89","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104832}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,4,"create","50.70","39.00","19.72","13.20","7387.91","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104833}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,5,"create","50.64","39.00","19.75","12.44","7387.78","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104834}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,6,"create","51.47","39.00","19.43","12.42","7379.22","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104835}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,7,"create","50.37","39.00","19.85","14.85","7379.30","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104836}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,8,"create","43.63","39.00","22.92","14.59","7379.30","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104837}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,9,"create","51.11","39.00","19.57","12.95","7379.32","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104838}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,10,"create","51.16","39.00","19.55","12.82","7379.64","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104839}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",1,17,1,"update","527.91","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,2,"update","481.20","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,3,"update","461.12","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,4,"update","453.02","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,5,"update","460.05","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,6,"update","453.17","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,7,"update","456.71","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,8,"update","462.08","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,9,"update","460.40","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,10,"update","459.33","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,17,1,"update","410.44","396.00","2.44","8.90","7380.57","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 100}, ""server_ms"": 396, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,2,"update","407.86","396.00","2.45","8.85","7380.45","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 101}, ""server_ms"": 396, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,3,"update","415.19","404.00","2.41","8.86","7380.70","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 102}, ""server_ms"": 404, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,4,"update","413.18","401.00","2.42","8.87","7380.52","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 103}, ""server_ms"": 401, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,5,"update","407.51","395.00","2.45","8.90","7380.49","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 104}, ""server_ms"": 395, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,6,"update","411.34","400.00","2.43","8.81","7380.66","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 105}, ""server_ms"": 400, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,7,"update","402.79","398.00","2.48","9.17","7380.62","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 106}, ""server_ms"": 398, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,8,"update","410.83","399.00","2.43","8.83","7380.65","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 107}, ""server_ms"": 399, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,9,"update","411.99","401.00","2.43","8.85","7380.72","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 108}, ""server_ms"": 401, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,10,"update","407.27","396.00","2.46","8.85","7380.40","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 109}, ""server_ms"": 396, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,18,1,"update","103.69","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,2,"update","55.30","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,3,"update","54.61","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,4,"update","54.64","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,5,"update","54.02","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,6,"update","54.43","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,7,"update","54.44","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,8,"update","54.57","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,9,"update","54.41","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,10,"update","54.18","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,18,1,"update","7.27","2.00","137.51","90.39","7383.53","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,2,"update","15.12","1.00","66.16","19.59","7385.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,3,"update","3.85","1.00","259.84","78.29","7385.82","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,4,"update","4.27","1.00","234.40","71.19","7385.71","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,5,"update","4.05","1.00","246.79","73.55","7381.22","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,6,"update","4.15","1.00","240.85","73.55","7381.36","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,7,"update","4.05","1.00","246.84","75.38","7381.55","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,8,"update","4.18","1.00","238.98","72.69","7381.40","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,9,"update","4.03","1.00","247.94","74.91","7381.68","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,10,"update","4.06","2.00","246.45","75.51","7381.39","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,19,1,"update","98.25","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,2,"update","71.68","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,3,"update","68.77","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,4,"update","67.99","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,5,"update","67.86","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,6,"update","61.20","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,7,"update","68.63","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,8,"update","68.85","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,9,"update","68.00","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,10,"update","67.70","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,19,1,"update","21.10","6.00","47.39","23.98","7382.54","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 35}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,2,"update","17.88","7.00","55.93","20.37","7382.57","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 38}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,3,"update","18.15","6.00","55.09","18.98","7382.42","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 41}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,4,"update","10.54","6.00","94.90","32.31","7382.19","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 44}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,5,"update","17.57","7.00","56.91","19.56","7382.58","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 47}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,6,"update","17.71","7.00","56.46","20.00","7382.53","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 50}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,7,"update","17.40","6.00","57.47","19.87","7382.55","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 53}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,8,"update","17.62","6.00","56.76","19.53","7382.44","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 56}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,9,"update","17.71","6.00","56.46","19.86","7382.72","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 59}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,10,"update","17.78","7.00","56.24","19.21","7382.55","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 62}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,20,1,"update","84.84","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,2,"update","62.34","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,3,"update","63.46","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,4,"update","62.10","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,5,"update","55.25","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,6,"update","57.32","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,7,"update","61.79","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,8,"update","62.34","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,9,"update","55.20","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,10,"update","62.02","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,20,1,"update","14.81","0.00","67.50","22.24","7382.94","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,2,"update","11.66","0.00","85.76","26.90","7383.30","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,3,"update","12.10","0.00","82.65","27.87","7383.20","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,4,"update","11.57","0.00","86.39","26.45","7382.99","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,5,"update","11.42","1.00","87.54","25.75","7383.08","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,6,"update","11.14","1.00","89.79","25.83","7382.95","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,7,"update","11.61","0.00","86.15","25.53","7382.84","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,8,"update","11.61","0.00","86.15","24.77","7383.01","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,9,"update","11.38","0.00","87.84","25.87","7383.14","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,10,"update","11.47","1.00","87.17","25.22","7383.18","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,21,1,"delete","119.78","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,2,"delete","64.66","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,3,"delete","64.73","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,4,"delete","57.17","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,5,"delete","65.01","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,6,"delete","68.19","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,7,"delete","64.92","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,8,"delete","64.77","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,9,"delete","65.07","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,10,"delete","64.31","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,21,1,"delete","17.67","3.00","56.59","23.32","7386.75","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 11}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,2,"delete","7.35","3.00","136.10","46.28","7386.33","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 12}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,3,"delete","14.50","2.00","68.97","23.05","7385.92","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 13}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,4,"delete","14.69","3.00","68.06","24.76","7386.39","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 14}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,5,"delete","14.42","3.00","69.35","24.74","7386.37","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 15}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,6,"delete","14.66","3.00","68.20","23.31","7386.50","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 16}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,7,"delete","14.56","2.00","68.67","22.08","7386.60","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 17}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,8,"delete","14.52","3.00","68.88","21.93","7386.57","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 18}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,9,"delete","14.52","3.00","68.85","23.18","7386.49","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 19}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,10,"delete","7.18","2.00","139.25","44.73","7386.86","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 20}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,22,1,"delete","92.00","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,2,"delete","62.83","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,3,"delete","56.20","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,4,"delete","63.81","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,5,"delete","64.03","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,6,"delete","63.68","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,7,"delete","62.90","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,8,"delete","63.28","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,9,"delete","63.35","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,10,"delete","55.85","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,22,1,"delete","15.96","1.00","62.64","21.38","7387.15","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 11}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,2,"delete","13.04","1.00","76.69","25.38","7386.89","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 12}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,3,"delete","6.10","2.00","163.99","60.81","7387.07","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 13}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,4,"delete","12.93","1.00","77.33","23.78","7387.54","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 14}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,5,"delete","12.73","2.00","78.56","24.68","7387.24","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 15}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,6,"delete","12.77","2.00","78.31","25.08","7387.32","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 16}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,7,"delete","5.74","1.00","174.32","53.93","7387.29","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 17}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,8,"delete","13.04","1.00","76.70","23.32","7387.58","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 18}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,9,"delete","13.18","1.00","75.87","22.88","7387.43","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 19}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,10,"delete","12.86","2.00","77.76","30.68","7387.08","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 20}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,23,1,"delete","103.27","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,2,"delete","62.32","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,3,"delete","69.17","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,4,"delete","69.34","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,5,"delete","70.56","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,6,"delete","69.21","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,7,"delete","71.42","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,8,"delete","69.04","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,9,"delete","62.47","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,10,"delete","69.01","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,23,1,"delete","21.03","7.00","47.55","23.54","7387.73","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 11}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,2,"delete","20.03","7.00","49.94","18.57","7387.96","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 12}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,3,"delete","18.60","7.00","53.78","20.59","7387.95","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 13}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,4,"delete","18.75","7.00","53.33","19.97","7387.76","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 14}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,5,"delete","18.89","7.00","52.94","19.39","7387.91","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 15}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,6,"delete","11.42","7.00","87.57","33.57","7388.15","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 16}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,7,"delete","20.26","7.00","49.35","18.44","7387.88","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 17}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,8,"delete","19.41","8.00","51.51","18.69","7387.65","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 18}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,9,"delete","18.63","8.00","53.67","18.84","7387.88","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 19}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,10,"delete","18.79","7.00","53.22","18.82","7388.04","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 20}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,24,1,"delete","156.49","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,2,"delete","78.47","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,3,"delete","85.84","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,4,"delete","86.00","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,5,"delete","85.21","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,6,"delete","85.90","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,7,"delete","85.46","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,8,"delete","85.17","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,9,"delete","78.29","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,10,"delete","85.24","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,24,1,"delete","36.92","23.00","27.08","14.06","7391.70","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 11}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,2,"delete","34.91","23.00","28.64","13.90","7391.48","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 12}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,3,"delete","35.06","24.00","28.52","13.84","7391.85","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 13}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,4,"delete","35.54","23.00","28.14","13.93","7392.10","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 14}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,5,"delete","35.33","24.00","28.31","15.10","7392.00","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 15}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,6,"delete","35.22","24.00","28.39","14.13","7392.20","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 16}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,7,"delete","28.23","23.00","35.42","18.58","7391.73","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 17}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,8,"delete","35.03","24.00","28.54","13.88","7391.94","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 18}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,9,"delete","27.96","23.00","35.76","17.64","7391.96","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 19}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,10,"delete","34.49","24.00","29.00","13.99","7391.97","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 20}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",3,1,1,"simple","3426.54","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,2,"simple","3320.65","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,3,"simple","3303.50","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,4,"simple","3266.15","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,5,"simple","3324.13","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,6,"simple","3316.92","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,7,"simple","3316.72","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,8,"simple","3339.06","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,9,"simple","3302.75","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,10,"simple","3325.85","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,1,1,"simple","3269.34","393.00","0.92","3.41","7410.97","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 393, ""counters"": {}}"
"neo4j","optimized","steady",3,1,2,"simple","3264.34","388.00","0.92","3.29","7411.06","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 388, ""counters"": {}}"
"neo4j","optimized","steady",3,1,3,"simple","3298.26","404.00","0.91","3.43","7410.74","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 404, ""counters"": {}}"
"neo4j","optimized","steady",3,1,4,"simple","3301.47","420.00","0.91","3.45","7411.25","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 420, ""counters"": {}}"
"neo4j","optimized","steady",3,1,5,"simple","3283.17","389.00","0.91","3.31","7410.90","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 389, ""counters"": {}}"
"neo4j","optimized","steady",3,1,6,"simple","3242.61","401.00","0.93","3.30","7411.18","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 401, ""counters"": {}}"
"neo4j","optimized","steady",3,1,7,"simple","3249.88","397.00","0.92","3.39","7411.38","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 397, ""counters"": {}}"
"neo4j","optimized","steady",3,1,8,"simple","3254.19","402.00","0.92","3.42","7411.07","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 402, ""counters"": {}}"
"neo4j","optimized","steady",3,1,9,"simple","3248.89","388.00","0.92","3.31","7411.06","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 388, ""counters"": {}}"
"neo4j","optimized","steady",3,1,10,"simple","3243.71","392.00","0.92","3.31","7411.00","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 392, ""counters"": {}}"
"neo4j","optimized","warmup",3,2,1,"simple","76.10","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,2,"simple","75.59","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,3,"simple","75.13","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,4,"simple","74.92","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,5,"simple","75.28","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,6,"simple","74.90","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,7,"simple","74.43","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,8,"simple","73.86","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,9,"simple","74.44","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,10,"simple","74.22","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,2,1,"simple","24.04","0.00","124.77","13.50","7411.28","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,2,"simple","23.52","0.00","127.57","14.61","7410.81","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,3,"simple","23.03","0.00","130.24","14.05","7411.09","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,4,"simple","23.63","1.00","126.96","13.82","7410.98","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,5,"simple","23.85","0.00","125.80","13.88","7410.76","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,6,"simple","23.25","1.00","129.04","14.32","7411.09","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,7,"simple","23.74","0.00","126.35","14.47","7411.20","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,8,"simple","23.66","1.00","126.81","14.30","7410.69","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,9,"simple","23.32","0.00","128.65","14.22","7410.77","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,10,"simple","24.41","0.00","122.92","13.61","7410.94","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",3,3,1,"simple","134.39","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,2,"simple","134.16","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,3,"simple","132.92","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,4,"simple","130.62","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,5,"simple","132.54","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,6,"simple","132.83","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,7,"simple","137.34","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,8,"simple","132.53","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,9,"simple","134.37","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,10,"simple","132.46","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,3,1,"simple","80.29","5.00","37.36","6.15","7411.10","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Cornelius-Drub-Platz 5/6"", ""city"": ""Mainburg"", ""zip"": ""72462"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,3,2,"simple","81.36","5.00","36.87","6.22","7411.09","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Cornelius-Drub-Platz 5/6"", ""city"": ""Mainburg"", ""zip"": ""72462"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,3,3,"simple","81.20","5.00","36.94","6.20","7411.13","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Cornelius-Drub-Platz 5/6"", ""city"": ""Mainburg"", ""zip"": ""72462"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,3,4,"simple","82.83","6.00","36.22","6.94","7411.39","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Cornelius-Drub-Platz 5/6"", ""city"": ""Mainburg"", ""zip"": ""72462"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,3,5,"simple","82.01","6.00","36.58","6.08","7410.99","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Cornelius-Drub-Platz 5/6"", ""city"": ""Mainburg"", ""zip"": ""72462"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,3,6,"simple","82.11","5.00","36.54","6.47","7410.79","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Cornelius-Drub-Platz 5/6"", ""city"": ""Mainburg"", ""zip"": ""72462"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,3,7,"simple","82.76","6.00","36.25","7.16","7410.91","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Cornelius-Drub-Platz 5/6"", ""city"": ""Mainburg"", ""zip"": ""72462"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,3,8,"simple","81.47","5.00","36.82","6.98","7411.02","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Cornelius-Drub-Platz 5/6"", ""city"": ""Mainburg"", ""zip"": ""72462"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,3,9,"simple","82.35","6.00","36.43","6.68","7411.09","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Cornelius-Drub-Platz 5/6"", ""city"": ""Mainburg"", ""zip"": ""72462"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,3,10,"simple","81.72","5.00","36.71","7.33","7411.19","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Cornelius-Drub-Platz 5/6"", ""city"": ""Mainburg"", ""zip"": ""72462"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","warmup",3,4,1,"medium","824.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,2,"medium","806.83","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,3,"medium","1166.22","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,4,"medium","832.94","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,5,"medium","1212.89","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,6,"medium","892.17","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,7,"medium","1008.13","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,8,"medium","904.60","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,9,"medium","1158.15","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,10,"medium","806.09","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,4,1,"medium","1109.15","814.00","2.70","38.65","7447.25","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 814, ""counters"": {}}"
"neo4j","optimized","steady",3,4,2,"medium","771.37","486.00","3.89","18.05","7453.78","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 486, ""counters"": {}}"
"neo4j","optimized","steady",3,4,3,"medium","1007.70","721.00","2.98","33.76","7453.94","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 721, ""counters"": {}}"
"neo4j","optimized","steady",3,4,4,"medium","948.07","732.00","3.16","31.52","7453.94","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 732, ""counters"": {}}"
"neo4j","optimized","steady",3,4,5,"medium","849.04","559.00","3.53","33.99","7453.99","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 559, ""counters"": {}}"
"neo4j","optimized","steady",3,4,6,"medium","989.90","700.00","3.03","31.74","7454.04","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 700, ""counters"": {}}"
"neo4j","optimized","steady",3,4,7,"medium","885.13","571.00","3.39","32.98","7453.95","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 571, ""counters"": {}}"
"neo4j","optimized","steady",3,4,8,"medium","1001.56","717.00","3.00","35.22","7453.83","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 717, ""counters"": {}}"
"neo4j","optimized","steady",3,4,9,"medium","880.88","679.00","3.41","28.67","7453.92","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 679, ""counters"": {}}"
"neo4j","optimized","steady",3,4,10,"medium","900.40","609.00","3.33","35.25","7454.16","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 109, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 609, ""counters"": {}}"
"neo4j","optimized","warmup",3,5,1,"medium","64.79","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,2,"medium","62.57","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,3,"medium","63.00","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,4,"medium","62.97","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,5,"medium","64.51","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,6,"medium","64.33","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,7,"medium","63.36","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,8,"medium","63.27","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,9,"medium","63.87","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,10,"medium","64.26","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,5,1,"medium","12.64","10.00","237.32","42.96","7454.31","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,5,2,"medium","12.59","9.00","238.27","46.69","7454.31","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",3,5,3,"medium","12.69","10.00","236.36","42.76","7454.08","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,5,4,"medium","12.74","10.00","235.45","45.50","7454.17","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,5,5,"medium","12.54","10.00","239.26","42.92","7454.22","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,5,6,"medium","12.60","9.00","238.04","43.84","7453.91","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",3,5,7,"medium","12.85","10.00","233.49","42.87","7454.22","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,5,8,"medium","14.21","10.00","211.13","41.12","7454.43","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,5,9,"medium","12.67","10.00","236.82","42.54","7454.41","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,5,10,"medium","12.72","10.00","235.82","42.45","7454.10","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 1, ""first"": {""id"": 761953, ""name"": ""MXM Radiography Tablet Markers L and R for Radiographers HOT PINK"", ""price"": 8.989999771118164, ""stock"": 7, ""created_at"": ""2023-06-05T02:37:51.000000000+00:00"", ""updated_at"": ""2023-09-09T13:13:50.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","warmup",3,6,1,"medium","78.52","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,2,"medium","76.10","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,3,"medium","75.18","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,4,"medium","173.46","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,5,"medium","75.97","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,6,"medium","75.83","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,7,"medium","75.71","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,8,"medium","75.76","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,9,"medium","76.11","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,10,"medium","75.84","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,6,1,"medium","24.09","3.00","124.51","16.32","7454.39","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,6,2,"medium","24.34","3.00","123.27","15.24","7454.32","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,6,3,"medium","24.24","3.00","123.74","15.68","7454.45","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,6,4,"medium","23.96","3.00","125.19","15.91","7454.47","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,6,5,"medium","24.46","3.00","122.63","15.55","7454.76","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,6,6,"medium","24.20","2.00","123.99","16.14","7454.54","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,6,7,"medium","24.35","3.00","123.21","15.42","7454.19","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,6,8,"medium","24.14","3.00","124.27","17.61","7454.37","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,6,9,"medium","24.23","3.00","123.82","16.64","7454.69","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,6,10,"medium","24.30","3.00","123.46","16.81","7454.42","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",3,7,1,"complex","208.96","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,2,"complex","213.54","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,3,"complex","187.05","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,4,"complex","187.66","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,5,"complex","192.37","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,6,"complex","186.79","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,7,"complex","187.44","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,8,"complex","187.64","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,9,"complex","191.83","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,10,"complex","199.58","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,7,1,"complex","138.32","47.00","21.69","11.53","7454.46","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 47, ""counters"": {}}"
"neo4j","optimized","steady",3,7,2,"complex","138.61","46.00","21.64","10.55","7454.55","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",3,7,3,"complex","137.18","46.00","21.87","10.67","7454.64","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",3,7,4,"complex","136.95","47.00","21.91","13.55","7454.38","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 47, ""counters"": {}}"
"neo4j","optimized","steady",3,7,5,"complex","142.85","46.00","21.00","10.36","7454.16","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",3,7,6,"complex","136.96","46.00","21.90","10.78","7454.48","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",3,7,7,"complex","137.53","45.00","21.81","12.15","7454.72","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 45, ""counters"": {}}"
"neo4j","optimized","steady",3,7,8,"complex","140.37","49.00","21.37","11.37","7454.80","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 49, ""counters"": {}}"
"neo4j","optimized","steady",3,7,9,"complex","141.96","47.00","21.13","11.26","7454.68","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 47, ""counters"": {}}"
"neo4j","optimized","steady",3,7,10,"complex","136.53","44.00","21.97","10.59","7454.82","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 44, ""counters"": {}}"
"neo4j","optimized","warmup",3,8,1,"complex","94.62","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,2,"complex","89.40","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,3,"complex","88.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,4,"complex","88.74","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,5,"complex","88.87","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,6,"complex","94.07","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,7,"complex","89.47","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,8,"complex","89.19","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,9,"complex","87.86","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,10,"complex","89.15","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,8,1,"complex","37.00","3.00","81.08","10.93","7455.37","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 487, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,8,2,"complex","36.99","3.00","81.11","10.97","7455.18","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 487, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,8,3,"complex","37.32","3.00","80.39","11.01","7454.87","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 487, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,8,4,"complex","36.33","3.00","82.57","11.34","7455.18","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 487, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,8,5,"complex","37.46","4.00","80.09","11.35","7455.32","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 487, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,8,6,"complex","37.82","3.00","79.32","10.53","7455.15","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 487, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,8,7,"complex","43.37","6.00","69.17","31.61","7455.24","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 487, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,8,8,"complex","36.91","3.00","81.27","10.98","7455.25","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 487, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,8,9,"complex","41.77","3.00","71.83","9.80","7455.31","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 487, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,8,10,"complex","40.78","3.00","73.56","67.98","7460.56","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 487, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",3,9,1,"complex","122.46","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,2,"complex","97.94","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,3,"complex","102.00","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,4,"complex","99.94","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,5,"complex","100.15","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,6,"complex","99.58","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,7,"complex","99.66","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,8,"complex","104.89","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,9,"complex","98.93","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,10,"complex","99.37","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,9,1,"complex","51.63","20.00","58.10","16.72","7468.47","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",3,9,2,"complex","47.92","23.00","62.61","17.49","7468.64","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,9,3,"complex","48.53","24.00","61.82","19.05","7468.53","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",3,9,4,"complex","49.22","18.00","60.95","15.59","7468.04","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",3,9,5,"complex","50.40","18.00","59.52","14.96","7468.06","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",3,9,6,"complex","49.12","17.00","61.07","16.63","7468.02","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",3,9,7,"complex","49.32","18.00","60.83","15.47","7468.19","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",3,9,8,"complex","48.40","17.00","61.98","17.16","7468.07","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",3,9,9,"complex","52.11","17.00","57.57","15.30","7468.22","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",3,9,10,"complex","48.99","18.00","61.23","15.59","7468.09","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","warmup",3,10,1,"very_complex","85.40","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,2,"very_complex","88.01","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,3,"very_complex","84.45","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,4,"very_complex","85.65","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,5,"very_complex","84.81","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,6,"very_complex","84.82","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,7,"very_complex","83.96","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,8,"very_complex","84.43","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,9,"very_complex","83.75","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,10,"very_complex","83.43","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,10,1,"very_complex","32.59","29.00","92.06","31.47","7468.15","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",3,10,2,"very_complex","32.70","29.00","91.75","31.17","7468.44","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",3,10,3,"very_complex","34.16","30.00","87.81","31.08","7468.18","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","steady",3,10,4,"very_complex","33.99","30.00","88.26","31.08","7468.44","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","steady",3,10,5,"very_complex","33.68","30.00","89.09","30.90","7468.29","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","steady",3,10,6,"very_complex","33.17","29.00","90.45","31.06","7468.30","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",3,10,7,"very_complex","33.47","29.00","89.64","31.06","7468.65","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",3,10,8,"very_complex","36.06","32.00","83.20","30.69","7468.33","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",3,10,9,"very_complex","34.59","31.00","86.74","30.98","7468.08","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",3,10,10,"very_complex","33.68","30.00","89.08","31.03","7468.28","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","warmup",3,11,1,"very_complex","230.15","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,2,"very_complex","214.81","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,3,"very_complex","211.76","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,4,"very_complex","207.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,5,"very_complex","226.13","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,6,"very_complex","206.03","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,7,"very_complex","220.03","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,8,"very_complex","226.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,9,"very_complex","208.69","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,10,"very_complex","220.82","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,11,1,"very_complex","173.81","168.00","17.26","25.30","7468.09","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 168, ""counters"": {}}"
"neo4j","optimized","steady",3,11,2,"very_complex","155.13","146.00","19.34","25.56","7468.07","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 146, ""counters"": {}}"
"neo4j","optimized","steady",3,11,3,"very_complex","156.14","147.00","19.21","25.48","7468.56","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 147, ""counters"": {}}"
"neo4j","optimized","steady",3,11,4,"very_complex","158.82","150.00","18.89","26.06","7468.60","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 150, ""counters"": {}}"
"neo4j","optimized","steady",3,11,5,"very_complex","168.62","158.00","17.79","27.06","7468.21","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 158, ""counters"": {}}"
"neo4j","optimized","steady",3,11,6,"very_complex","160.08","154.00","18.74","25.77","7468.31","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 154, ""counters"": {}}"
"neo4j","optimized","steady",3,11,7,"very_complex","172.60","153.00","17.38","25.61","7468.48","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 153, ""counters"": {}}"
"neo4j","optimized","steady",3,11,8,"very_complex","157.48","148.00","19.05","25.56","7468.30","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 148, ""counters"": {}}"
"neo4j","optimized","steady",3,11,9,"very_complex","171.83","154.00","17.46","25.30","7468.31","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 154, ""counters"": {}}"
"neo4j","optimized","steady",3,11,10,"very_complex","187.27","151.00","16.02","23.26","7468.08","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 151, ""counters"": {}}"
"neo4j","optimized","warmup",3,12,1,"very_complex","103.62","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,2,"very_complex","104.78","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,3,"very_complex","106.36","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,4,"very_complex","105.41","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,5,"very_complex","102.84","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,6,"very_complex","104.59","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,7,"very_complex","105.63","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,8,"very_complex","103.52","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,9,"very_complex","104.70","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,10,"very_complex","104.61","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,12,1,"very_complex","52.67","49.00","56.96","29.15","7468.08","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 49, ""counters"": {}}"
"neo4j","optimized","steady",3,12,2,"very_complex","56.82","53.00","52.80","28.98","7468.43","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 53, ""counters"": {}}"
"neo4j","optimized","steady",3,12,3,"very_complex","53.04","50.00","56.56","31.76","7468.52","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 50, ""counters"": {}}"
"neo4j","optimized","steady",3,12,4,"very_complex","54.27","51.00","55.28","29.00","7468.14","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 51, ""counters"": {}}"
"neo4j","optimized","steady",3,12,5,"very_complex","52.52","49.00","57.12","29.13","7468.25","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 49, ""counters"": {}}"
"neo4j","optimized","steady",3,12,6,"very_complex","52.00","49.00","57.70","29.54","7468.17","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 49, ""counters"": {}}"
"neo4j","optimized","steady",3,12,7,"very_complex","55.40","52.00","54.15","29.45","7468.07","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 52, ""counters"": {}}"
"neo4j","optimized","steady",3,12,8,"very_complex","52.85","50.00","56.77","29.87","7468.34","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 50, ""counters"": {}}"
"neo4j","optimized","steady",3,12,9,"very_complex","53.53","50.00","56.05","28.87","7468.69","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 50, ""counters"": {}}"
"neo4j","optimized","steady",3,12,10,"very_complex","52.89","50.00","56.72","29.17","7468.39","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 50, ""counters"": {}}"
"neo4j","optimized","warmup",3,13,1,"create","65.25","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,2,"create","64.97","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,3,"create","64.79","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,4,"create","64.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,5,"create","59.36","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,6,"create","65.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,7,"create","64.51","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,8,"create","65.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,9,"create","64.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,10,"create","64.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,13,1,"create","7.41","2.00","404.74","61.87","7468.54","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13563}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,2,"create","14.41","2.00","208.18","31.07","7468.66","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13564}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,3,"create","7.40","3.00","405.15","53.55","7468.45","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13565}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,4,"create","14.10","2.00","212.82","27.28","7468.42","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13566}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,5,"create","7.36","3.00","407.56","53.43","7468.64","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13567}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,6,"create","14.39","3.00","208.43","28.89","7468.48","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13568}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,7,"create","14.89","3.00","201.48","32.70","7468.45","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13569}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,8,"create","7.38","3.00","406.48","52.41","7468.63","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13570}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,9,"create","7.47","2.00","401.38","55.68","7468.41","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13571}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,10,"create","14.28","3.00","210.04","27.62","7468.46","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13572}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",3,14,1,"create","65.95","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,2,"create","65.66","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,3,"create","66.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,4,"create","65.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,5,"create","65.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,6,"create","66.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,7,"create","59.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,8,"create","66.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,9,"create","65.20","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,10,"create","65.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,14,1,"create","15.68","4.00","191.33","27.54","7469.10","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19913}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,2,"create","15.53","4.00","193.15","27.15","7469.00","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19914}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,3,"create","15.08","4.00","198.91","28.30","7469.20","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19915}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,4,"create","15.44","4.00","194.28","26.98","7468.97","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19916}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,5,"create","15.11","4.00","198.61","27.53","7468.96","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19917}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,6,"create","15.23","4.00","196.99","30.12","7469.30","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19918}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,7,"create","8.98","4.00","334.15","48.66","7469.23","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19919}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,8,"create","15.64","5.00","191.80","27.38","7469.30","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19920}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,9,"create","16.13","4.00","185.97","26.68","7469.05","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19921}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,10,"create","15.43","4.00","194.48","27.04","7468.96","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19922}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",3,15,1,"create","71.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,2,"create","62.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,3,"create","70.10","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,4,"create","70.79","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,5,"create","67.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,6,"create","67.76","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,7,"create","68.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,8,"create","67.89","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,9,"create","60.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,10,"create","68.74","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,15,1,"create","17.16","6.00","174.85","27.76","7470.86","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14944}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,2,"create","17.99","5.00","166.76","28.28","7470.92","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14945}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,3,"create","17.79","6.00","168.62","29.24","7470.68","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14946}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,4,"create","17.81","6.00","168.44","30.60","7470.94","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14947}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,5,"create","17.88","6.00","167.77","26.56","7471.01","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14948}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,6,"create","17.66","6.00","169.85","27.08","7470.88","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14949}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,7,"create","17.69","6.00","169.62","29.29","7471.28","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14950}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,8,"create","17.24","6.00","174.06","27.46","7471.34","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14951}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,9,"create","17.91","6.00","167.54","27.71","7471.49","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14952}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,10,"create","17.09","5.00","175.58","31.88","7471.10","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14953}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",3,16,1,"create","102.25","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,2,"create","101.00","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,3,"create","99.99","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,4,"create","96.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,5,"create","111.93","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,6,"create","101.32","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,7,"create","100.11","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,8,"create","102.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,9,"create","101.57","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,10,"create","96.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,16,1,"create","52.36","41.00","57.29","27.66","7471.78","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104854}, ""server_ms"": 41, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,2,"create","51.47","43.00","58.29","26.54","7471.64","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104855}, ""server_ms"": 43, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,3,"create","50.58","42.00","59.31","27.95","7471.58","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104856}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,4,"create","50.72","40.00","59.15","25.95","7471.34","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104857}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,5,"create","50.85","39.00","59.00","25.79","7471.68","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104858}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,6,"create","50.03","39.00","59.97","27.86","7471.51","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104859}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,7,"create","50.59","39.00","59.30","25.79","7471.52","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104860}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,8,"create","48.08","39.00","62.40","27.14","7472.04","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104861}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,9,"create","42.33","37.00","70.86","31.45","7472.08","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104862}, ""server_ms"": 37, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,10,"create","51.23","43.00","58.55","26.16","7471.61","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104864}, ""server_ms"": 43, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",3,17,1,"update","488.29","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,2,"update","482.90","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,3,"update","498.19","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,4,"update","508.70","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,5,"update","487.81","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,6,"update","486.04","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,7,"update","486.35","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,8,"update","482.82","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,9,"update","520.98","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,10,"update","497.21","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,17,1,"update","429.76","423.00","6.98","25.46","7472.14","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 140}, ""server_ms"": 423, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,2,"update","435.82","422.00","6.88","25.18","7471.67","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 143}, ""server_ms"": 422, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,3,"update","436.03","432.00","6.88","25.03","7471.91","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 147}, ""server_ms"": 432, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,4,"update","438.23","424.00","6.85","24.99","7471.97","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 149}, ""server_ms"": 424, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,5,"update","461.11","447.00","6.51","24.96","7472.10","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 153}, ""server_ms"": 447, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,6,"update","440.00","426.00","6.82","25.04","7471.95","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 155}, ""server_ms"": 426, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,7,"update","443.48","427.00","6.76","25.23","7472.13","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 158}, ""server_ms"": 427, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,8,"update","447.47","424.00","6.70","25.14","7472.29","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 161}, ""server_ms"": 424, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,9,"update","436.22","433.00","6.88","24.99","7472.05","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 165}, ""server_ms"": 433, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,10,"update","466.23","437.00","6.43","25.55","7471.74","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 167}, ""server_ms"": 437, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,18,1,"update","64.52","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,2,"update","54.09","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,3,"update","54.70","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,4,"update","53.76","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,5,"update","53.76","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,6,"update","53.56","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,7,"update","53.71","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,8,"update","53.88","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,9,"update","53.88","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,10,"update","53.66","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,18,1,"update","3.58","1.00","837.29","98.00","7472.23","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,2,"update","3.60","1.00","832.52","98.61","7472.15","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,3,"update","3.52","1.00","852.56","92.41","7472.23","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,4,"update","3.65","2.00","822.93","89.39","7472.38","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,5,"update","3.44","1.00","871.43","102.88","7472.55","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,6,"update","3.59","1.00","836.35","96.80","7472.45","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,7,"update","4.62","1.00","649.22","70.48","7472.17","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,8,"update","3.47","1.00","865.43","96.96","7472.39","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,9,"update","3.52","2.00","851.72","108.28","7472.36","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,10,"update","3.59","1.00","836.14","90.62","7472.11","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,19,1,"update","69.28","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,2,"update","63.18","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,3,"update","70.85","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,4,"update","70.24","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,5,"update","69.84","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,6,"update","70.50","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,7,"update","70.30","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,8,"update","70.56","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,9,"update","61.43","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,10,"update","69.10","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,19,1,"update","19.71","6.00","152.22","23.89","7472.29","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 95}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,2,"update","19.61","16.00","153.01","24.53","7472.16","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 107}, ""server_ms"": 16, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,3,"update","19.09","16.00","157.13","24.11","7472.25","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 119}, ""server_ms"": 16, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,4,"update","18.98","6.00","158.08","24.22","7472.57","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 122}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,5,"update","19.03","15.00","157.68","24.22","7472.29","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 134}, ""server_ms"": 15, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,6,"update","18.85","6.00","159.15","24.07","7472.40","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 140}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,7,"update","19.22","15.00","156.10","25.74","7472.30","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 152}, ""server_ms"": 15, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,8,"update","19.85","6.00","151.11","23.83","7472.37","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 158}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,9,"update","13.65","9.00","219.81","34.66","7472.29","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 170}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,10,"update","18.83","16.00","159.28","26.17","7472.19","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 182}, ""server_ms"": 16, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,20,1,"update","63.19","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,2,"update","63.27","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,3,"update","63.16","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,4,"update","66.13","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,5,"update","64.41","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,6,"update","66.65","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,7,"update","56.38","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,8,"update","63.19","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,9,"update","55.55","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,10,"update","63.37","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,20,1,"update","13.10","9.00","229.08","27.38","7472.26","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,2,"update","13.46","1.00","222.81","23.80","7472.69","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,3,"update","14.45","12.00","207.66","24.04","7472.49","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,4,"update","13.67","1.00","219.46","23.83","7472.50","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,5,"update","13.32","0.00","225.26","32.99","7472.50","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,6,"update","12.84","10.00","233.60","24.96","7472.90","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,7,"update","5.42","0.00","553.70","58.20","7472.52","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,8,"update","13.06","10.00","229.65","24.70","7472.66","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,9,"update","13.38","10.00","224.20","24.30","7472.54","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,10,"update","14.06","1.00","213.31","22.54","7472.64","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,21,1,"delete","57.05","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,2,"delete","65.74","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,3,"delete","64.43","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,4,"delete","57.95","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,5,"delete","64.86","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,6,"delete","65.03","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,7,"delete","65.01","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,8,"delete","65.96","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,9,"delete","65.23","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,10,"delete","65.78","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,21,1,"delete","15.33","12.00","195.65","25.78","7472.82","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 31}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,2,"delete","14.68","12.00","204.40","25.05","7472.74","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 32}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,3,"delete","8.01","6.00","374.56","46.19","7472.60","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 33}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,4,"delete","14.57","3.00","205.93","25.85","7472.97","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 34}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,5,"delete","15.00","12.00","200.00","30.62","7472.74","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 35}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,6,"delete","15.53","13.00","193.23","25.68","7472.70","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 36}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,7,"delete","8.17","6.00","367.33","44.77","7472.42","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 37}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,8,"delete","15.61","14.00","192.24","23.97","7472.63","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 38}, ""server_ms"": 14, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,9,"delete","14.49","12.00","207.11","25.32","7472.87","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 39}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,10,"delete","14.92","3.00","201.01","25.88","7472.68","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 40}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",3,22,1,"delete","63.33","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,2,"delete","63.24","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,3,"delete","63.26","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,4,"delete","64.64","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,5,"delete","57.07","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,6,"delete","63.59","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,7,"delete","63.57","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,8,"delete","63.19","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,9,"delete","63.16","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,10,"delete","64.67","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,22,1,"delete","12.98","10.00","231.20","27.74","7472.69","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 31}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,22,2,"delete","13.08","11.00","229.35","25.20","7472.76","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 32}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,22,3,"delete","13.05","10.00","229.81","25.62","7472.80","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 33}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,22,4,"delete","13.03","11.00","230.16","28.76","7472.79","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 34}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,22,5,"delete","12.98","1.00","231.16","29.17","7473.08","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 35}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,6,"delete","13.10","1.00","228.97","106.25","7473.21","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 36}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,7,"delete","13.19","10.00","227.45","25.90","7473.50","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 37}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,22,8,"delete","13.99","1.00","214.36","23.81","7473.13","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 38}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,9,"delete","6.73","1.00","445.77","57.04","7473.42","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 39}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,10,"delete","14.06","2.00","213.32","23.73","7473.38","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 40}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",3,23,1,"delete","68.79","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,2,"delete","62.86","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,3,"delete","69.04","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,4,"delete","70.26","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,5,"delete","70.48","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,6,"delete","70.08","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,7,"delete","63.05","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,8,"delete","69.24","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,9,"delete","70.22","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,10,"delete","69.37","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,23,1,"delete","20.08","7.00","149.41","25.14","7473.48","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 31}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,2,"delete","12.63","10.00","237.44","39.62","7473.66","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 32}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,23,3,"delete","11.46","9.00","261.75","43.82","7473.54","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 33}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",3,23,4,"delete","18.98","17.00","158.07","25.75","7473.67","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 34}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",3,23,5,"delete","19.23","7.00","156.03","25.31","7473.63","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 35}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,6,"delete","20.33","18.00","147.59","30.11","7473.79","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 36}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",3,23,7,"delete","11.67","10.00","257.18","42.82","7473.78","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 37}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,23,8,"delete","20.06","18.00","149.53","23.82","7473.72","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 38}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",3,23,9,"delete","18.85","17.00","159.11","25.70","7473.81","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 39}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",3,23,10,"delete","18.82","15.00","159.37","32.21","7473.59","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 40}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","warmup",3,24,1,"delete","85.85","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,2,"delete","85.42","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,3,"delete","80.05","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,4,"delete","85.13","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,5,"delete","87.08","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,6,"delete","85.49","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,7,"delete","85.64","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,8,"delete","81.33","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,9,"delete","85.71","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,10,"delete","86.25","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,24,1,"delete","34.36","32.00","87.32","27.04","7473.81","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 31}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",3,24,2,"delete","28.47","25.00","105.36","32.35","7473.65","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 32}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",3,24,3,"delete","36.10","33.00","83.11","27.95","7473.92","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 33}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",3,24,4,"delete","35.36","32.00","84.83","27.00","7473.74","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 34}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",3,24,5,"delete","35.63","24.00","84.21","28.32","7473.90","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 35}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,6,"delete","28.62","25.00","104.81","30.75","7473.93","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 36}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",3,24,7,"delete","27.82","23.00","107.84","32.14","7473.93","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 37}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,8,"delete","34.39","23.00","87.24","27.22","7473.88","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 38}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,9,"delete","36.77","35.00","81.59","26.54","7474.18","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 39}, ""server_ms"": 35, ""counters"": {}}"
"neo4j","optimized","steady",3,24,10,"delete","34.18","32.00","87.77","25.82","7474.12","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 40}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","warmup",5,1,1,"simple","5485.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,2,"simple","5482.49","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,3,"simple","5350.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,4,"simple","5431.73","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,5,"simple","5395.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,6,"simple","5500.14","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,7,"simple","5416.03","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,8,"simple","5402.63","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,9,"simple","5408.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,10,"simple","5385.95","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,1,1,"simple","5386.02","495.00","0.93","4.10","7490.71","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 495, ""counters"": {}}"
"neo4j","optimized","steady",5,1,2,"simple","5406.37","457.00","0.92","3.94","7490.92","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 457, ""counters"": {}}"
"neo4j","optimized","steady",5,1,3,"simple","5378.72","461.00","0.93","3.93","7490.81","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 461, ""counters"": {}}"
"neo4j","optimized","steady",5,1,4,"simple","5405.77","457.00","0.92","3.91","7490.50","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 457, ""counters"": {}}"
"neo4j","optimized","steady",5,1,5,"simple","5250.36","443.00","0.95","3.95","7490.74","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 443, ""counters"": {}}"
"neo4j","optimized","steady",5,1,6,"simple","5301.26","477.00","0.94","3.98","7490.55","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 477, ""counters"": {}}"
"neo4j","optimized","steady",5,1,7,"simple","5336.95","463.00","0.94","4.09","7490.65","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 463, ""counters"": {}}"
"neo4j","optimized","steady",5,1,8,"simple","5301.47","451.00","0.94","3.98","7490.76","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 451, ""counters"": {}}"
"neo4j","optimized","steady",5,1,9,"simple","5304.48","488.00","0.94","3.93","7490.95","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 488, ""counters"": {}}"
"neo4j","optimized","steady",5,1,10,"simple","5330.12","469.00","0.94","3.85","7490.92","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 469, ""counters"": {}}"
"neo4j","optimized","warmup",5,2,1,"simple","91.88","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,2,"simple","88.88","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,3,"simple","89.70","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,4,"simple","88.46","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,5,"simple","87.82","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,6,"simple","89.08","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,7,"simple","87.97","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,8,"simple","88.35","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,9,"simple","88.26","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,10,"simple","88.47","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,2,1,"simple","36.99","1.00","135.16","9.36","7491.06","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,2,"simple","36.92","0.00","135.43","9.09","7491.09","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,3,"simple","36.56","0.00","136.77","9.33","7490.86","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,4,"simple","37.08","1.00","134.84","9.11","7490.86","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,5,"simple","37.79","1.00","132.30","8.97","7490.72","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,6,"simple","36.95","0.00","135.33","9.78","7490.90","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,7,"simple","36.75","0.00","136.05","10.67","7490.95","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,8,"simple","36.44","1.00","137.21","9.10","7490.86","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,9,"simple","36.63","0.00","136.50","9.64","7490.84","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,10,"simple","36.89","0.00","135.53","9.32","7490.97","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",5,3,1,"simple","192.34","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,2,"simple","185.42","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,3,"simple","186.64","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,4,"simple","183.73","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,5,"simple","204.13","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,6,"simple","185.44","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,7,"simple","189.31","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,8,"simple","190.38","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,9,"simple","188.38","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,10,"simple","190.40","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,3,1,"simple","134.47","5.00","37.18","4.46","7490.77","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Tabea-Rosenow-Weg 51"", ""city"": ""Artern"", ""zip"": ""83144"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,3,2,"simple","136.11","5.00","36.74","4.45","7490.95","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Tabea-Rosenow-Weg 51"", ""city"": ""Artern"", ""zip"": ""83144"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,3,3,"simple","135.27","5.00","36.96","4.66","7490.89","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Tabea-Rosenow-Weg 51"", ""city"": ""Artern"", ""zip"": ""83144"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,3,4,"simple","133.36","5.00","37.49","4.65","7491.09","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Tabea-Rosenow-Weg 51"", ""city"": ""Artern"", ""zip"": ""83144"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,3,5,"simple","142.71","6.00","35.03","4.35","7491.15","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Tabea-Rosenow-Weg 51"", ""city"": ""Artern"", ""zip"": ""83144"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,3,6,"simple","133.93","5.00","37.33","4.61","7491.20","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Tabea-Rosenow-Weg 51"", ""city"": ""Artern"", ""zip"": ""83144"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,3,7,"simple","135.69","5.00","36.85","4.51","7490.52","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Tabea-Rosenow-Weg 51"", ""city"": ""Artern"", ""zip"": ""83144"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,3,8,"simple","136.52","6.00","36.62","4.58","7491.06","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Tabea-Rosenow-Weg 51"", ""city"": ""Artern"", ""zip"": ""83144"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,3,9,"simple","134.73","5.00","37.11","4.72","7491.06","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Tabea-Rosenow-Weg 51"", ""city"": ""Artern"", ""zip"": ""83144"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,3,10,"simple","132.95","5.00","37.61","4.56","7491.15","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Tabea-Rosenow-Weg 51"", ""city"": ""Artern"", ""zip"": ""83144"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","warmup",5,4,1,"medium","1080.73","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,2,"medium","1057.35","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,3,"medium","1047.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,4,"medium","2412.70","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,5,"medium","1254.17","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,6,"medium","1336.95","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,7,"medium","1402.49","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,8,"medium","1244.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,9,"medium","1302.41","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,10,"medium","1298.73","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,4,1,"medium","1259.97","777.00","3.97","40.28","7548.97","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 777, ""counters"": {}}"
"neo4j","optimized","steady",5,4,2,"medium","1232.78","774.00","4.06","40.12","7549.04","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 774, ""counters"": {}}"
"neo4j","optimized","steady",5,4,3,"medium","1235.26","743.00","4.05","39.32","7549.06","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 743, ""counters"": {}}"
"neo4j","optimized","steady",5,4,4,"medium","1247.63","759.00","4.01","39.60","7549.37","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 759, ""counters"": {}}"
"neo4j","optimized","steady",5,4,5,"medium","1243.57","766.00","4.02","40.20","7549.59","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 766, ""counters"": {}}"
"neo4j","optimized","steady",5,4,6,"medium","1257.35","761.00","3.98","39.80","7549.82","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 761, ""counters"": {}}"
"neo4j","optimized","steady",5,4,7,"medium","1268.83","765.00","3.94","40.04","7550.10","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 765, ""counters"": {}}"
"neo4j","optimized","steady",5,4,8,"medium","1262.38","755.00","3.96","39.27","7550.12","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 755, ""counters"": {}}"
"neo4j","optimized","steady",5,4,9,"medium","1262.52","801.00","3.96","39.16","7549.99","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 801, ""counters"": {}}"
"neo4j","optimized","steady",5,4,10,"medium","1266.93","760.00","3.95","39.45","7550.25","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 169, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 760, ""counters"": {}}"
"neo4j","optimized","warmup",5,5,1,"medium","63.65","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,2,"medium","64.85","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,3,"medium","65.13","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,4,"medium","62.77","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,5,"medium","65.14","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,6,"medium","64.52","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,7,"medium","63.14","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,8,"medium","62.84","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,9,"medium","64.60","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,10,"medium","65.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,5,1,"medium","96.93","94.00","51.58","78.42","7550.68","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 94, ""counters"": {}}"
"neo4j","optimized","steady",5,5,2,"medium","14.19","12.00","352.46","53.16","7550.57","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",5,5,3,"medium","14.70","10.00","340.19","51.17","7550.69","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,5,4,"medium","12.24","10.00","408.63","58.61","7550.47","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,5,5,"medium","14.37","12.00","347.95","51.75","7550.64","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",5,5,6,"medium","33.97","30.00","147.21","67.62","7550.71","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","steady",5,5,7,"medium","14.56","12.00","343.38","51.41","7550.47","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",5,5,8,"medium","15.30","10.00","326.82","48.80","7550.54","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,5,9,"medium","14.50","10.00","344.87","52.78","7550.53","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,5,10,"medium","12.19","10.00","410.31","58.29","7550.39","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","warmup",5,6,1,"medium","89.90","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,2,"medium","89.15","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,3,"medium","88.85","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,4,"medium","88.64","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,5,"medium","89.02","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,6,"medium","88.82","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,7,"medium","89.14","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,8,"medium","89.00","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,9,"medium","92.66","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,10,"medium","89.43","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,6,1,"medium","39.52","3.00","126.51","11.18","7550.70","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,6,2,"medium","37.97","3.00","131.69","11.73","7550.72","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,6,3,"medium","37.42","3.00","133.61","11.39","7550.73","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,6,4,"medium","37.47","3.00","133.43","11.47","7550.85","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,6,5,"medium","37.85","2.00","132.10","11.52","7550.33","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,6,6,"medium","37.39","3.00","133.72","11.51","7550.94","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,6,7,"medium","37.63","3.00","132.87","13.18","7550.82","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,6,8,"medium","37.04","2.00","134.98","11.32","7550.74","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,6,9,"medium","37.07","3.00","134.89","11.26","7550.60","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,6,10,"medium","39.42","3.00","126.85","11.23","7550.90","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",5,7,1,"complex","249.50","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,2,"complex","250.85","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,3,"complex","250.00","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,4,"complex","249.04","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,5,"complex","250.75","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,6,"complex","249.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,7,"complex","251.05","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,8,"complex","251.05","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,9,"complex","248.32","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,10,"complex","279.05","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,7,1,"complex","200.69","49.00","24.91","11.46","7550.36","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 49, ""counters"": {}}"
"neo4j","optimized","steady",5,7,2,"complex","211.51","48.00","23.64","10.84","7550.66","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 48, ""counters"": {}}"
"neo4j","optimized","steady",5,7,3,"complex","201.71","48.00","24.79","11.85","7550.26","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 48, ""counters"": {}}"
"neo4j","optimized","steady",5,7,4,"complex","199.56","46.00","25.05","11.60","7550.30","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",5,7,5,"complex","197.14","47.00","25.36","11.56","7550.85","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 47, ""counters"": {}}"
"neo4j","optimized","steady",5,7,6,"complex","200.48","48.00","24.94","11.47","7550.35","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 48, ""counters"": {}}"
"neo4j","optimized","steady",5,7,7,"complex","197.58","46.00","25.31","11.67","7550.69","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",5,7,8,"complex","199.93","47.00","25.01","11.66","7550.61","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 47, ""counters"": {}}"
"neo4j","optimized","steady",5,7,9,"complex","212.13","48.00","23.57","10.84","7550.52","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 48, ""counters"": {}}"
"neo4j","optimized","steady",5,7,10,"complex","200.27","48.00","24.97","11.46","7550.58","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 48, ""counters"": {}}"
"neo4j","optimized","warmup",5,8,1,"complex","112.35","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,2,"complex","110.79","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,3,"complex","110.18","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,4,"complex","110.45","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,5,"complex","111.50","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,6,"complex","118.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,7,"complex","109.92","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,8,"complex","110.67","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,9,"complex","110.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,10,"complex","109.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,8,1,"complex","60.61","3.00","82.50","9.09","7550.71","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 483, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,8,2,"complex","59.34","3.00","84.26","7.89","7550.56","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 483, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,8,3,"complex","62.22","4.00","80.35","8.45","7550.65","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 483, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,8,4,"complex","62.69","3.00","79.76","34.03","7558.03","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 483, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,8,5,"complex","60.11","3.00","83.18","8.12","7565.47","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 483, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,8,6,"complex","59.17","3.00","84.51","8.21","7565.12","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 483, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,8,7,"complex","59.23","3.00","84.42","8.07","7549.30","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 483, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,8,8,"complex","59.83","3.00","83.57","13.07","7549.49","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 483, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,8,9,"complex","58.77","3.00","85.08","9.86","7549.51","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 483, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,8,10,"complex","59.16","3.00","84.51","7.96","7549.42","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 483, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",5,9,1,"complex","124.07","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,2,"complex","124.04","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,3,"complex","122.62","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,4,"complex","120.89","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,5,"complex","124.68","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,6,"complex","122.15","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,7,"complex","120.43","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,8,"complex","121.38","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,9,"complex","122.57","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,10,"complex","121.52","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,9,1,"complex","70.40","21.00","71.03","18.32","7549.44","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,9,2,"complex","70.97","18.00","70.46","19.66","7549.51","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",5,9,3,"complex","79.35","29.00","63.02","27.50","7549.41","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",5,9,4,"complex","77.37","19.00","64.62","17.44","7549.45","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",5,9,5,"complex","69.96","19.00","71.47","15.84","7549.26","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",5,9,6,"complex","71.20","18.00","70.22","15.27","7549.58","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",5,9,7,"complex","74.08","20.00","67.49","16.51","7549.61","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",5,9,8,"complex","73.91","19.00","67.65","15.70","7549.45","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",5,9,9,"complex","69.18","21.00","72.28","16.18","7549.40","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,9,10,"complex","70.52","22.00","70.91","17.04","7549.59","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","warmup",5,10,1,"very_complex","87.34","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,2,"very_complex","86.81","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,3,"very_complex","86.54","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,4,"very_complex","87.02","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,5,"very_complex","86.43","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,6,"very_complex","86.72","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,7,"very_complex","86.26","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,8,"very_complex","88.36","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,9,"very_complex","86.07","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,10,"very_complex","86.93","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,10,1,"very_complex","35.44","31.00","141.08","44.71","7549.54","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",5,10,2,"very_complex","38.55","33.00","129.69","43.82","7549.52","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",5,10,3,"very_complex","36.04","32.00","138.74","81.76","7552.56","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",5,10,4,"very_complex","38.38","34.00","130.27","45.16","7555.75","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",5,10,5,"very_complex","35.62","31.00","140.37","44.54","7556.20","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",5,10,6,"very_complex","35.38","31.00","141.31","45.56","7552.68","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",5,10,7,"very_complex","37.28","32.00","134.13","44.81","7549.65","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",5,10,8,"very_complex","38.92","34.00","128.48","48.99","7549.61","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",5,10,9,"very_complex","36.83","32.00","135.77","44.75","7550.08","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",5,10,10,"very_complex","35.21","31.00","142.02","45.00","7550.05","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","warmup",5,11,1,"very_complex","218.33","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,2,"very_complex","215.02","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,3,"very_complex","214.02","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,4,"very_complex","215.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,5,"very_complex","215.08","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,6,"very_complex","218.18","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,7,"very_complex","227.76","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,8,"very_complex","218.54","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,9,"very_complex","215.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,10,"very_complex","220.61","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,11,1,"very_complex","162.38","149.00","30.79","40.83","7549.96","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 149, ""counters"": {}}"
"neo4j","optimized","steady",5,11,2,"very_complex","164.48","150.00","30.40","39.87","7550.08","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 150, ""counters"": {}}"
"neo4j","optimized","steady",5,11,3,"very_complex","166.46","153.00","30.04","40.39","7550.02","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 153, ""counters"": {}}"
"neo4j","optimized","steady",5,11,4,"very_complex","166.15","153.00","30.09","40.32","7549.96","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 153, ""counters"": {}}"
"neo4j","optimized","steady",5,11,5,"very_complex","166.85","154.00","29.97","40.21","7550.04","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 154, ""counters"": {}}"
"neo4j","optimized","steady",5,11,6,"very_complex","165.21","152.00","30.26","40.21","7549.73","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 152, ""counters"": {}}"
"neo4j","optimized","steady",5,11,7,"very_complex","169.83","156.00","29.44","40.84","7549.88","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 156, ""counters"": {}}"
"neo4j","optimized","steady",5,11,8,"very_complex","169.99","159.00","29.41","40.50","7549.88","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 159, ""counters"": {}}"
"neo4j","optimized","steady",5,11,9,"very_complex","167.10","159.00","29.92","41.31","7550.06","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 159, ""counters"": {}}"
"neo4j","optimized","steady",5,11,10,"very_complex","173.25","162.00","28.86","40.62","7549.95","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 162, ""counters"": {}}"
"neo4j","optimized","warmup",5,12,1,"very_complex","105.99","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,2,"very_complex","106.79","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,3,"very_complex","104.79","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,4,"very_complex","115.45","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,5,"very_complex","107.91","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,6,"very_complex","105.55","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,7,"very_complex","104.40","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,8,"very_complex","104.77","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,9,"very_complex","105.39","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,10,"very_complex","105.21","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,12,1,"very_complex","55.72","52.00","89.74","44.33","7549.84","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 52, ""counters"": {}}"
"neo4j","optimized","steady",5,12,2,"very_complex","56.35","53.00","88.74","44.30","7550.18","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 53, ""counters"": {}}"
"neo4j","optimized","steady",5,12,3,"very_complex","54.21","51.00","92.23","45.23","7549.76","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 51, ""counters"": {}}"
"neo4j","optimized","steady",5,12,4,"very_complex","53.96","50.00","92.67","44.66","7550.02","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 50, ""counters"": {}}"
"neo4j","optimized","steady",5,12,5,"very_complex","54.11","51.00","92.41","45.77","7550.26","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 51, ""counters"": {}}"
"neo4j","optimized","steady",5,12,6,"very_complex","55.08","52.00","90.78","44.29","7550.00","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 52, ""counters"": {}}"
"neo4j","optimized","steady",5,12,7,"very_complex","54.06","51.00","92.50","44.67","7550.22","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 51, ""counters"": {}}"
"neo4j","optimized","steady",5,12,8,"very_complex","55.00","52.00","90.91","44.27","7550.32","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 52, ""counters"": {}}"
"neo4j","optimized","steady",5,12,9,"very_complex","54.24","51.00","92.18","44.36","7550.06","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 51, ""counters"": {}}"
"neo4j","optimized","steady",5,12,10,"very_complex","54.77","51.00","91.29","44.47","7549.80","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 51, ""counters"": {}}"
"neo4j","optimized","warmup",5,13,1,"create","66.02","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,2,"create","67.07","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,3,"create","64.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,4,"create","64.42","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,5,"create","64.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,6,"create","64.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,7,"create","57.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,8,"create","64.40","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,9,"create","64.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,10,"create","64.51","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,13,1,"create","14.47","3.00","345.55","30.32","7550.29","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13583}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,2,"create","13.88","2.00","360.24","32.48","7550.13","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13584}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,3,"create","7.14","2.00","699.96","61.39","7550.16","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13585}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,4,"create","14.40","3.00","347.16","32.37","7550.21","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13586}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,5,"create","14.38","3.00","347.72","33.88","7550.42","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13587}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,6,"create","14.08","2.00","355.21","32.47","7550.08","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13588}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,7,"create","7.77","3.00","643.38","60.53","7550.18","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13589}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,8,"create","14.19","3.00","352.44","37.94","7550.24","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13590}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,9,"create","14.38","3.00","347.65","32.49","7550.19","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13591}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,10,"create","14.20","3.00","352.17","31.26","7550.04","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13592}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",5,14,1,"create","67.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,2,"create","65.48","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,3,"create","65.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,4,"create","66.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,5,"create","58.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,6,"create","65.45","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,7,"create","65.58","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,8,"create","66.51","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,9,"create","65.80","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,10,"create","66.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,14,1,"create","8.61","4.00","580.83","55.66","7551.18","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19933}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,2,"create","16.16","5.00","309.45","30.22","7551.38","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19934}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,3,"create","15.57","5.00","321.18","30.74","7551.25","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19935}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,4,"create","15.08","4.00","331.58","31.93","7551.34","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19936}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,5,"create","16.01","4.00","312.23","31.67","7551.44","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19937}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,6,"create","8.18","3.00","611.20","59.10","7551.41","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19938}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,7,"create","15.76","5.00","317.33","31.99","7551.36","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19939}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,8,"create","15.38","4.00","325.03","32.27","7551.55","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19940}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,9,"create","15.25","4.00","327.96","32.49","7551.20","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19941}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,10,"create","9.74","5.00","513.14","52.60","7551.28","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19942}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",5,15,1,"create","69.83","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,2,"create","60.99","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,3,"create","66.62","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,4,"create","67.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,5,"create","62.88","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,6,"create","71.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,7,"create","66.84","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,8,"create","67.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,9,"create","67.75","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,10,"create","68.01","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,15,1,"create","17.60","6.00","284.17","32.39","7551.46","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14965}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,2,"create","16.21","6.00","308.46","38.19","7551.69","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14966}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,3,"create","17.36","7.00","287.97","33.82","7551.34","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14967}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,4,"create","17.76","5.00","281.56","31.94","7551.39","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14968}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,5,"create","17.37","6.00","287.82","32.06","7551.23","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14969}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,6,"create","17.55","5.00","284.88","41.71","7551.49","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14970}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,7,"create","13.61","9.00","367.47","111.04","7551.39","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14971}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,8,"create","17.90","5.00","279.32","35.05","7551.97","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14972}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,9,"create","17.59","6.00","284.21","31.69","7551.72","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14973}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,10,"create","17.56","6.00","284.69","32.65","7551.56","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14974}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",5,16,1,"create","101.97","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,2,"create","101.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,3,"create","101.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,4,"create","103.66","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,5,"create","102.06","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,6,"create","102.14","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,7,"create","104.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,8,"create","101.58","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,9,"create","98.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,10,"create","103.08","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,16,1,"create","52.74","42.00","94.80","39.27","7552.27","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104878}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,2,"create","51.26","40.00","97.53","39.32","7552.18","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104879}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,3,"create","53.79","40.00","92.96","39.39","7552.44","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104880}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,4,"create","51.73","41.00","96.67","39.34","7551.96","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104881}, ""server_ms"": 41, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,5,"create","51.28","41.00","97.51","39.94","7552.20","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104882}, ""server_ms"": 41, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,6,"create","51.31","40.00","97.45","40.14","7552.04","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104883}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,7,"create","51.89","40.00","96.35","43.29","7552.64","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104884}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,8,"create","54.35","44.00","91.99","42.08","7552.18","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104885}, ""server_ms"": 44, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,9,"create","47.80","41.00","104.60","43.24","7552.33","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104886}, ""server_ms"": 41, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,10,"create","51.16","39.00","97.74","40.57","7552.76","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104887}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",5,17,1,"update","531.61","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,2,"update","516.97","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,3,"update","515.37","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,4,"update","539.24","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,5,"update","548.65","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,6,"update","564.41","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,7,"update","523.80","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,8,"update","541.82","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,9,"update","531.28","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,10,"update","517.45","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,17,1,"update","488.74","462.00","10.23","40.12","7552.70","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 222}, ""server_ms"": 462, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,2,"update","468.91","455.00","10.66","40.96","7552.55","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 227}, ""server_ms"": 455, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,3,"update","491.65","458.00","10.17","40.23","7552.47","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 231}, ""server_ms"": 458, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,4,"update","482.92","474.00","10.35","42.44","7552.35","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 238}, ""server_ms"": 474, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,5,"update","489.20","469.00","10.22","40.57","7552.35","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 243}, ""server_ms"": 469, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,6,"update","485.56","483.00","10.30","40.18","7552.35","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 249}, ""server_ms"": 483, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,7,"update","489.99","488.00","10.20","39.93","7552.29","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 254}, ""server_ms"": 488, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,8,"update","477.37","459.00","10.47","40.79","7552.41","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 257}, ""server_ms"": 459, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,9,"update","487.24","429.00","10.26","40.43","7552.36","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 260}, ""server_ms"": 429, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,10,"update","470.42","467.00","10.63","40.69","7552.30","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 269}, ""server_ms"": 467, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,18,1,"update","64.80","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,2,"update","53.71","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,3,"update","53.77","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,4,"update","54.19","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,5,"update","53.91","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,6,"update","53.88","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,7,"update","53.78","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,8,"update","53.87","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,9,"update","53.98","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,10,"update","54.08","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,18,1,"update","3.65","1.00","1370.05","94.32","7552.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,2,"update","3.67","1.00","1363.36","93.45","7552.31","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,3,"update","3.60","1.00","1387.23","94.09","7552.23","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,4,"update","3.55","1.00","1408.97","96.39","7552.33","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,5,"update","3.74","1.00","1336.68","91.12","7552.39","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,6,"update","3.74","1.00","1335.51","91.02","7552.46","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,7,"update","3.62","1.00","1381.75","95.56","7552.21","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,8,"update","3.80","2.00","1316.90","91.34","7552.51","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,9,"update","3.98","1.00","1255.46","85.85","7552.52","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,10,"update","3.61","1.00","1383.55","105.77","7552.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,19,1,"update","66.73","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,2,"update","71.93","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,3,"update","71.43","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,4,"update","72.05","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,5,"update","76.35","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,6,"update","74.33","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,7,"update","72.49","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,8,"update","73.80","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,9,"update","72.52","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,10,"update","73.21","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,19,1,"update","22.27","7.00","224.50","26.69","7552.35","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 155}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,2,"update","21.45","15.00","233.11","27.99","7552.33","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 173}, ""server_ms"": 15, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,3,"update","22.49","7.00","222.31","27.87","7552.48","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 185}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,4,"update","23.68","20.00","211.18","26.00","7552.45","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 209}, ""server_ms"": 20, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,5,"update","23.98","21.00","208.50","25.82","7552.31","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 227}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,6,"update","22.27","15.00","224.47","25.72","7552.86","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 233}, ""server_ms"": 15, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,7,"update","24.22","16.00","206.41","24.53","7552.56","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 248}, ""server_ms"": 16, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,8,"update","23.82","16.00","209.90","25.42","7552.46","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 263}, ""server_ms"": 16, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,9,"update","22.04","6.00","226.84","26.73","7552.56","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 275}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,10,"update","14.99","6.00","333.65","39.58","7552.35","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 290}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,20,1,"update","66.14","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,2,"update","66.88","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,3,"update","60.49","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,4,"update","66.52","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,5,"update","66.70","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,6,"update","66.42","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,7,"update","67.08","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,8,"update","67.57","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,9,"update","58.89","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,10,"update","66.32","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,20,1,"update","16.27","0.00","307.40","24.71","7552.42","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,2,"update","16.37","0.00","305.40","19.61","7552.62","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,3,"update","16.18","9.00","309.05","20.55","7552.38","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,4,"update","23.02","0.00","217.16","33.29","7552.83","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,5,"update","8.99","1.00","556.44","36.78","7552.64","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,6,"update","16.33","0.00","306.12","21.93","7552.78","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,7,"update","16.76","1.00","298.39","19.94","7552.31","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,8,"update","16.65","0.00","300.33","28.13","7552.71","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,9,"update","18.28","0.00","273.47","17.80","7552.66","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,10,"update","12.40","8.00","403.11","26.41","7552.69","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,21,1,"delete","70.52","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,2,"delete","57.49","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,3,"delete","59.52","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,4,"delete","64.68","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,5,"delete","65.97","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,6,"delete","65.14","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,7,"delete","64.89","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,8,"delete","66.17","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,9,"delete","64.98","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,10,"delete","65.04","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,21,1,"delete","14.11","12.00","354.33","35.83","7552.68","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 51}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,2,"delete","8.43","6.00","593.32","50.14","7552.70","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 52}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,3,"delete","14.41","2.00","347.03","30.25","7552.79","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 53}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,4,"delete","7.90","6.00","633.22","51.20","7552.69","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 54}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,5,"delete","15.07","3.00","331.83","29.01","7552.74","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 55}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,6,"delete","14.90","13.00","335.59","31.24","7552.62","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 56}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,7,"delete","13.97","12.00","357.89","31.46","7552.47","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 57}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,8,"delete","15.01","12.00","333.09","29.32","7552.76","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 58}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,9,"delete","7.15","4.00","699.37","59.96","7552.42","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 59}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,10,"delete","14.64","12.00","341.52","29.27","7552.87","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 60}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","warmup",5,22,1,"delete","63.55","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,2,"delete","63.06","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,3,"delete","64.26","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,4,"delete","63.34","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,5,"delete","62.76","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,6,"delete","63.15","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,7,"delete","56.58","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,8,"delete","66.03","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,9,"delete","63.16","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,10,"delete","55.81","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,22,1,"delete","14.26","11.00","350.54","25.43","7552.91","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 51}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",5,22,2,"delete","14.34","12.00","348.79","26.11","7552.93","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 52}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",5,22,3,"delete","5.60","1.00","892.60","63.57","7552.68","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 53}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,4,"delete","12.92","11.00","386.94","29.65","7552.92","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 54}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",5,22,5,"delete","12.47","10.00","400.96","28.39","7552.97","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 55}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,22,6,"delete","12.98","10.00","385.07","30.45","7552.94","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 56}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,22,7,"delete","6.67","1.00","749.28","53.36","7552.82","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 57}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,8,"delete","12.56","2.00","398.02","28.83","7552.83","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 58}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,9,"delete","12.93","1.00","386.77","32.96","7552.83","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 59}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,10,"delete","12.94","10.00","386.50","27.10","7553.00","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 60}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","warmup",5,23,1,"delete","62.30","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,2,"delete","69.03","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,3,"delete","69.21","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,4,"delete","69.49","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,5,"delete","70.52","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,6,"delete","69.69","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,7,"delete","71.01","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,8,"delete","64.01","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,9,"delete","69.73","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,10,"delete","68.91","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,23,1,"delete","18.32","8.00","272.93","33.67","7553.93","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 51}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,2,"delete","11.64","9.00","429.48","53.51","7554.06","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 52}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",5,23,3,"delete","19.28","17.00","259.34","34.31","7553.62","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 53}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",5,23,4,"delete","18.76","16.00","266.56","34.63","7553.72","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 54}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",5,23,5,"delete","20.23","17.00","247.19","31.73","7553.96","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 55}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",5,23,6,"delete","19.93","16.00","250.90","32.42","7553.76","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 56}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",5,23,7,"delete","11.88","10.00","420.77","53.04","7553.93","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 57}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,23,8,"delete","18.61","16.00","268.73","33.68","7554.10","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 58}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",5,23,9,"delete","17.21","6.00","290.45","36.17","7554.18","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 59}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,10,"delete","18.36","15.00","272.33","33.36","7554.09","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 60}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","warmup",5,24,1,"delete","88.00","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,2,"delete","86.83","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,3,"delete","80.79","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,4,"delete","84.83","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,5,"delete","85.97","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,6,"delete","87.32","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,7,"delete","84.90","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,8,"delete","88.92","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,9,"delete","88.62","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,10,"delete","85.60","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,24,1,"delete","36.98","24.00","135.20","36.45","7554.17","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 51}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,2,"delete","30.72","26.00","162.77","45.42","7553.75","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 52}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",5,24,3,"delete","46.15","43.00","108.35","39.66","7554.27","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 53}, ""server_ms"": 43, ""counters"": {}}"
"neo4j","optimized","steady",5,24,4,"delete","29.34","26.00","170.42","45.12","7554.00","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 54}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",5,24,5,"delete","37.16","26.00","134.54","37.22","7553.98","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 55}, ""server_ms"": 26, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,6,"delete","36.00","34.00","138.91","38.72","7554.12","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 56}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",5,24,7,"delete","36.47","35.00","137.08","38.71","7554.40","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 57}, ""server_ms"": 35, ""counters"": {}}"
"neo4j","optimized","steady",5,24,8,"delete","36.61","35.00","136.57","40.53","7553.95","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 58}, ""server_ms"": 35, ""counters"": {}}"
"neo4j","optimized","steady",5,24,9,"delete","28.20","25.00","177.28","47.28","7554.08","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 59}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",5,24,10,"delete","36.94","26.00","135.37","38.40","7554.11","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 60}, ""server_ms"": 26, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",10,1,1,"simple","10604.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,2,"simple","10643.67","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,3,"simple","10620.34","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,4,"simple","10636.65","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,5,"simple","10513.47","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,6,"simple","10528.70","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,7,"simple","10499.16","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,8,"simple","10603.85","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,9,"simple","10659.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,10,"simple","10530.77","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,1,1,"simple","10629.78","540.00","0.94","4.48","7597.29","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 540, ""counters"": {}}"
"neo4j","optimized","steady",10,1,2,"simple","10587.15","544.00","0.94","4.36","7597.05","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 544, ""counters"": {}}"
"neo4j","optimized","steady",10,1,3,"simple","10624.19","558.00","0.94","4.52","7597.36","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 558, ""counters"": {}}"
"neo4j","optimized","steady",10,1,4,"simple","10680.03","532.00","0.94","4.31","7597.25","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 532, ""counters"": {}}"
"neo4j","optimized","steady",10,1,5,"simple","10627.03","524.00","0.94","4.39","7597.26","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 524, ""counters"": {}}"
"neo4j","optimized","steady",10,1,6,"simple","10615.73","565.00","0.94","4.57","7597.43","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 565, ""counters"": {}}"
"neo4j","optimized","steady",10,1,7,"simple","10610.72","555.00","0.94","4.44","7597.40","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 555, ""counters"": {}}"
"neo4j","optimized","steady",10,1,8,"simple","10672.82","523.00","0.94","4.38","7597.38","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 523, ""counters"": {}}"
"neo4j","optimized","steady",10,1,9,"simple","10638.00","532.00","0.94","4.55","7597.40","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 532, ""counters"": {}}"
"neo4j","optimized","steady",10,1,10,"simple","10651.55","554.00","0.94","4.40","7597.41","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 554, ""counters"": {}}"
"neo4j","optimized","warmup",10,2,1,"simple","124.82","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,2,"simple","124.21","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,3,"simple","123.88","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,4,"simple","135.16","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,5,"simple","124.81","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,6,"simple","123.12","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,7,"simple","123.86","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,8,"simple","132.30","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,9,"simple","125.07","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,10,"simple","124.00","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,2,1,"simple","72.71","1.00","137.53","5.54","7597.20","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,2,"simple","74.74","0.00","133.81","6.05","7597.60","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,3,"simple","73.00","0.00","136.98","5.47","7597.43","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,4,"simple","73.40","0.00","136.24","5.23","7597.42","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,5,"simple","72.00","1.00","138.88","5.63","7597.54","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,6,"simple","74.69","0.00","133.89","5.42","7597.46","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,7,"simple","72.92","0.00","137.13","5.48","7597.58","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,8,"simple","84.63","1.00","118.17","5.17","7597.41","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,9,"simple","72.43","0.00","138.07","5.61","7597.47","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,10,"simple","73.93","0.00","135.27","5.36","7597.58","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",10,3,1,"simple","324.01","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,2,"simple","320.32","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,3,"simple","316.61","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,4,"simple","317.54","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,5,"simple","331.02","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,6,"simple","340.29","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,7,"simple","347.48","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,8,"simple","332.32","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,9,"simple","319.33","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,10,"simple","319.74","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,3,1,"simple","277.53","5.00","36.03","4.02","7597.51","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Girschnerallee 2"", ""city"": ""Wolgast"", ""zip"": ""10188"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",10,3,2,"simple","269.29","5.00","37.14","3.63","7597.17","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Girschnerallee 2"", ""city"": ""Wolgast"", ""zip"": ""10188"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",10,3,3,"simple","276.49","6.00","36.17","3.47","7597.81","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Girschnerallee 2"", ""city"": ""Wolgast"", ""zip"": ""10188"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,3,4,"simple","283.00","6.00","35.34","3.44","7597.39","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Girschnerallee 2"", ""city"": ""Wolgast"", ""zip"": ""10188"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,3,5,"simple","269.40","6.00","37.12","3.79","7597.52","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Girschnerallee 2"", ""city"": ""Wolgast"", ""zip"": ""10188"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,3,6,"simple","276.42","6.00","36.18","3.46","7597.84","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Girschnerallee 2"", ""city"": ""Wolgast"", ""zip"": ""10188"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,3,7,"simple","280.45","6.00","35.66","3.58","7597.40","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Girschnerallee 2"", ""city"": ""Wolgast"", ""zip"": ""10188"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,3,8,"simple","264.85","5.00","37.76","3.66","7597.64","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Girschnerallee 2"", ""city"": ""Wolgast"", ""zip"": ""10188"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",10,3,9,"simple","269.79","5.00","37.07","3.62","7597.54","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Girschnerallee 2"", ""city"": ""Wolgast"", ""zip"": ""10188"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",10,3,10,"simple","267.16","6.00","37.43","3.74","7597.61","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Girschnerallee 2"", ""city"": ""Wolgast"", ""zip"": ""10188"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",10,4,1,"medium","1688.30","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,2,"medium","3249.90","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,3,"medium","2076.40","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,4,"medium","2248.70","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,5,"medium","2216.64","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,6,"medium","2490.06","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,7,"medium","2199.04","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,8,"medium","1970.12","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,9,"medium","2062.87","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,10,"medium","2061.02","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,4,1,"medium","2012.85","1012.00","4.97","47.77","7658.29","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 1012, ""counters"": {}}"
"neo4j","optimized","steady",10,4,2,"medium","2136.01","1147.00","4.68","48.41","7658.37","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 1147, ""counters"": {}}"
"neo4j","optimized","steady",10,4,3,"medium","2015.52","1079.00","4.96","54.82","7658.47","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 1079, ""counters"": {}}"
"neo4j","optimized","steady",10,4,4,"medium","1957.17","947.00","5.11","43.93","7658.65","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 947, ""counters"": {}}"
"neo4j","optimized","steady",10,4,5,"medium","2107.93","1125.00","4.74","47.07","7658.54","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 1125, ""counters"": {}}"
"neo4j","optimized","steady",10,4,6,"medium","2206.86","1280.00","4.53","59.29","7658.72","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 1280, ""counters"": {}}"
"neo4j","optimized","steady",10,4,7,"medium","2018.67","1086.00","4.95","48.39","7658.94","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 1086, ""counters"": {}}"
"neo4j","optimized","steady",10,4,8,"medium","2211.17","1165.00","4.52","58.14","7658.90","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 1165, ""counters"": {}}"
"neo4j","optimized","steady",10,4,9,"medium","2395.26","1362.00","4.17","52.67","7658.84","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 1362, ""counters"": {}}"
"neo4j","optimized","steady",10,4,10,"medium","2248.42","1291.00","4.45","64.79","7659.02","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 269, ""created_at"": ""2021-02-14T05:20:50.000000000+00:00"", ""updated_at"": ""2021-08-27T03:51:00.000000000+00:00""}, ""server_ms"": 1291, ""counters"": {}}"
"neo4j","optimized","warmup",10,5,1,"medium","67.08","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,2,"medium","66.90","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,3,"medium","84.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,4,"medium","67.30","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,5,"medium","66.67","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,6,"medium","71.91","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,7,"medium","73.28","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,8,"medium","67.39","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,9,"medium","66.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,10,"medium","69.79","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,5,1,"medium","16.23","9.00","616.22","81.47","7658.72","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",10,5,2,"medium","17.13","11.00","583.81","75.00","7659.03","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,5,3,"medium","16.92","13.00","591.10","77.47","7659.35","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 13, ""counters"": {}}"
"neo4j","optimized","steady",10,5,4,"medium","17.57","12.00","569.08","80.95","7659.23","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",10,5,5,"medium","19.18","12.00","521.28","83.23","7658.99","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",10,5,6,"medium","16.29","12.00","613.70","83.64","7659.16","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",10,5,7,"medium","16.70","12.00","598.91","90.15","7659.09","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",10,5,8,"medium","18.98","14.00","526.88","84.78","7659.22","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",10,5,9,"medium","16.39","13.00","610.06","96.03","7659.31","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 13, ""counters"": {}}"
"neo4j","optimized","steady",10,5,10,"medium","16.63","11.00","601.41","83.14","7659.23","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","warmup",10,6,1,"medium","122.68","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,2,"medium","122.03","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,3,"medium","123.09","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,4,"medium","122.45","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,5,"medium","121.28","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,6,"medium","120.96","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,7,"medium","122.64","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,8,"medium","122.80","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,9,"medium","122.25","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,10,"medium","122.57","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,6,1,"medium","70.71","3.00","141.41","8.88","7665.04","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,6,2,"medium","70.09","3.00","142.68","8.01","7665.14","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,6,3,"medium","73.65","3.00","135.77","8.28","7664.96","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,6,4,"medium","70.87","2.00","141.10","7.98","7660.59","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,6,5,"medium","72.03","3.00","138.84","8.02","7656.27","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,6,6,"medium","70.01","3.00","142.83","8.50","7656.01","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,6,7,"medium","72.22","3.00","138.47","8.24","7656.15","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,6,8,"medium","70.77","3.00","141.30","7.81","7656.20","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,6,9,"medium","70.82","3.00","141.19","8.64","7655.94","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,6,10,"medium","70.68","3.00","141.47","10.63","7656.21","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 297, ""user_id"": 1157, ""product_id"": 1203951, ""rating"": 1, ""created_at"": ""2025-07-12T12:23:22.000000000+00:00""}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",10,7,1,"complex","414.90","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,2,"complex","410.88","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,3,"complex","415.96","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,4,"complex","412.14","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,5,"complex","416.32","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,6,"complex","410.75","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,7,"complex","411.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,8,"complex","427.38","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,9,"complex","424.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,10,"complex","413.39","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,7,1,"complex","377.89","56.00","26.46","14.84","7656.62","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 56, ""counters"": {}}"
"neo4j","optimized","steady",10,7,2,"complex","364.63","52.00","27.43","13.17","7656.47","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 52, ""counters"": {}}"
"neo4j","optimized","steady",10,7,3,"complex","366.04","52.00","27.32","18.51","7664.45","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 52, ""counters"": {}}"
"neo4j","optimized","steady",10,7,4,"complex","361.48","51.00","27.66","17.57","7664.37","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 51, ""counters"": {}}"
"neo4j","optimized","steady",10,7,5,"complex","362.92","50.00","27.55","13.79","7657.48","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 50, ""counters"": {}}"
"neo4j","optimized","steady",10,7,6,"complex","362.78","49.00","27.56","12.87","7658.28","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 49, ""counters"": {}}"
"neo4j","optimized","steady",10,7,7,"complex","360.17","51.00","27.76","13.78","7658.40","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 51, ""counters"": {}}"
"neo4j","optimized","steady",10,7,8,"complex","375.06","46.00","26.66","13.41","7658.06","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",10,7,9,"complex","370.69","51.00","26.98","12.56","7658.36","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 51, ""counters"": {}}"
"neo4j","optimized","steady",10,7,10,"complex","367.45","54.00","27.21","13.19","7658.09","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-10T23:28:48.000000000+00:00"", ""total"": 33.5699987411499}, ""server_ms"": 54, ""counters"": {}}"
"neo4j","optimized","warmup",10,8,1,"complex","167.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,2,"complex","166.11","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,3,"complex","166.19","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,4,"complex","166.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,5,"complex","163.42","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,6,"complex","165.45","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,7,"complex","165.76","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,8,"complex","164.45","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,9,"complex","164.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,10,"complex","165.68","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,8,1,"complex","112.94","3.00","88.54","6.47","7660.35","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 478, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,8,2,"complex","114.06","4.00","87.67","6.68","7657.42","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 478, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,8,3,"complex","114.67","3.00","87.21","5.54","7657.46","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 478, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,8,4,"complex","116.28","3.00","86.00","6.35","7657.32","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 478, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,8,5,"complex","124.46","3.00","80.35","5.72","7657.00","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 478, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,8,6,"complex","114.39","3.00","87.42","5.76","7657.47","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 478, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,8,7,"complex","127.32","5.00","78.54","6.30","7657.56","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 478, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",10,8,8,"complex","112.42","3.00","88.95","5.89","7657.70","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 478, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,8,9,"complex","119.62","3.00","83.60","12.46","7658.75","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 478, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,8,10,"complex","127.27","3.00","78.57","5.21","7660.43","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 478, ""first"": {""id"": 441, ""name"": ""JBL Flip 6 - Portable Speaker Blue"", ""avg_rating"": 5.0}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",10,9,1,"complex","180.29","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,2,"complex","175.80","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,3,"complex","174.59","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,4,"complex","178.41","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,5,"complex","175.73","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,6,"complex","174.93","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,7,"complex","178.30","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,8,"complex","188.34","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,9,"complex","172.43","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,10,"complex","175.44","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,9,1,"complex","122.69","23.00","81.50","18.92","7660.20","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",10,9,2,"complex","124.32","23.00","80.44","18.79","7660.47","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",10,9,3,"complex","125.29","23.00","79.82","18.28","7660.38","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",10,9,4,"complex","126.65","24.00","78.96","19.17","7660.48","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,9,5,"complex","129.16","26.00","77.42","19.16","7660.13","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",10,9,6,"complex","127.48","25.00","78.45","18.83","7660.36","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",10,9,7,"complex","122.71","22.00","81.49","19.74","7660.74","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",10,9,8,"complex","126.10","23.00","79.30","26.08","7660.94","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",10,9,9,"complex","126.21","23.00","79.23","19.45","7662.10","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",10,9,10,"complex","123.94","21.00","80.68","18.56","7662.13","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","warmup",10,10,1,"very_complex","93.65","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,2,"very_complex","94.10","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,3,"very_complex","94.51","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,4,"very_complex","94.17","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,5,"very_complex","95.75","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,6,"very_complex","95.04","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,7,"very_complex","93.60","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,8,"very_complex","94.82","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,9,"very_complex","100.60","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,10,"very_complex","96.24","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,10,1,"very_complex","48.09","35.00","207.96","66.95","7657.69","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 35, ""counters"": {}}"
"neo4j","optimized","steady",10,10,2,"very_complex","44.08","38.00","226.84","77.47","7657.64","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 38, ""counters"": {}}"
"neo4j","optimized","steady",10,10,3,"very_complex","43.40","36.00","230.44","75.67","7657.56","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 36, ""counters"": {}}"
"neo4j","optimized","steady",10,10,4,"very_complex","41.94","35.00","238.46","77.52","7657.57","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 35, ""counters"": {}}"
"neo4j","optimized","steady",10,10,5,"very_complex","42.82","35.00","233.54","75.29","7657.79","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 35, ""counters"": {}}"
"neo4j","optimized","steady",10,10,6,"very_complex","41.97","34.00","238.27","75.13","7657.53","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",10,10,7,"very_complex","55.65","36.00","179.70","64.66","7658.38","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 36, ""counters"": {}}"
"neo4j","optimized","steady",10,10,8,"very_complex","43.66","37.00","229.03","74.49","7659.05","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 37, ""counters"": {}}"
"neo4j","optimized","steady",10,10,9,"very_complex","44.00","37.00","227.27","75.29","7659.09","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 37, ""counters"": {}}"
"neo4j","optimized","steady",10,10,10,"very_complex","43.12","37.00","231.93","75.53","7659.18","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 18, ""first"": {""rec_id"": 70468, ""freq"": 1}, ""server_ms"": 37, ""counters"": {}}"
"neo4j","optimized","warmup",10,11,1,"very_complex","243.72","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,2,"very_complex","241.15","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,3,"very_complex","270.45","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,4,"very_complex","241.51","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,5,"very_complex","246.21","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,6,"very_complex","246.42","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,7,"very_complex","245.64","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,8,"very_complex","241.60","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,9,"very_complex","278.81","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,10,"very_complex","242.93","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,11,1,"very_complex","191.55","167.00","52.21","74.25","7659.95","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 167, ""counters"": {}}"
"neo4j","optimized","steady",10,11,2,"very_complex","199.67","173.00","50.08","73.66","7660.07","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 173, ""counters"": {}}"
"neo4j","optimized","steady",10,11,3,"very_complex","189.75","165.00","52.70","74.34","7659.95","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 165, ""counters"": {}}"
"neo4j","optimized","steady",10,11,4,"very_complex","192.44","168.00","51.96","74.24","7659.73","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 168, ""counters"": {}}"
"neo4j","optimized","steady",10,11,5,"very_complex","219.03","196.00","45.66","74.52","7659.90","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 196, ""counters"": {}}"
"neo4j","optimized","steady",10,11,6,"very_complex","191.03","166.00","52.35","74.14","7659.82","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 166, ""counters"": {}}"
"neo4j","optimized","steady",10,11,7,"very_complex","195.88","172.00","51.05","74.63","7659.55","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 172, ""counters"": {}}"
"neo4j","optimized","steady",10,11,8,"very_complex","191.68","167.00","52.17","74.22","7659.99","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 167, ""counters"": {}}"
"neo4j","optimized","steady",10,11,9,"very_complex","192.66","168.00","51.90","74.39","7659.94","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 168, ""counters"": {}}"
"neo4j","optimized","steady",10,11,10,"very_complex","193.34","169.00","51.72","74.33","7659.79","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 33, ""prodB"": 241530, ""co_orders"": 1}, ""server_ms"": 169, ""counters"": {}}"
"neo4j","optimized","warmup",10,12,1,"very_complex","114.38","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,2,"very_complex","111.86","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,3,"very_complex","155.35","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,4,"very_complex","111.65","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,5,"very_complex","110.78","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,6,"very_complex","111.21","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,7,"very_complex","111.35","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,8,"very_complex","111.16","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,9,"very_complex","111.61","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,10,"very_complex","111.04","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,12,1,"very_complex","59.71","55.00","167.47","80.59","7659.82","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 55, ""counters"": {}}"
"neo4j","optimized","steady",10,12,2,"very_complex","58.93","55.00","169.70","81.10","7659.83","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 55, ""counters"": {}}"
"neo4j","optimized","steady",10,12,3,"very_complex","60.37","56.00","165.65","82.62","7659.68","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 56, ""counters"": {}}"
"neo4j","optimized","steady",10,12,4,"very_complex","62.59","58.00","159.78","86.54","7659.81","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 58, ""counters"": {}}"
"neo4j","optimized","steady",10,12,5,"very_complex","62.47","57.00","160.08","96.56","7660.06","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 57, ""counters"": {}}"
"neo4j","optimized","steady",10,12,6,"very_complex","60.79","56.00","164.49","82.71","7659.96","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 56, ""counters"": {}}"
"neo4j","optimized","steady",10,12,7,"very_complex","62.83","57.00","159.15","104.36","7663.76","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 57, ""counters"": {}}"
"neo4j","optimized","steady",10,12,8,"very_complex","62.51","57.00","159.97","80.01","7661.71","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 57, ""counters"": {}}"
"neo4j","optimized","steady",10,12,9,"very_complex","60.71","56.00","164.71","82.69","7662.19","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 56, ""counters"": {}}"
"neo4j","optimized","steady",10,12,10,"very_complex","60.14","56.00","166.28","80.10","7661.83","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 180953, ""freq"": 1}, ""server_ms"": 56, ""counters"": {}}"
"neo4j","optimized","warmup",10,13,1,"create","66.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,2,"create","59.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,3,"create","65.59","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,4,"create","69.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,5,"create","65.22","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,6,"create","66.26","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,7,"create","66.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,8,"create","64.70","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,9,"create","65.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,10,"create","67.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,13,1,"create","15.02","2.00","665.70","42.51","7661.78","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13603}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,2,"create","16.84","3.00","593.65","33.87","7662.09","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13604}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,3,"create","14.58","3.00","686.10","39.49","7662.02","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13605}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,4,"create","9.11","3.00","1097.55","71.96","7661.98","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13606}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,5,"create","16.36","3.00","611.09","75.02","7661.97","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13607}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,6,"create","15.74","2.00","635.24","37.60","7662.05","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13608}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,7,"create","14.97","3.00","667.79","43.35","7662.15","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13609}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,8,"create","15.55","3.00","643.15","38.49","7662.30","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13610}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,9,"create","8.38","3.00","1194.03","98.71","7662.22","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13611}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,10,"create","14.70","3.00","680.32","40.23","7662.18","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 13613}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",10,14,1,"create","65.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,2,"create","66.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,3,"create","61.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,4,"create","67.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,5,"create","66.97","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,6,"create","67.73","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,7,"create","68.89","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,8,"create","66.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,9,"create","68.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,10,"create","66.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,14,1,"create","15.73","5.00","635.66","53.25","7670.16","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19953}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,2,"create","15.66","4.00","638.48","43.57","7669.91","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19954}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,3,"create","19.74","5.00","506.64","37.54","7669.98","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19955}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,4,"create","9.88","4.00","1011.78","212.23","7672.67","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19956}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,5,"create","18.85","4.00","530.41","39.50","7674.98","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19958}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,6,"create","11.19","5.00","893.53","81.06","7675.20","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19959}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,7,"create","16.47","4.00","607.21","40.02","7668.89","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19960}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,8,"create","17.84","4.00","560.40","39.47","7668.78","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19961}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,9,"create","12.31","4.00","812.16","72.51","7668.92","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19962}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,10,"create","17.25","4.00","579.81","57.66","7668.88","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 19963}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",10,15,1,"create","69.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,2,"create","68.40","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,3,"create","62.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,4,"create","69.62","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,5,"create","76.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,6,"create","67.59","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,7,"create","68.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,8,"create","69.74","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,9,"create","68.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,10,"create","68.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,15,1,"create","19.13","7.00","522.75","46.36","7669.24","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14988}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,2,"create","18.81","6.00","531.68","48.48","7669.10","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14989}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,3,"create","18.23","6.00","548.61","47.25","7669.16","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14990}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,4,"create","18.41","7.00","543.19","46.43","7669.03","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14991}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,5,"create","11.97","6.00","835.32","78.19","7669.15","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14992}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,6,"create","18.26","7.00","547.50","48.90","7668.89","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14994}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,7,"create","18.93","7.00","528.37","52.88","7669.23","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14995}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,8,"create","18.04","6.00","554.35","48.60","7668.96","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14996}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,9,"create","18.38","7.00","544.06","50.56","7669.13","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14997}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,10,"create","12.26","6.00","815.91","75.61","7668.89","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 14998}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",10,16,1,"create","107.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,2,"create","108.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,3,"create","106.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,4,"create","106.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,5,"create","107.50","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,6,"create","106.92","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,7,"create","108.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,8,"create","104.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,9,"create","108.08","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,10,"create","107.03","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,16,1,"create","64.86","45.00","154.18","65.02","7668.89","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104898}, ""server_ms"": 45, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,2,"create","52.21","47.00","191.55","79.59","7669.01","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104899}, ""server_ms"": 47, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,3,"create","54.85","47.00","182.33","75.87","7668.95","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104900}, ""server_ms"": 47, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,4,"create","54.65","47.00","182.99","75.36","7669.18","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104901}, ""server_ms"": 47, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,5,"create","62.10","49.00","161.02","86.80","7669.00","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104902}, ""server_ms"": 49, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,6,"create","58.74","45.00","170.23","71.18","7669.16","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104903}, ""server_ms"": 45, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,7,"create","52.02","38.00","192.23","76.69","7669.14","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104904}, ""server_ms"": 38, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,8,"create","51.62","43.00","193.72","79.64","7669.01","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104906}, ""server_ms"": 43, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,9,"create","55.91","44.00","178.85","73.99","7669.09","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104908}, ""server_ms"": 44, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,10,"create","53.92","42.00","185.47","76.01","7668.89","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 104909}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",10,17,1,"update","581.37","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,2,"update","585.71","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,3,"update","589.77","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,4,"update","590.72","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,5,"update","570.49","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,6,"update","655.31","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,7,"update","656.54","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,8,"update","586.08","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,9,"update","585.80","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,10,"update","595.62","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,17,1,"update","578.80","576.00","17.28","79.74","7669.21","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 379}, ""server_ms"": 576, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,2,"update","522.29","519.00","19.15","80.71","7668.89","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 389}, ""server_ms"": 519, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,3,"update","520.56","514.00","19.21","81.02","7669.32","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 397}, ""server_ms"": 514, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,4,"update","595.33","530.00","16.80","74.12","7668.89","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 406}, ""server_ms"": 530, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,5,"update","549.84","501.00","18.19","81.35","7669.06","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 410}, ""server_ms"": 501, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,6,"update","521.33","508.00","19.18","81.34","7668.83","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 421}, ""server_ms"": 508, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,7,"update","551.05","535.00","18.15","78.38","7669.38","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 438}, ""server_ms"": 535, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,8,"update","536.43","534.00","18.64","79.77","7669.32","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 449}, ""server_ms"": 534, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,9,"update","546.42","506.00","18.30","81.59","7669.15","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 450}, ""server_ms"": 506, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,10,"update","543.64","507.00","18.39","78.83","7669.42","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 463}, ""server_ms"": 507, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,18,1,"update","68.06","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,2,"update","55.34","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,3,"update","56.14","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,4,"update","55.89","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,5,"update","55.76","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,6,"update","55.89","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,7,"update","55.90","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,8,"update","55.89","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,9,"update","55.30","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,10,"update","56.00","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,18,1,"update","5.51","1.00","1816.04","71.41","7669.37","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,2,"update","5.64","1.00","1772.33","69.14","7669.27","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,3,"update","5.40","1.00","1852.40","73.71","7669.16","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,4,"update","6.89","1.00","1452.33","67.23","7669.26","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,5,"update","6.11","2.00","1635.48","63.99","7668.95","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,6,"update","5.54","1.00","1805.54","70.19","7669.22","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,7,"update","5.99","1.00","1670.34","164.22","7669.24","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,8,"update","5.40","1.00","1850.99","75.20","7669.43","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,9,"update","5.85","1.00","1710.54","67.36","7669.21","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,10,"update","5.69","1.00","1758.06","68.43","7669.19","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,19,1,"update","81.09","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,2,"update","80.08","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,3,"update","80.16","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,4,"update","80.23","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,5,"update","80.57","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,6,"update","81.34","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,7,"update","83.40","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,8,"update","81.83","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,9,"update","82.43","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,10,"update","74.15","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,19,1,"update","28.35","24.00","352.73","35.14","7669.07","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 325}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,2,"update","30.92","7.00","323.37","33.66","7669.26","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 334}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,3,"update","31.39","16.00","318.61","30.27","7669.12","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 367}, ""server_ms"": 16, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,4,"update","23.65","7.00","422.77","40.00","7669.36","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 394}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,5,"update","23.48","19.00","425.90","42.14","7669.32","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 448}, ""server_ms"": 19, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,6,"update","30.32","16.00","329.82","31.35","7669.18","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 457}, ""server_ms"": 16, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,7,"update","31.91","23.00","313.40","29.66","7668.95","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 499}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,8,"update","30.11","20.00","332.10","32.34","7669.13","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 526}, ""server_ms"": 20, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,9,"update","30.72","25.00","325.52","30.67","7669.10","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 565}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,10,"update","22.61","11.00","442.36","41.79","7669.04","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 577}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,20,1,"update","73.99","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,2,"update","74.05","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,3,"update","74.18","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,4,"update","73.59","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,5,"update","74.78","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,6,"update","69.13","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,7,"update","72.96","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,8,"update","73.47","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,9,"update","66.51","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,10,"update","66.91","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,20,1,"update","22.88","1.00","437.12","15.32","7669.28","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,2,"update","22.54","0.00","443.61","16.46","7669.23","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,3,"update","23.39","9.00","427.48","15.31","7669.02","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,4,"update","22.74","9.00","439.72","16.87","7669.32","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,5,"update","21.78","9.00","459.14","16.18","7669.17","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,6,"update","17.25","3.00","579.59","22.00","7668.94","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,7,"update","22.88","9.00","436.99","15.57","7669.04","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,8,"update","23.80","9.00","420.19","14.89","7669.30","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,9,"update","23.12","0.00","432.56","15.67","7669.25","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,10,"update","16.68","3.00","599.70","23.19","7669.28","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""loretta58@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,21,1,"delete","67.84","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,2,"delete","58.27","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,3,"delete","68.32","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,4,"delete","65.31","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,5,"delete","66.81","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,6,"delete","65.21","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,7,"delete","67.88","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,8,"delete","67.61","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,9,"delete","60.52","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,10,"delete","68.56","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,21,1,"delete","16.21","13.00","616.80","35.32","7669.08","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 71}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,2,"delete","15.26","3.00","655.48","39.10","7669.14","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 72}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,3,"delete","15.97","13.00","626.21","36.55","7669.25","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 73}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,4,"delete","15.99","12.00","625.27","35.75","7669.29","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 74}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,5,"delete","15.97","14.00","626.34","36.87","7669.31","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 75}, ""server_ms"": 14, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,6,"delete","16.21","13.00","616.87","35.57","7669.21","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 76}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,7,"delete","7.72","3.00","1295.97","74.04","7669.23","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 77}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,8,"delete","7.74","5.00","1291.54","73.09","7669.43","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 78}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,9,"delete","15.15","12.00","660.25","38.57","7669.21","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 79}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,10,"delete","14.86","2.00","672.81","39.05","7669.43","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 80}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",10,22,1,"delete","64.68","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,2,"delete","66.07","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,3,"delete","63.82","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,4,"delete","63.78","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,5,"delete","65.53","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,6,"delete","63.56","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,7,"delete","57.24","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,8,"delete","62.33","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,9,"delete","63.33","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,10,"delete","63.99","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,22,1,"delete","13.84","11.00","722.55","29.47","7669.26","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 72}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,22,2,"delete","12.76","1.00","783.88","32.83","7669.11","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 73}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,3,"delete","6.75","1.00","1481.68","60.28","7669.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 74}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,4,"delete","12.14","1.00","823.46","33.69","7669.16","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 75}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,5,"delete","12.62","1.00","792.49","41.06","7669.03","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 76}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,6,"delete","14.00","11.00","714.39","30.48","7669.35","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 77}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,22,7,"delete","13.07","1.00","765.16","32.29","7669.32","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 78}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,8,"delete","12.93","1.00","773.58","32.14","7669.41","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 79}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,9,"delete","6.36","5.00","1572.30","63.03","7669.39","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 80}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",10,22,10,"delete","13.01","10.00","768.83","32.43","7669.45","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 81}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","warmup",10,23,1,"delete","70.46","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,2,"delete","70.32","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,3,"delete","71.77","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,4,"delete","72.28","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,5,"delete","72.27","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,6,"delete","70.50","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,7,"delete","72.01","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,8,"delete","70.89","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,9,"delete","69.79","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,10,"delete","64.15","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,23,1,"delete","22.21","21.00","450.18","45.59","7669.42","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 71}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",10,23,2,"delete","22.05","19.00","453.53","46.94","7669.56","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 72}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",10,23,3,"delete","21.62","20.00","462.53","47.09","7669.44","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 73}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",10,23,4,"delete","15.01","11.00","666.31","68.43","7669.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 74}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,23,5,"delete","21.69","17.00","460.95","47.32","7669.43","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 75}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",10,23,6,"delete","20.27","8.00","493.35","51.45","7669.64","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 76}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,7,"delete","20.61","9.00","485.17","49.42","7669.26","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 77}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,8,"delete","21.25","19.00","470.64","48.23","7669.50","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 78}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",10,23,9,"delete","13.55","9.00","737.99","73.65","7669.29","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 79}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",10,23,10,"delete","25.99","21.00","384.76","38.33","7669.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 80}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","warmup",10,24,1,"delete","89.28","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,2,"delete","90.56","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,3,"delete","84.58","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,4,"delete","89.93","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,5,"delete","89.36","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,6,"delete","84.72","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,7,"delete","91.58","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,8,"delete","93.07","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,9,"delete","86.02","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,10,"delete","91.91","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,24,1,"delete","36.47","24.00","274.20","73.00","7669.49","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 71}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,2,"delete","36.85","34.00","271.39","71.22","7669.66","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 72}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",10,24,3,"delete","36.23","34.00","275.99","73.57","7669.76","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 73}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",10,24,4,"delete","39.96","36.00","250.27","66.93","7669.53","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 74}, ""server_ms"": 36, ""counters"": {}}"
"neo4j","optimized","steady",10,24,5,"delete","39.80","37.00","251.27","67.45","7669.26","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 75}, ""server_ms"": 37, ""counters"": {}}"
"neo4j","optimized","steady",10,24,6,"delete","33.07","29.00","302.40","79.33","7669.52","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 76}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",10,24,7,"delete","39.29","37.00","254.54","67.49","7669.44","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 77}, ""server_ms"": 37, ""counters"": {}}"
"neo4j","optimized","steady",10,24,8,"delete","39.98","37.00","250.11","66.25","7669.47","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 78}, ""server_ms"": 37, ""counters"": {}}"
"neo4j","optimized","steady",10,24,9,"delete","39.25","37.00","254.76","68.55","7669.54","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 79}, ""server_ms"": 37, ""counters"": {}}"
"neo4j","optimized","steady",10,24,10,"delete","51.61","45.00","193.77","80.02","7669.63","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 80}, ""server_ms"": 45, ""counters"": {}}"
