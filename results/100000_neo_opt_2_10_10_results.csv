"db","mode","phase","concurrency","query_no","repeat","complexity","duration_ms","server_ms","qps","avg_cpu","avg_mem","disk_mb","statement","result"
"neo4j","optimized","warmup",1,1,1,"simple","6779.64","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,2,"simple","1468.02","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,3,"simple","1430.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,4,"simple","1241.64","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,5,"simple","1182.06","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,6,"simple","1176.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,7,"simple","1228.98","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,8,"simple","1456.93","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,9,"simple","1448.13","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,10,"simple","1449.72","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,1,1,"simple","1400.86","633.00","0.71","4.40","3210.57","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 633, ""counters"": {}}"
"neo4j","optimized","steady",1,1,2,"simple","1495.72","727.00","0.67","4.47","3496.02","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 727, ""counters"": {}}"
"neo4j","optimized","steady",1,1,3,"simple","1381.24","631.00","0.72","4.27","3780.54","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 631, ""counters"": {}}"
"neo4j","optimized","steady",1,1,4,"simple","1408.56","672.00","0.71","4.42","4065.33","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 672, ""counters"": {}}"
"neo4j","optimized","steady",1,1,5,"simple","1465.56","704.00","0.68","4.45","4350.51","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 704, ""counters"": {}}"
"neo4j","optimized","steady",1,1,6,"simple","1453.84","680.00","0.69","4.68","4647.06","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 680, ""counters"": {}}"
"neo4j","optimized","steady",1,1,7,"simple","1145.84","371.00","0.87","3.87","4802.81","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 371, ""counters"": {}}"
"neo4j","optimized","steady",1,1,8,"simple","1161.26","376.00","0.86","4.08","4809.98","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 376, ""counters"": {}}"
"neo4j","optimized","steady",1,1,9,"simple","1115.28","356.00","0.90","3.81","4810.37","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 356, ""counters"": {}}"
"neo4j","optimized","steady",1,1,10,"simple","1130.36","351.00","0.88","3.28","4805.79","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 351, ""counters"": {}}"
"neo4j","optimized","warmup",1,2,1,"simple","109.00","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,2,"simple","60.19","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,3,"simple","60.42","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,4,"simple","60.51","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,5,"simple","59.99","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,6,"simple","59.53","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,7,"simple","60.07","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,8,"simple","60.08","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,9,"simple","59.74","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,10,"simple","61.28","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,2,1,"simple","13.49","1.00","74.13","32.50","4809.62","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,2,"simple","9.45","0.00","105.84","42.47","4809.72","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,3,"simple","9.60","0.00","104.20","35.61","4809.81","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,4,"simple","9.72","1.00","102.85","36.94","4809.79","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,5,"simple","9.80","0.00","102.02","37.41","4809.55","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,6,"simple","9.96","1.00","100.36","34.46","4809.50","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,7,"simple","9.77","0.00","102.40","43.70","4809.96","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,8,"simple","9.97","1.00","100.32","35.34","4809.82","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,9,"simple","9.18","0.00","108.96","35.77","4809.57","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,10,"simple","9.97","1.00","100.31","35.89","4809.67","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",1,3,1,"simple","480.67","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,2,"simple","92.58","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,3,"simple","94.47","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,4,"simple","94.08","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,5,"simple","93.48","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,6,"simple","93.54","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,7,"simple","93.69","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,8,"simple","93.16","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,9,"simple","93.22","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,10,"simple","95.92","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,3,1,"simple","47.76","23.00","20.94","13.79","4852.79","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Kuhlweg 3/3"", ""city"": ""Mühlhausen"", ""zip"": ""10635"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",1,3,2,"simple","44.13","23.00","22.66","12.48","4852.93","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Kuhlweg 3/3"", ""city"": ""Mühlhausen"", ""zip"": ""10635"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",1,3,3,"simple","41.09","22.00","24.34","13.18","4852.81","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Kuhlweg 3/3"", ""city"": ""Mühlhausen"", ""zip"": ""10635"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,4,"simple","41.08","22.00","24.34","13.97","4852.81","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Kuhlweg 3/3"", ""city"": ""Mühlhausen"", ""zip"": ""10635"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,5,"simple","43.10","22.00","23.20","12.09","4852.86","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Kuhlweg 3/3"", ""city"": ""Mühlhausen"", ""zip"": ""10635"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,6,"simple","42.61","22.00","23.47","13.44","4852.54","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Kuhlweg 3/3"", ""city"": ""Mühlhausen"", ""zip"": ""10635"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,7,"simple","44.06","23.00","22.70","12.09","4853.94","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Kuhlweg 3/3"", ""city"": ""Mühlhausen"", ""zip"": ""10635"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",1,3,8,"simple","42.68","22.00","23.43","14.18","4854.84","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Kuhlweg 3/3"", ""city"": ""Mühlhausen"", ""zip"": ""10635"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,9,"simple","41.38","22.00","24.16","12.93","4854.87","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Kuhlweg 3/3"", ""city"": ""Mühlhausen"", ""zip"": ""10635"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,10,"simple","42.90","22.00","23.31","12.87","4855.40","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Kuhlweg 3/3"", ""city"": ""Mühlhausen"", ""zip"": ""10635"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","warmup",1,4,1,"medium","822.36","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,2,"medium","575.07","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,3,"medium","575.23","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,4,"medium","562.19","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,5,"medium","571.71","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,6,"medium","575.47","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,7,"medium","568.67","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,8,"medium","569.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,9,"medium","8330.95","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,10,"medium","984.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,4,1,"medium","732.87","611.00","1.36","63.99","7283.70","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 611, ""counters"": {}}"
"neo4j","optimized","steady",1,4,2,"medium","1614.19","1536.00","0.62","56.66","7312.58","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 1536, ""counters"": {}}"
"neo4j","optimized","steady",1,4,3,"medium","619.69","538.00","1.61","14.86","7338.96","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 538, ""counters"": {}}"
"neo4j","optimized","steady",1,4,4,"medium","540.88","460.00","1.85","14.70","7339.08","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 460, ""counters"": {}}"
"neo4j","optimized","steady",1,4,5,"medium","542.66","461.00","1.84","16.55","7341.51","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 461, ""counters"": {}}"
"neo4j","optimized","steady",1,4,6,"medium","494.82","413.00","2.02","8.35","7343.67","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 413, ""counters"": {}}"
"neo4j","optimized","steady",1,4,7,"medium","564.06","479.00","1.77","17.22","7343.88","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 479, ""counters"": {}}"
"neo4j","optimized","steady",1,4,8,"medium","548.37","468.00","1.82","14.41","7344.07","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 468, ""counters"": {}}"
"neo4j","optimized","steady",1,4,9,"medium","570.19","491.00","1.75","15.25","7344.16","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 491, ""counters"": {}}"
"neo4j","optimized","steady",1,4,10,"medium","650.93","570.00","1.54","26.06","7345.45","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 52, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 570, ""counters"": {}}"
"neo4j","optimized","warmup",1,5,1,"medium","1152.87","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,2,"medium","152.38","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,3,"medium","148.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,4,"medium","151.66","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,5,"medium","159.50","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,6,"medium","151.83","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,7,"medium","148.44","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,8,"medium","150.69","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,9,"medium","185.56","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,10,"medium","344.83","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,5,1,"medium","266.73","250.00","3.75","10.12","7382.72","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 368474, ""name"": ""Poland Eagle Flag Men's Short Sleeve T-Shirt Regular-Fit Crew Neck Tee Casual Sports Tops"", ""price"": 12.989999771118164, ""stock"": 63, ""created_at"": ""2019-10-15T16:29:10.000000000+00:00"", ""updated_at"": ""2024-11-23T15:06:07.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 250, ""counters"": {}}"
"neo4j","optimized","steady",1,5,2,"medium","97.66","90.00","10.24","11.09","7382.51","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 368474, ""name"": ""Poland Eagle Flag Men's Short Sleeve T-Shirt Regular-Fit Crew Neck Tee Casual Sports Tops"", ""price"": 12.989999771118164, ""stock"": 63, ""created_at"": ""2019-10-15T16:29:10.000000000+00:00"", ""updated_at"": ""2024-11-23T15:06:07.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 90, ""counters"": {}}"
"neo4j","optimized","steady",1,5,3,"medium","100.28","92.00","9.97","11.36","7382.49","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 368474, ""name"": ""Poland Eagle Flag Men's Short Sleeve T-Shirt Regular-Fit Crew Neck Tee Casual Sports Tops"", ""price"": 12.989999771118164, ""stock"": 63, ""created_at"": ""2019-10-15T16:29:10.000000000+00:00"", ""updated_at"": ""2024-11-23T15:06:07.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 92, ""counters"": {}}"
"neo4j","optimized","steady",1,5,4,"medium","99.71","93.00","10.03","11.04","7382.32","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 368474, ""name"": ""Poland Eagle Flag Men's Short Sleeve T-Shirt Regular-Fit Crew Neck Tee Casual Sports Tops"", ""price"": 12.989999771118164, ""stock"": 63, ""created_at"": ""2019-10-15T16:29:10.000000000+00:00"", ""updated_at"": ""2024-11-23T15:06:07.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 93, ""counters"": {}}"
"neo4j","optimized","steady",1,5,5,"medium","100.72","91.00","9.93","21.94","7383.32","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 368474, ""name"": ""Poland Eagle Flag Men's Short Sleeve T-Shirt Regular-Fit Crew Neck Tee Casual Sports Tops"", ""price"": 12.989999771118164, ""stock"": 63, ""created_at"": ""2019-10-15T16:29:10.000000000+00:00"", ""updated_at"": ""2024-11-23T15:06:07.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 91, ""counters"": {}}"
"neo4j","optimized","steady",1,5,6,"medium","99.78","90.00","10.02","11.23","7385.02","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 368474, ""name"": ""Poland Eagle Flag Men's Short Sleeve T-Shirt Regular-Fit Crew Neck Tee Casual Sports Tops"", ""price"": 12.989999771118164, ""stock"": 63, ""created_at"": ""2019-10-15T16:29:10.000000000+00:00"", ""updated_at"": ""2024-11-23T15:06:07.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 90, ""counters"": {}}"
"neo4j","optimized","steady",1,5,7,"medium","99.45","92.00","10.06","11.19","7384.52","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 368474, ""name"": ""Poland Eagle Flag Men's Short Sleeve T-Shirt Regular-Fit Crew Neck Tee Casual Sports Tops"", ""price"": 12.989999771118164, ""stock"": 63, ""created_at"": ""2019-10-15T16:29:10.000000000+00:00"", ""updated_at"": ""2024-11-23T15:06:07.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 92, ""counters"": {}}"
"neo4j","optimized","steady",1,5,8,"medium","99.73","92.00","10.03","11.24","7384.59","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 368474, ""name"": ""Poland Eagle Flag Men's Short Sleeve T-Shirt Regular-Fit Crew Neck Tee Casual Sports Tops"", ""price"": 12.989999771118164, ""stock"": 63, ""created_at"": ""2019-10-15T16:29:10.000000000+00:00"", ""updated_at"": ""2024-11-23T15:06:07.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 92, ""counters"": {}}"
"neo4j","optimized","steady",1,5,9,"medium","103.51","96.00","9.66","10.94","7384.70","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 368474, ""name"": ""Poland Eagle Flag Men's Short Sleeve T-Shirt Regular-Fit Crew Neck Tee Casual Sports Tops"", ""price"": 12.989999771118164, ""stock"": 63, ""created_at"": ""2019-10-15T16:29:10.000000000+00:00"", ""updated_at"": ""2024-11-23T15:06:07.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 96, ""counters"": {}}"
"neo4j","optimized","steady",1,5,10,"medium","101.01","93.00","9.90","11.12","7384.57","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 368474, ""name"": ""Poland Eagle Flag Men's Short Sleeve T-Shirt Regular-Fit Crew Neck Tee Casual Sports Tops"", ""price"": 12.989999771118164, ""stock"": 63, ""created_at"": ""2019-10-15T16:29:10.000000000+00:00"", ""updated_at"": ""2024-11-23T15:06:07.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 93, ""counters"": {}}"
"neo4j","optimized","warmup",1,6,1,"medium","362.18","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,2,"medium","86.44","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,3,"medium","85.80","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,4,"medium","83.54","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,5,"medium","83.27","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,6,"medium","82.66","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,7,"medium","83.80","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,8,"medium","86.81","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,9,"medium","83.50","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,10,"medium","86.13","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,6,1,"medium","38.13","26.00","26.22","17.04","7399.25","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",1,6,2,"medium","31.63","23.00","31.61","16.71","7399.42","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",1,6,3,"medium","33.14","25.00","30.18","17.16","7399.55","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",1,6,4,"medium","32.96","25.00","30.34","16.37","7399.23","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",1,6,5,"medium","33.35","24.00","29.99","16.37","7399.21","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",1,6,6,"medium","39.35","30.00","25.41","15.50","7399.40","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","steady",1,6,7,"medium","36.63","27.00","27.30","15.88","7399.47","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",1,6,8,"medium","32.00","23.00","31.25","16.59","7399.35","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",1,6,9,"medium","33.75","25.00","29.63","18.49","7399.37","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",1,6,10,"medium","33.70","25.00","29.68","15.97","7399.44","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","warmup",1,7,1,"complex","2160.33","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,2,"complex","767.83","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,3,"complex","554.58","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,4,"complex","517.17","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,5,"complex","836.25","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,6,"complex","977.63","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,7,"complex","524.87","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,8,"complex","516.27","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,9,"complex","529.84","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,10,"complex","520.60","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,7,1,"complex","573.31","542.00","1.74","9.04","7455.30","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 542, ""counters"": {}}"
"neo4j","optimized","steady",1,7,2,"complex","478.19","453.00","2.09","8.75","7455.01","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 453, ""counters"": {}}"
"neo4j","optimized","steady",1,7,3,"complex","523.00","486.00","1.91","8.75","7455.09","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 486, ""counters"": {}}"
"neo4j","optimized","steady",1,7,4,"complex","488.33","457.00","2.05","8.57","7455.23","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 457, ""counters"": {}}"
"neo4j","optimized","steady",1,7,5,"complex","510.42","484.00","1.96","8.54","7454.88","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 484, ""counters"": {}}"
"neo4j","optimized","steady",1,7,6,"complex","845.31","818.00","1.18","8.64","7454.66","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 818, ""counters"": {}}"
"neo4j","optimized","steady",1,7,7,"complex","492.93","469.00","2.03","8.59","7455.02","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 469, ""counters"": {}}"
"neo4j","optimized","steady",1,7,8,"complex","479.46","453.00","2.09","8.61","7455.21","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 453, ""counters"": {}}"
"neo4j","optimized","steady",1,7,9,"complex","466.06","440.00","2.15","8.57","7454.89","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 440, ""counters"": {}}"
"neo4j","optimized","steady",1,7,10,"complex","462.21","435.00","2.16","8.60","7455.07","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 435, ""counters"": {}}"
"neo4j","optimized","warmup",1,8,1,"complex","435.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,2,"complex","107.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,3,"complex","93.41","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,4,"complex","94.99","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,5,"complex","94.01","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,6,"complex","93.33","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,7,"complex","90.69","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,8,"complex","93.08","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,9,"complex","94.78","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,10,"complex","94.06","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,8,1,"complex","68.23","49.00","14.66","11.86","7459.28","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 49, ""counters"": {}}"
"neo4j","optimized","steady",1,8,2,"complex","100.07","85.00","9.99","10.51","7459.49","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 85, ""counters"": {}}"
"neo4j","optimized","steady",1,8,3,"complex","84.69","70.00","11.81","11.05","7459.69","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 70, ""counters"": {}}"
"neo4j","optimized","steady",1,8,4,"complex","103.83","92.00","9.63","10.78","7459.59","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 92, ""counters"": {}}"
"neo4j","optimized","steady",1,8,5,"complex","97.94","75.00","10.21","11.04","7459.25","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 75, ""counters"": {}}"
"neo4j","optimized","steady",1,8,6,"complex","58.19","40.00","17.18","12.46","7459.58","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 40, ""counters"": {}}"
"neo4j","optimized","steady",1,8,7,"complex","73.59","60.00","13.59","11.39","7459.59","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 60, ""counters"": {}}"
"neo4j","optimized","steady",1,8,8,"complex","84.35","70.00","11.86","11.55","7459.76","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 70, ""counters"": {}}"
"neo4j","optimized","steady",1,8,9,"complex","70.04","53.00","14.28","11.92","7459.77","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 53, ""counters"": {}}"
"neo4j","optimized","steady",1,8,10,"complex","46.31","29.00","21.59","12.50","7459.58","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","warmup",1,9,1,"complex","996.14","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,2,"complex","238.18","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,3,"complex","254.97","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,4,"complex","633.06","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,5,"complex","1254.62","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,6,"complex","242.12","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,7,"complex","242.99","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,8,"complex","240.83","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,9,"complex","249.07","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,10,"complex","1141.59","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,9,1,"complex","1557.33","1541.00","0.64","8.78","7480.57","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 4, ""orders_last_30d"": 1}, ""server_ms"": 1541, ""counters"": {}}"
"neo4j","optimized","steady",1,9,2,"complex","191.20","181.00","5.23","9.56","7480.44","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 4, ""orders_last_30d"": 1}, ""server_ms"": 181, ""counters"": {}}"
"neo4j","optimized","steady",1,9,3,"complex","188.35","178.00","5.31","9.53","7480.72","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 4, ""orders_last_30d"": 1}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",1,9,4,"complex","188.97","178.00","5.29","9.63","7480.77","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 4, ""orders_last_30d"": 1}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",1,9,5,"complex","191.39","181.00","5.22","9.59","7480.66","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 4, ""orders_last_30d"": 1}, ""server_ms"": 181, ""counters"": {}}"
"neo4j","optimized","steady",1,9,6,"complex","193.44","183.00","5.17","9.59","7480.61","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 4, ""orders_last_30d"": 1}, ""server_ms"": 183, ""counters"": {}}"
"neo4j","optimized","steady",1,9,7,"complex","451.83","441.00","2.21","8.86","7480.37","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 4, ""orders_last_30d"": 1}, ""server_ms"": 441, ""counters"": {}}"
"neo4j","optimized","steady",1,9,8,"complex","1443.63","1432.00","0.69","8.56","7480.92","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 4, ""orders_last_30d"": 1}, ""server_ms"": 1432, ""counters"": {}}"
"neo4j","optimized","steady",1,9,9,"complex","2035.17","2023.00","0.49","8.68","7480.46","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 4, ""orders_last_30d"": 1}, ""server_ms"": 2023, ""counters"": {}}"
"neo4j","optimized","steady",1,9,10,"complex","195.27","185.00","5.12","9.64","7480.68","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 4, ""orders_last_30d"": 1}, ""server_ms"": 185, ""counters"": {}}"
"neo4j","optimized","warmup",1,10,1,"very_complex","677.13","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,2,"very_complex","495.03","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,3,"very_complex","567.21","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,4,"very_complex","556.34","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,5,"very_complex","463.66","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,6,"very_complex","509.57","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,7,"very_complex","499.90","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,8,"very_complex","500.04","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,9,"very_complex","545.32","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,10,"very_complex","529.00","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,10,1,"very_complex","479.61","469.00","2.09","10.11","7484.62","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 469, ""counters"": {}}"
"neo4j","optimized","steady",1,10,2,"very_complex","532.22","526.00","1.88","9.57","7484.41","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 526, ""counters"": {}}"
"neo4j","optimized","steady",1,10,3,"very_complex","1502.50","1491.00","0.67","59.77","7484.73","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 1491, ""counters"": {}}"
"neo4j","optimized","steady",1,10,4,"very_complex","551.36","544.00","1.81","16.66","7485.07","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 544, ""counters"": {}}"
"neo4j","optimized","steady",1,10,5,"very_complex","450.36","446.00","2.22","9.49","7484.90","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 446, ""counters"": {}}"
"neo4j","optimized","steady",1,10,6,"very_complex","520.06","516.00","1.92","18.86","7485.09","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 516, ""counters"": {}}"
"neo4j","optimized","steady",1,10,7,"very_complex","386.04","382.00","2.59","9.67","7484.85","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 382, ""counters"": {}}"
"neo4j","optimized","steady",1,10,8,"very_complex","440.17","436.00","2.27","15.78","7485.04","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 436, ""counters"": {}}"
"neo4j","optimized","steady",1,10,9,"very_complex","507.30","503.00","1.97","18.93","7485.14","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 503, ""counters"": {}}"
"neo4j","optimized","steady",1,10,10,"very_complex","476.30","472.00","2.10","9.29","7485.14","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 472, ""counters"": {}}"
"neo4j","optimized","warmup",1,11,1,"very_complex","3762.29","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,2,"very_complex","1709.44","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,3,"very_complex","1690.45","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,4,"very_complex","1810.08","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,5,"very_complex","1843.23","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,6,"very_complex","1764.13","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,7,"very_complex","2017.96","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,8,"very_complex","1754.72","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,9,"very_complex","1948.76","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,10,"very_complex","1692.61","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,11,1,"very_complex","1682.34","1664.00","0.59","8.77","7491.65","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1664, ""counters"": {}}"
"neo4j","optimized","steady",1,11,2,"very_complex","2121.00","2115.00","0.47","15.13","7491.45","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2115, ""counters"": {}}"
"neo4j","optimized","steady",1,11,3,"very_complex","1645.81","1640.00","0.61","9.57","7491.86","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1640, ""counters"": {}}"
"neo4j","optimized","steady",1,11,4,"very_complex","1627.28","1622.00","0.61","8.66","7491.85","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1622, ""counters"": {}}"
"neo4j","optimized","steady",1,11,5,"very_complex","1597.43","1593.00","0.63","8.73","7491.55","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1593, ""counters"": {}}"
"neo4j","optimized","steady",1,11,6,"very_complex","2599.95","2594.00","0.38","16.08","7492.22","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2594, ""counters"": {}}"
"neo4j","optimized","steady",1,11,7,"very_complex","1658.90","1653.00","0.60","10.01","7492.94","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1653, ""counters"": {}}"
"neo4j","optimized","steady",1,11,8,"very_complex","1673.92","1668.00","0.60","8.60","7492.91","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1668, ""counters"": {}}"
"neo4j","optimized","steady",1,11,9,"very_complex","1607.17","1602.00","0.62","8.70","7492.80","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1602, ""counters"": {}}"
"neo4j","optimized","steady",1,11,10,"very_complex","1993.45","1985.00","0.50","18.56","7492.96","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1985, ""counters"": {}}"
"neo4j","optimized","warmup",1,12,1,"very_complex","869.50","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,2,"very_complex","657.22","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,3,"very_complex","642.31","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,4,"very_complex","641.41","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,5,"very_complex","650.83","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,6,"very_complex","638.17","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,7,"very_complex","636.81","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,8,"very_complex","753.88","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,9,"very_complex","796.38","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,10,"very_complex","690.61","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,12,1,"very_complex","605.88","593.00","1.65","10.42","7500.63","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 593, ""counters"": {}}"
"neo4j","optimized","steady",1,12,2,"very_complex","596.29","592.00","1.68","9.03","7502.35","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 592, ""counters"": {}}"
"neo4j","optimized","steady",1,12,3,"very_complex","593.36","588.00","1.69","9.22","7502.29","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 588, ""counters"": {}}"
"neo4j","optimized","steady",1,12,4,"very_complex","557.96","554.00","1.79","9.39","7502.34","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 554, ""counters"": {}}"
"neo4j","optimized","steady",1,12,5,"very_complex","691.42","686.00","1.45","19.81","7510.26","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 686, ""counters"": {}}"
"neo4j","optimized","steady",1,12,6,"very_complex","634.60","630.00","1.58","16.61","7510.18","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 630, ""counters"": {}}"
"neo4j","optimized","steady",1,12,7,"very_complex","573.32","569.00","1.74","8.99","7510.12","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 569, ""counters"": {}}"
"neo4j","optimized","steady",1,12,8,"very_complex","571.02","567.00","1.75","9.52","7510.11","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 567, ""counters"": {}}"
"neo4j","optimized","steady",1,12,9,"very_complex","579.44","574.00","1.73","9.11","7510.36","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 574, ""counters"": {}}"
"neo4j","optimized","steady",1,12,10,"very_complex","610.06","606.00","1.64","9.21","7510.19","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 606, ""counters"": {}}"
"neo4j","optimized","warmup",1,13,1,"create","572.51","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,2,"create","105.57","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,3,"create","86.74","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,4,"create","84.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,5,"create","91.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,6,"create","91.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,7,"create","77.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,8,"create","84.14","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,9,"create","83.88","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,10,"create","81.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,13,1,"create","39.38","21.00","25.39","16.27","7527.75","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134987}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,2,"create","26.79","20.00","37.33","19.09","7527.87","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134988}, ""server_ms"": 20, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,3,"create","36.37","21.00","27.49","16.30","7527.62","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134989}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,4,"create","33.96","21.00","29.44","16.13","7527.38","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134990}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,5,"create","36.25","20.00","27.59","18.19","7527.78","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134991}, ""server_ms"": 20, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,6,"create","34.01","21.00","29.40","16.09","7528.33","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134992}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,7,"create","34.15","21.00","29.28","15.82","7528.26","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134993}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,8,"create","33.24","20.00","30.09","15.68","7528.20","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134994}, ""server_ms"": 20, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,9,"create","26.73","21.00","37.41","19.88","7528.27","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134995}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,10,"create","34.26","20.00","29.19","22.49","7528.17","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134996}, ""server_ms"": 20, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",1,14,1,"create","174.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,2,"create","95.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,3,"create","113.57","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,4,"create","103.43","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,5,"create","91.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,6,"create","113.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,7,"create","93.27","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,8,"create","96.14","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,9,"create","103.59","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,10,"create","97.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,14,1,"create","60.72","43.00","16.47","20.89","7532.57","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199892}, ""server_ms"": 43, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,2,"create","45.47","33.00","21.99","14.43","7528.82","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199893}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,3,"create","45.06","31.00","22.19","19.21","7529.21","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199894}, ""server_ms"": 31, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,4,"create","177.52","164.00","5.63","54.55","7528.98","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199895}, ""server_ms"": 164, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,5,"create","49.82","34.00","20.07","12.96","7529.17","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199896}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,6,"create","49.82","37.00","20.07","13.31","7529.10","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199897}, ""server_ms"": 37, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,7,"create","47.74","34.00","20.95","16.28","7528.99","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199898}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,8,"create","49.75","36.00","20.10","14.54","7528.98","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199899}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,9,"create","51.03","39.00","19.60","12.68","7529.10","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199900}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,10,"create","46.42","34.00","21.54","13.19","7529.50","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199901}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",1,15,1,"create","662.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,2,"create","109.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,3,"create","118.58","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,4,"create","127.20","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,5,"create","129.89","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,6,"create","135.72","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,7,"create","122.68","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,8,"create","127.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,9,"create","118.08","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,10,"create","113.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,15,1,"create","84.92","68.00","11.78","11.29","7545.08","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150065}, ""server_ms"": 68, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,2,"create","92.80","81.00","10.78","10.77","7545.48","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150066}, ""server_ms"": 81, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,3,"create","70.81","59.00","14.12","11.34","7545.67","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150067}, ""server_ms"": 59, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,4,"create","69.72","58.00","14.34","11.62","7545.84","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150068}, ""server_ms"": 58, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,5,"create","67.34","55.00","14.85","11.99","7545.64","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150069}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,6,"create","66.20","54.00","15.10","12.30","7545.52","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150070}, ""server_ms"": 54, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,7,"create","67.80","55.00","14.75","11.79","7545.84","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150071}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,8,"create","89.07","76.00","11.23","11.21","7545.64","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150072}, ""server_ms"": 76, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,9,"create","100.42","88.00","9.96","10.57","7545.69","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150073}, ""server_ms"": 88, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,10,"create","59.28","54.00","16.87","13.26","7546.06","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150074}, ""server_ms"": 54, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",1,16,1,"create","2430.22","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,2,"create","493.00","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,3,"create","444.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,4,"create","434.57","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,5,"create","445.53","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,6,"create","448.99","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,7,"create","443.26","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,8,"create","436.55","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,9,"create","436.89","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,10,"create","440.22","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,16,1,"create","388.58","371.00","2.57","9.33","7619.56","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049536}, ""server_ms"": 371, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,2,"create","381.45","368.00","2.62","9.00","7619.91","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049537}, ""server_ms"": 368, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,3,"create","454.37","442.00","2.20","9.02","7619.85","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049538}, ""server_ms"": 442, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,4,"create","393.95","381.00","2.54","9.01","7620.08","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049539}, ""server_ms"": 381, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,5,"create","393.97","382.00","2.54","9.01","7619.87","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049540}, ""server_ms"": 382, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,6,"create","384.31","379.00","2.60","9.11","7619.97","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049541}, ""server_ms"": 379, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,7,"create","385.79","373.00","2.59","9.44","7619.96","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049542}, ""server_ms"": 373, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,8,"create","392.19","380.00","2.55","8.94","7620.13","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049543}, ""server_ms"": 380, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,9,"create","387.45","375.00","2.58","9.05","7619.96","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049544}, ""server_ms"": 375, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,10,"create","383.77","378.00","2.61","9.23","7619.97","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049545}, ""server_ms"": 378, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",1,17,1,"update","758.07","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,2,"update","469.19","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,3,"update","461.47","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,4,"update","448.05","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,5,"update","452.42","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,6,"update","446.21","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,7,"update","450.31","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,8,"update","454.84","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,9,"update","456.47","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,10,"update","457.31","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,17,1,"update","730.81","717.00","1.37","8.79","7621.75","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 63}, ""server_ms"": 717, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,2,"update","725.95","714.00","1.38","8.66","7621.28","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 64}, ""server_ms"": 714, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,3,"update","501.42","490.00","1.99","8.90","7621.37","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 65}, ""server_ms"": 490, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,4,"update","398.42","385.00","2.51","9.01","7621.56","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 66}, ""server_ms"": 385, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,5,"update","402.57","391.00","2.48","8.87","7621.91","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 67}, ""server_ms"": 391, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,6,"update","407.01","395.00","2.46","8.88","7621.70","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 68}, ""server_ms"": 395, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,7,"update","403.75","393.00","2.48","8.88","7621.65","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 69}, ""server_ms"": 393, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,8,"update","400.58","387.00","2.50","8.91","7621.72","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 70}, ""server_ms"": 387, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,9,"update","409.50","397.00","2.44","8.92","7621.68","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 71}, ""server_ms"": 397, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,10,"update","398.97","395.00","2.51","9.07","7621.60","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 72}, ""server_ms"": 395, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,18,1,"update","160.61","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,2,"update","63.97","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,3,"update","63.57","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,4,"update","63.24","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,5,"update","63.37","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,6,"update","63.21","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,7,"update","63.13","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,8,"update","63.39","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,9,"update","63.17","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,10,"update","63.70","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,18,1,"update","16.98","10.00","58.90","51.84","7624.29","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,2,"update","29.71","11.00","33.65","13.52","7624.00","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,3,"update","13.17","10.00","75.96","30.17","7624.07","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,4,"update","13.19","11.00","75.81","31.07","7624.62","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,5,"update","12.98","10.00","77.06","30.82","7624.58","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,6,"update","12.54","10.00","79.73","30.64","7624.51","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,7,"update","12.78","10.00","78.23","30.25","7624.26","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,8,"update","12.86","10.00","77.75","29.68","7624.27","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,9,"update","12.98","10.00","77.07","29.65","7624.24","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,10,"update","12.63","10.00","79.16","30.37","7624.44","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,19,1,"update","153.05","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,2,"update","141.25","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,3,"update","123.51","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,4,"update","123.28","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,5,"update","115.82","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,6,"update","123.97","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,7,"update","123.32","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,8,"update","123.96","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,9,"update","123.44","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,10,"update","124.23","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,19,1,"update","76.46","61.00","13.08","11.65","7628.60","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 35}, ""server_ms"": 61, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,2,"update","66.28","62.00","15.09","21.20","7628.56","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 38}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,3,"update","72.66","61.00","13.76","11.38","7625.61","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 41}, ""server_ms"": 61, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,4,"update","73.97","61.00","13.52","20.58","7623.56","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 44}, ""server_ms"": 61, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,5,"update","73.25","62.00","13.65","11.36","7623.91","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 47}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,6,"update","73.49","62.00","13.61","11.48","7624.12","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 50}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,7,"update","73.64","63.00","13.58","11.27","7624.06","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 53}, ""server_ms"": 63, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,8,"update","73.43","61.00","13.62","11.31","7624.08","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 56}, ""server_ms"": 61, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,9,"update","72.52","61.00","13.79","11.50","7624.35","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 59}, ""server_ms"": 61, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,10,"update","73.22","62.00","13.66","11.32","7624.23","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 62}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,20,1,"update","87.49","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,2,"update","55.15","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,3,"update","63.21","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,4,"update","64.60","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,5,"update","62.72","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,6,"update","62.57","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,7,"update","54.92","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,8,"update","61.91","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,9,"update","62.17","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,10,"update","55.57","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,20,1,"update","21.99","8.00","45.47","19.79","7624.70","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,2,"update","12.06","0.00","82.95","28.58","7624.73","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,3,"update","11.68","0.00","85.59","29.52","7624.60","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,4,"update","12.31","0.00","81.24","30.80","7624.55","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,5,"update","4.89","0.00","204.65","67.60","7624.58","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,6,"update","4.80","0.00","208.37","65.32","7624.57","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,7,"update","4.52","0.00","221.16","69.99","7624.82","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,8,"update","12.26","1.00","81.57","26.86","7624.80","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,9,"update","11.93","1.00","83.83","28.56","7624.67","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,10,"update","12.36","1.00","80.89","25.99","7624.70","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,21,1,"delete","193.14","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,2,"delete","86.12","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,3,"delete","88.12","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,4,"delete","104.19","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,5,"delete","90.14","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,6,"delete","115.05","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,7,"delete","138.11","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,8,"delete","98.50","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,9,"delete","96.76","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,10,"delete","96.51","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,21,1,"delete","48.27","25.00","20.72","15.27","7626.76","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 11}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,2,"delete","77.08","65.00","12.97","12.67","7626.52","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 12}, ""server_ms"": 65, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,3,"delete","52.33","40.00","19.11","12.60","7626.56","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 13}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,4,"delete","36.06","23.00","27.73","16.08","7626.57","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 14}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,5,"delete","54.31","42.00","18.41","14.82","7626.96","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 15}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,6,"delete","66.53","54.00","15.03","11.97","7626.85","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 16}, ""server_ms"": 54, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,7,"delete","67.43","62.00","14.83","14.13","7626.96","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 17}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,8,"delete","105.89","94.00","9.44","11.12","7626.77","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 18}, ""server_ms"": 94, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,9,"delete","81.12","72.00","12.33","11.90","7626.90","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 19}, ""server_ms"": 72, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,10,"delete","30.66","26.00","32.61","20.17","7626.61","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 20}, ""server_ms"": 26, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,22,1,"delete","109.84","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,2,"delete","77.07","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,3,"delete","96.18","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,4,"delete","73.41","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,5,"delete","73.95","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,6,"delete","72.65","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,7,"delete","72.72","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,8,"delete","72.62","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,9,"delete","79.82","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,10,"delete","72.64","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,22,1,"delete","23.77","8.00","42.06","20.87","7627.36","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 11}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,2,"delete","23.38","11.00","42.77","17.35","7627.24","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 12}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,3,"delete","15.74","11.00","63.54","32.73","7627.35","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 13}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,4,"delete","41.51","37.00","24.09","16.58","7627.49","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 14}, ""server_ms"": 37, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,5,"delete","16.03","10.00","62.40","25.64","7627.13","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 15}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,6,"delete","22.88","11.00","43.70","18.29","7627.32","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 16}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,7,"delete","36.91","24.00","27.09","14.24","7627.49","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 17}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,8,"delete","52.98","39.00","18.88","13.73","7627.84","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 18}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,9,"delete","32.16","19.00","31.09","15.41","7627.57","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 19}, ""server_ms"": 19, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,10,"delete","32.32","27.00","30.94","17.35","7627.46","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 20}, ""server_ms"": 27, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,23,1,"delete","343.66","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,2,"delete","285.85","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,3,"delete","300.63","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,4,"delete","289.20","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,5,"delete","265.11","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,6,"delete","280.68","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,7,"delete","304.44","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,8,"delete","281.27","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,9,"delete","244.01","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,10,"delete","315.57","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,23,1,"delete","225.41","205.00","4.44","9.78","7627.77","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 11}, ""server_ms"": 205, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,2,"delete","250.16","238.00","4.00","9.25","7628.07","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 12}, ""server_ms"": 238, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,3,"delete","161.27","148.00","6.20","10.01","7628.05","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 13}, ""server_ms"": 148, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,4,"delete","275.46","263.00","3.63","9.22","7627.88","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 14}, ""server_ms"": 263, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,5,"delete","220.08","207.00","4.54","9.38","7628.00","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 15}, ""server_ms"": 207, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,6,"delete","300.41","294.00","3.33","9.56","7628.06","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 16}, ""server_ms"": 294, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,7,"delete","261.91","248.00","3.82","9.31","7627.82","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 17}, ""server_ms"": 248, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,8,"delete","195.07","189.00","5.13","9.80","7627.65","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 18}, ""server_ms"": 189, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,9,"delete","247.81","234.00","4.04","10.03","7628.18","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 19}, ""server_ms"": 234, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,10,"delete","257.01","242.00","3.89","9.34","7628.35","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 20}, ""server_ms"": 242, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,24,1,"delete","2107.13","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,2,"delete","708.81","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,3,"delete","1694.21","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,4,"delete","1471.98","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,5,"delete","789.73","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,6,"delete","353.42","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,7,"delete","343.93","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,8,"delete","324.34","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,9,"delete","299.43","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,10,"delete","310.68","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,24,1,"delete","258.27","243.00","3.87","9.63","7662.81","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 11}, ""server_ms"": 243, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,2,"delete","250.13","238.00","4.00","9.21","7662.98","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 12}, ""server_ms"": 238, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,3,"delete","239.56","227.00","4.17","9.33","7662.92","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 13}, ""server_ms"": 227, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,4,"delete","309.94","299.00","3.23","12.97","7662.86","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 14}, ""server_ms"": 299, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,5,"delete","249.80","238.00","4.00","9.46","7663.15","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 15}, ""server_ms"": 238, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,6,"delete","247.00","234.00","4.05","9.23","7662.80","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 16}, ""server_ms"": 234, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,7,"delete","251.14","239.00","3.98","9.29","7662.94","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 17}, ""server_ms"": 239, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,8,"delete","313.22","299.00","3.19","9.16","7663.10","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 18}, ""server_ms"": 299, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,9,"delete","398.69","389.00","2.51","9.63","7663.01","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 19}, ""server_ms"": 389, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,10,"delete","260.87","248.00","3.83","9.22","7663.07","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 20}, ""server_ms"": 248, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",3,1,1,"simple","3691.55","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,2,"simple","3504.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,3,"simple","3421.54","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,4,"simple","3393.93","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,5,"simple","3455.40","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,6,"simple","3620.83","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,7,"simple","3333.04","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,8,"simple","3388.20","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,9,"simple","3684.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,10,"simple","3355.43","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,1,1,"simple","3333.99","441.00","0.90","3.70","7685.49","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 441, ""counters"": {}}"
"neo4j","optimized","steady",3,1,2,"simple","3324.66","458.00","0.90","3.65","7684.96","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 458, ""counters"": {}}"
"neo4j","optimized","steady",3,1,3,"simple","3496.19","652.00","0.86","4.86","7685.81","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 652, ""counters"": {}}"
"neo4j","optimized","steady",3,1,4,"simple","3748.96","808.00","0.80","6.53","7685.90","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 808, ""counters"": {}}"
"neo4j","optimized","steady",3,1,5,"simple","3372.43","508.00","0.89","4.32","7685.81","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 508, ""counters"": {}}"
"neo4j","optimized","steady",3,1,6,"simple","3382.42","494.00","0.89","4.39","7687.90","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 494, ""counters"": {}}"
"neo4j","optimized","steady",3,1,7,"simple","3409.70","540.00","0.88","4.21","7687.60","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 540, ""counters"": {}}"
"neo4j","optimized","steady",3,1,8,"simple","3463.98","568.00","0.87","4.77","7686.05","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 568, ""counters"": {}}"
"neo4j","optimized","steady",3,1,9,"simple","3383.09","549.00","0.89","4.33","7687.32","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 549, ""counters"": {}}"
"neo4j","optimized","steady",3,1,10,"simple","3501.54","604.00","0.86","4.54","7687.30","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 604, ""counters"": {}}"
"neo4j","optimized","warmup",3,2,1,"simple","79.98","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,2,"simple","75.74","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,3,"simple","74.90","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,4,"simple","74.92","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,5,"simple","75.16","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,6,"simple","73.83","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,7,"simple","75.71","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,8,"simple","74.96","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,9,"simple","74.36","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,10,"simple","73.75","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,2,1,"simple","23.09","1.00","129.90","19.16","7687.14","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,2,"simple","23.25","0.00","129.04","14.69","7687.11","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,3,"simple","23.15","1.00","129.58","15.26","7687.21","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,4,"simple","23.26","0.00","128.98","15.78","7687.21","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,5,"simple","23.42","1.00","128.11","15.07","7686.99","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,6,"simple","23.40","0.00","128.20","15.22","7687.16","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,7,"simple","23.48","0.00","127.79","16.22","7687.35","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,8,"simple","29.19","1.00","102.76","12.67","7687.15","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,9,"simple","23.77","0.00","126.22","15.28","7687.11","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,10,"simple","25.09","0.00","119.57","14.75","7686.99","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",3,3,1,"simple","255.16","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,2,"simple","156.12","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,3,"simple","162.85","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,4,"simple","166.94","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,5,"simple","163.61","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,6,"simple","153.46","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,7,"simple","151.40","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,8,"simple","152.33","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,9,"simple","164.72","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,10,"simple","145.96","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,3,1,"simple","108.43","37.00","27.67","11.82","7686.96","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Rohtstraße 0/8"", ""city"": ""Badibling"", ""zip"": ""39261"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 37, ""counters"": {}}"
"neo4j","optimized","steady",3,3,2,"simple","95.75","46.00","31.33","13.82","7686.94","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Rohtstraße 0/8"", ""city"": ""Badibling"", ""zip"": ""39261"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 46, ""counters"": {}}"
"neo4j","optimized","steady",3,3,3,"simple","100.99","26.00","29.71","11.06","7687.26","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Rohtstraße 0/8"", ""city"": ""Badibling"", ""zip"": ""39261"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",3,3,4,"simple","105.00","29.00","28.57","11.71","7687.33","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Rohtstraße 0/8"", ""city"": ""Badibling"", ""zip"": ""39261"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",3,3,5,"simple","101.41","25.00","29.58","11.97","7686.94","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Rohtstraße 0/8"", ""city"": ""Badibling"", ""zip"": ""39261"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",3,3,6,"simple","100.11","23.00","29.97","12.49","7687.37","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Rohtstraße 0/8"", ""city"": ""Badibling"", ""zip"": ""39261"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,3,7,"simple","107.41","30.00","27.93","12.34","7687.37","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Rohtstraße 0/8"", ""city"": ""Badibling"", ""zip"": ""39261"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","steady",3,3,8,"simple","112.90","38.00","26.57","12.72","7687.08","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Rohtstraße 0/8"", ""city"": ""Badibling"", ""zip"": ""39261"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 38, ""counters"": {}}"
"neo4j","optimized","steady",3,3,9,"simple","99.80","31.00","30.06","14.81","7687.17","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Rohtstraße 0/8"", ""city"": ""Badibling"", ""zip"": ""39261"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",3,3,10,"simple","114.08","37.00","26.30","13.20","7687.39","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Rohtstraße 0/8"", ""city"": ""Badibling"", ""zip"": ""39261"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 37, ""counters"": {}}"
"neo4j","optimized","warmup",3,4,1,"medium","991.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,2,"medium","961.31","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,3,"medium","886.55","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,4,"medium","922.16","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,5,"medium","976.45","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,6,"medium","24531.77","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,7,"medium","1840.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,8,"medium","1066.06","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,9,"medium","1055.90","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,10,"medium","1043.16","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,4,1,"medium","996.57","702.00","3.01","33.32","7715.33","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 702, ""counters"": {}}"
"neo4j","optimized","steady",3,4,2,"medium","1082.91","786.00","2.77","35.31","7720.56","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 786, ""counters"": {}}"
"neo4j","optimized","steady",3,4,3,"medium","1106.13","818.00","2.71","27.98","7724.84","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 818, ""counters"": {}}"
"neo4j","optimized","steady",3,4,4,"medium","880.75","594.00","3.41","32.36","7724.87","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 594, ""counters"": {}}"
"neo4j","optimized","steady",3,4,5,"medium","1166.40","883.00","2.57","38.47","7724.60","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 883, ""counters"": {}}"
"neo4j","optimized","steady",3,4,6,"medium","774.15","484.00","3.88","16.58","7725.12","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 484, ""counters"": {}}"
"neo4j","optimized","steady",3,4,7,"medium","1143.49","858.00","2.62","39.78","7725.05","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 858, ""counters"": {}}"
"neo4j","optimized","steady",3,4,8,"medium","1047.74","755.00","2.86","34.71","7725.30","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 755, ""counters"": {}}"
"neo4j","optimized","steady",3,4,9,"medium","780.90","507.00","3.84","16.87","7725.47","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 507, ""counters"": {}}"
"neo4j","optimized","steady",3,4,10,"medium","1007.76","725.00","2.98","33.99","7725.52","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 72, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 725, ""counters"": {}}"
"neo4j","optimized","warmup",3,5,1,"medium","366.75","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,2,"medium","151.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,3,"medium","245.89","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,4,"medium","179.04","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,5,"medium","150.56","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,6,"medium","147.83","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,7,"medium","144.94","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,8,"medium","177.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,9,"medium","322.02","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,10,"medium","258.56","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,5,1,"medium","122.41","120.00","24.51","26.06","7724.86","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 120, ""counters"": {}}"
"neo4j","optimized","steady",3,5,2,"medium","112.37","98.00","26.70","27.26","7725.42","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 98, ""counters"": {}}"
"neo4j","optimized","steady",3,5,3,"medium","99.25","96.00","30.23","28.14","7725.56","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 96, ""counters"": {}}"
"neo4j","optimized","steady",3,5,4,"medium","94.67","84.00","31.69","27.65","7725.21","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 84, ""counters"": {}}"
"neo4j","optimized","steady",3,5,5,"medium","105.21","102.00","28.51","27.99","7725.05","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 102, ""counters"": {}}"
"neo4j","optimized","steady",3,5,6,"medium","111.23","108.00","26.97","27.06","7725.50","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 108, ""counters"": {}}"
"neo4j","optimized","steady",3,5,7,"medium","116.16","114.00","25.83","34.16","7725.35","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 114, ""counters"": {}}"
"neo4j","optimized","steady",3,5,8,"medium","116.48","99.00","25.75","25.45","7725.19","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 99, ""counters"": {}}"
"neo4j","optimized","steady",3,5,9,"medium","116.56","114.00","25.74","26.25","7725.31","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 114, ""counters"": {}}"
"neo4j","optimized","steady",3,5,10,"medium","105.18","99.00","28.52","26.89","7724.71","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 99, ""counters"": {}}"
"neo4j","optimized","warmup",3,6,1,"medium","159.10","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,2,"medium","96.92","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,3,"medium","95.55","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,4,"medium","95.80","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,5,"medium","94.28","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,6,"medium","94.13","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,7,"medium","93.54","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,8,"medium","94.18","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,9,"medium","94.84","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,10,"medium","93.89","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,6,1,"medium","43.77","21.00","68.54","20.08","7725.32","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",3,6,2,"medium","44.84","22.00","66.91","21.53","7725.39","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",3,6,3,"medium","47.92","23.00","62.60","21.05","7725.47","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,6,4,"medium","43.73","21.00","68.61","21.43","7725.39","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",3,6,5,"medium","43.95","22.00","68.26","20.23","7725.54","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",3,6,6,"medium","43.62","22.00","68.78","20.49","7725.76","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",3,6,7,"medium","43.11","22.00","69.59","20.34","7725.51","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",3,6,8,"medium","43.89","23.00","68.35","20.44","7725.28","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,6,9,"medium","43.85","23.00","68.42","20.35","7725.44","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,6,10,"medium","43.24","22.00","69.39","20.09","7725.51","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","warmup",3,7,1,"complex","1146.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,2,"complex","711.02","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,3,"complex","877.86","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,4,"complex","629.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,5,"complex","623.52","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,6,"complex","2253.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,7,"complex","612.92","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,8,"complex","628.17","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,9,"complex","608.54","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,10,"complex","634.23","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,7,1,"complex","592.64","507.00","5.06","22.06","7727.85","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 507, ""counters"": {}}"
"neo4j","optimized","steady",3,7,2,"complex","568.47","472.00","5.28","23.05","7727.65","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 472, ""counters"": {}}"
"neo4j","optimized","steady",3,7,3,"complex","552.34","460.00","5.43","21.63","7727.78","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 460, ""counters"": {}}"
"neo4j","optimized","steady",3,7,4,"complex","569.09","483.00","5.27","22.33","7727.88","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 483, ""counters"": {}}"
"neo4j","optimized","steady",3,7,5,"complex","564.62","471.00","5.31","22.60","7727.80","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 471, ""counters"": {}}"
"neo4j","optimized","steady",3,7,6,"complex","570.88","485.00","5.26","21.88","7728.19","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 485, ""counters"": {}}"
"neo4j","optimized","steady",3,7,7,"complex","548.75","485.00","5.47","22.39","7727.88","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 485, ""counters"": {}}"
"neo4j","optimized","steady",3,7,8,"complex","558.27","471.00","5.37","23.12","7727.83","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 471, ""counters"": {}}"
"neo4j","optimized","steady",3,7,9,"complex","1314.02","1207.00","2.28","23.24","7728.10","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 1207, ""counters"": {}}"
"neo4j","optimized","steady",3,7,10,"complex","2795.92","2679.00","1.07","24.58","7728.08","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 2679, ""counters"": {}}"
"neo4j","optimized","warmup",3,8,1,"complex","321.97","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,2,"complex","185.07","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,3,"complex","181.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,4,"complex","193.87","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,5,"complex","239.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,6,"complex","197.34","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,7,"complex","200.27","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,8,"complex","235.55","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,9,"complex","151.94","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,10,"complex","151.55","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,8,1,"complex","347.50","34.00","8.63","3.77","7728.07","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",3,8,2,"complex","98.93","33.00","30.33","12.96","7728.16","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",3,8,3,"complex","96.80","32.00","30.99","13.50","7728.14","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",3,8,4,"complex","96.35","34.00","31.14","12.78","7728.15","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",3,8,5,"complex","101.24","36.00","29.63","12.80","7728.15","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 36, ""counters"": {}}"
"neo4j","optimized","steady",3,8,6,"complex","347.95","33.00","8.62","3.40","7728.12","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",3,8,7,"complex","107.19","39.00","27.99","13.04","7727.96","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 39, ""counters"": {}}"
"neo4j","optimized","steady",3,8,8,"complex","104.92","51.00","28.59","15.27","7728.05","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 51, ""counters"": {}}"
"neo4j","optimized","steady",3,8,9,"complex","108.60","33.00","27.62","11.25","7727.83","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",3,8,10,"complex","100.45","52.00","29.86","14.98","7728.22","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 52, ""counters"": {}}"
"neo4j","optimized","warmup",3,9,1,"complex","1771.02","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,2,"complex","1861.91","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,3,"complex","276.64","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,4,"complex","297.30","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,5,"complex","287.43","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,6,"complex","851.48","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,7,"complex","317.56","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,8,"complex","272.46","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,9,"complex","263.94","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,10,"complex","302.18","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,9,1,"complex","211.68","182.00","14.17","23.98","7733.61","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 182, ""counters"": {}}"
"neo4j","optimized","steady",3,9,2,"complex","223.78","196.00","13.41","23.68","7733.50","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 196, ""counters"": {}}"
"neo4j","optimized","steady",3,9,3,"complex","241.21","225.00","12.44","31.12","7733.49","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 225, ""counters"": {}}"
"neo4j","optimized","steady",3,9,4,"complex","238.16","211.00","12.60","24.45","7733.32","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 211, ""counters"": {}}"
"neo4j","optimized","steady",3,9,5,"complex","218.65","181.00","13.72","23.65","7733.20","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 181, ""counters"": {}}"
"neo4j","optimized","steady",3,9,6,"complex","216.05","193.00","13.89","24.83","7733.31","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 193, ""counters"": {}}"
"neo4j","optimized","steady",3,9,7,"complex","221.23","189.00","13.56","23.71","7733.38","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 189, ""counters"": {}}"
"neo4j","optimized","steady",3,9,8,"complex","219.41","183.00","13.67","24.22","7733.44","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 183, ""counters"": {}}"
"neo4j","optimized","steady",3,9,9,"complex","323.86","301.00","9.26","32.32","7733.24","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 301, ""counters"": {}}"
"neo4j","optimized","steady",3,9,10,"complex","322.01","265.00","9.32","23.47","7733.43","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 265, ""counters"": {}}"
"neo4j","optimized","warmup",3,10,1,"very_complex","671.07","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,2,"very_complex","620.99","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,3,"very_complex","603.10","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,4,"very_complex","506.76","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,5,"very_complex","3179.94","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,6,"very_complex","625.84","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,7,"very_complex","574.87","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,8,"very_complex","507.14","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,9,"very_complex","624.47","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,10,"very_complex","472.89","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,10,1,"very_complex","476.26","467.00","6.30","25.72","7734.16","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 467, ""counters"": {}}"
"neo4j","optimized","steady",3,10,2,"very_complex","643.21","620.00","4.66","41.75","7734.01","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 620, ""counters"": {}}"
"neo4j","optimized","steady",3,10,3,"very_complex","436.97","432.00","6.87","31.83","7733.95","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 432, ""counters"": {}}"
"neo4j","optimized","steady",3,10,4,"very_complex","396.72","391.00","7.56","25.56","7734.20","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 391, ""counters"": {}}"
"neo4j","optimized","steady",3,10,5,"very_complex","645.82","639.00","4.65","46.36","7734.08","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 639, ""counters"": {}}"
"neo4j","optimized","steady",3,10,6,"very_complex","420.63","418.00","7.13","29.69","7734.11","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 418, ""counters"": {}}"
"neo4j","optimized","steady",3,10,7,"very_complex","403.06","397.00","7.44","25.58","7734.16","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 397, ""counters"": {}}"
"neo4j","optimized","steady",3,10,8,"very_complex","390.65","385.00","7.68","25.69","7734.47","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 385, ""counters"": {}}"
"neo4j","optimized","steady",3,10,9,"very_complex","813.44","810.00","3.69","48.97","7734.31","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 810, ""counters"": {}}"
"neo4j","optimized","steady",3,10,10,"very_complex","445.34","439.00","6.74","31.69","7734.19","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 439, ""counters"": {}}"
"neo4j","optimized","warmup",3,11,1,"very_complex","6765.87","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,2,"very_complex","1874.36","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,3,"very_complex","1709.51","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,4,"very_complex","1902.92","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,5,"very_complex","1727.93","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,6,"very_complex","2135.73","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,7,"very_complex","1954.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,8,"very_complex","1745.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,9,"very_complex","1838.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,10,"very_complex","1726.66","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,11,1,"very_complex","1853.61","1844.00","1.62","33.12","7734.55","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1844, ""counters"": {}}"
"neo4j","optimized","steady",3,11,2,"very_complex","1582.72","1574.00","1.90","26.08","7734.42","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1574, ""counters"": {}}"
"neo4j","optimized","steady",3,11,3,"very_complex","1886.07","1580.00","1.59","32.14","7734.32","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1580, ""counters"": {}}"
"neo4j","optimized","steady",3,11,4,"very_complex","1726.81","1663.00","1.74","25.60","7734.83","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1663, ""counters"": {}}"
"neo4j","optimized","steady",3,11,5,"very_complex","1674.55","1668.00","1.79","24.89","7734.25","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1668, ""counters"": {}}"
"neo4j","optimized","steady",3,11,6,"very_complex","3758.58","3745.00","0.80","49.95","7734.65","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 3745, ""counters"": {}}"
"neo4j","optimized","steady",3,11,7,"very_complex","1776.43","1764.00","1.69","26.06","7734.62","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1764, ""counters"": {}}"
"neo4j","optimized","steady",3,11,8,"very_complex","1870.17","1843.00","1.60","30.00","7734.97","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1843, ""counters"": {}}"
"neo4j","optimized","steady",3,11,9,"very_complex","2012.60","1997.00","1.49","32.00","7734.87","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1997, ""counters"": {}}"
"neo4j","optimized","steady",3,11,10,"very_complex","1690.00","1684.00","1.78","25.99","7735.36","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1684, ""counters"": {}}"
"neo4j","optimized","warmup",3,12,1,"very_complex","632.45","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,2,"very_complex","619.58","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,3,"very_complex","609.94","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,4,"very_complex","1166.75","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,5,"very_complex","645.35","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,6,"very_complex","635.31","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,7,"very_complex","774.39","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,8,"very_complex","679.54","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,9,"very_complex","628.68","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,10,"very_complex","632.04","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,12,1,"very_complex","860.41","855.00","3.49","43.69","7735.29","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 855, ""counters"": {}}"
"neo4j","optimized","steady",3,12,2,"very_complex","587.99","582.00","5.10","27.87","7735.30","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 582, ""counters"": {}}"
"neo4j","optimized","steady",3,12,3,"very_complex","587.23","582.00","5.11","25.37","7735.37","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 582, ""counters"": {}}"
"neo4j","optimized","steady",3,12,4,"very_complex","580.21","575.00","5.17","25.55","7735.55","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 575, ""counters"": {}}"
"neo4j","optimized","steady",3,12,5,"very_complex","797.78","793.00","3.76","43.54","7735.47","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 793, ""counters"": {}}"
"neo4j","optimized","steady",3,12,6,"very_complex","592.12","587.00","5.07","29.76","7735.09","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 587, ""counters"": {}}"
"neo4j","optimized","steady",3,12,7,"very_complex","565.95","561.00","5.30","25.35","7735.21","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 561, ""counters"": {}}"
"neo4j","optimized","steady",3,12,8,"very_complex","595.28","588.00","5.04","25.70","7735.22","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 588, ""counters"": {}}"
"neo4j","optimized","steady",3,12,9,"very_complex","580.73","575.00","5.17","25.84","7735.13","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 575, ""counters"": {}}"
"neo4j","optimized","steady",3,12,10,"very_complex","1068.41","1063.00","2.81","47.10","7735.29","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 1063, ""counters"": {}}"
"neo4j","optimized","warmup",3,13,1,"create","364.50","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,2,"create","84.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,3,"create","83.40","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,4,"create","86.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,5,"create","86.02","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,6,"create","78.29","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,7,"create","84.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,8,"create","81.29","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,9,"create","87.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,10,"create","87.16","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,13,1,"create","26.17","22.00","114.62","51.42","7735.49","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135008}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,2,"create","39.94","28.00","75.11","27.74","7735.56","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135009}, ""server_ms"": 28, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,3,"create","33.83","23.00","88.68","35.70","7735.56","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135010}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,4,"create","36.80","24.00","81.51","27.99","7735.59","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135011}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,5,"create","26.46","21.00","113.38","36.66","7735.62","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135012}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,6,"create","37.10","21.00","80.86","31.57","7735.71","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135013}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,7,"create","30.50","17.00","98.37","30.87","7735.92","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135014}, ""server_ms"": 17, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,8,"create","32.59","20.00","92.05","28.26","7735.74","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135015}, ""server_ms"": 20, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,9,"create","36.49","21.00","82.21","26.19","7735.67","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135016}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,10,"create","33.47","21.00","89.63","27.45","7735.50","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135017}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",3,14,1,"create","235.83","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,2,"create","99.86","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,3,"create","92.89","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,4,"create","102.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,5,"create","111.25","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,6,"create","119.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,7,"create","113.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,8,"create","139.21","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,9,"create","105.20","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,10,"create","128.03","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,14,1,"create","59.14","53.00","50.73","28.21","7735.77","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199922}, ""server_ms"": 53, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,2,"create","72.99","62.00","41.10","76.05","7735.58","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199923}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,3,"create","54.88","45.00","54.66","27.27","7735.62","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199924}, ""server_ms"": 45, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,4,"create","51.74","43.00","57.98","27.49","7735.74","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199925}, ""server_ms"": 43, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,5,"create","52.78","42.00","56.84","27.76","7735.96","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199926}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,6,"create","46.61","44.00","64.36","30.53","7735.72","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199929}, ""server_ms"": 44, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,7,"create","54.04","43.00","55.51","28.81","7735.77","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199930}, ""server_ms"": 43, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,8,"create","50.69","45.00","59.18","30.89","7735.91","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199931}, ""server_ms"": 45, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,9,"create","47.75","40.00","62.82","30.10","7736.27","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199932}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,10,"create","48.63","39.00","61.69","26.79","7736.09","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199934}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",3,15,1,"create","330.73","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,2,"create","132.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,3,"create","128.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,4,"create","126.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,5,"create","118.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,6,"create","119.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,7,"create","115.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,8,"create","116.42","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,9,"create","121.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,10,"create","117.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,15,1,"create","63.58","50.00","47.19","29.64","7736.49","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150091}, ""server_ms"": 50, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,2,"create","59.62","54.00","50.32","28.95","7736.56","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150093}, ""server_ms"": 54, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,3,"create","69.03","56.00","43.46","25.89","7736.43","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150094}, ""server_ms"": 56, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,4,"create","67.72","54.00","44.30","25.96","7736.28","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150095}, ""server_ms"": 54, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,5,"create","64.20","60.00","46.73","28.29","7736.53","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150097}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,6,"create","68.25","65.00","43.95","27.57","7736.76","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150100}, ""server_ms"": 65, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,7,"create","77.56","61.00","38.68","27.02","7737.17","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150101}, ""server_ms"": 61, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,8,"create","66.93","55.00","44.82","26.78","7736.80","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150103}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,9,"create","68.96","65.00","43.51","27.29","7736.51","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150105}, ""server_ms"": 65, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,10,"create","71.70","62.00","41.84","28.58","7736.80","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150106}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",3,16,1,"create","1222.72","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,2,"create","682.26","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,3,"create","536.62","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,4,"create","464.74","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,5,"create","468.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,6,"create","454.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,7,"create","683.05","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,8,"create","457.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,9,"create","454.74","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,10,"create","466.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,16,1,"create","438.58","390.00","6.84","24.96","7736.83","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049568}, ""server_ms"": 390, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,2,"create","413.18","396.00","7.26","25.24","7737.34","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049570}, ""server_ms"": 396, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,3,"create","805.42","721.00","3.72","23.32","7736.86","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049573}, ""server_ms"": 721, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,4,"create","413.68","410.00","7.25","28.28","7737.14","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049575}, ""server_ms"": 410, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,5,"create","388.27","385.00","7.73","25.04","7737.06","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049578}, ""server_ms"": 385, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,6,"create","415.56","396.00","7.22","25.24","7737.25","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049579}, ""server_ms"": 396, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,7,"create","394.27","391.00","7.61","24.92","7737.28","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049584}, ""server_ms"": 391, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,8,"create","396.46","383.00","7.57","25.50","7737.28","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049585}, ""server_ms"": 383, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,9,"create","545.78","513.00","5.50","25.02","7737.00","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049586}, ""server_ms"": 513, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,10,"create","641.87","638.00","4.67","25.04","7737.10","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049591}, ""server_ms"": 638, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",3,17,1,"update","1258.98","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,2,"update","515.12","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,3,"update","524.69","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,4,"update","531.70","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,5,"update","540.57","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,6,"update","671.45","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,7,"update","530.52","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,8,"update","527.99","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,9,"update","474.72","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,10,"update","499.62","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,17,1,"update","462.11","449.00","6.49","24.96","7737.46","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 104}, ""server_ms"": 449, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,2,"update","433.95","431.00","6.91","25.18","7737.54","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 108}, ""server_ms"": 431, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,3,"update","438.63","423.00","6.84","25.33","7737.83","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 109}, ""server_ms"": 423, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,4,"update","452.97","450.00","6.62","25.08","7737.72","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 114}, ""server_ms"": 450, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,5,"update","427.82","424.00","7.01","25.32","7737.59","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 117}, ""server_ms"": 424, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,6,"update","438.21","433.00","6.85","25.27","7737.65","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 119}, ""server_ms"": 433, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,7,"update","440.78","436.00","6.81","25.52","7737.55","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 122}, ""server_ms"": 436, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,8,"update","464.56","461.00","6.46","29.93","7737.62","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 125}, ""server_ms"": 461, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,9,"update","433.71","427.00","6.92","25.22","7737.84","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 129}, ""server_ms"": 427, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,10,"update","475.35","470.00","6.31","24.78","7737.66","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 131}, ""server_ms"": 470, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,18,1,"update","109.88","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,2,"update","64.00","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,3,"update","63.01","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,4,"update","72.13","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,5,"update","63.57","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,6,"update","64.19","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,7,"update","67.12","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,8,"update","66.62","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,9,"update","71.89","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,10,"update","64.27","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,18,1,"update","13.09","10.00","229.16","44.70","7737.69","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,2,"update","12.98","10.00","231.13","44.92","7737.81","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,3,"update","13.67","11.00","219.50","54.39","7737.73","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,4,"update","12.59","10.00","238.33","45.33","7737.85","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,5,"update","21.17","12.00","141.69","31.77","7737.57","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,6,"update","12.44","9.00","241.08","46.58","7737.62","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,7,"update","14.47","10.00","207.36","43.81","7737.75","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,8,"update","12.93","11.00","232.00","43.50","7737.71","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,9,"update","12.90","10.00","232.59","45.38","7737.67","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,10,"update","12.97","11.00","231.30","44.98","7737.76","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,19,1,"update","192.18","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,2,"update","147.37","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,3,"update","131.39","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,4,"update","133.28","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,5,"update","122.91","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,6,"update","126.90","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,7,"update","135.81","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,8,"update","125.01","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,9,"update","126.22","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,10,"update","125.08","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,19,1,"update","76.24","63.00","39.35","25.60","7737.78","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 94}, ""server_ms"": 63, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,2,"update","79.82","72.00","37.59","26.95","7737.48","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 106}, ""server_ms"": 72, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,3,"update","67.36","63.00","44.54","27.76","7737.82","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 115}, ""server_ms"": 63, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,4,"update","77.49","72.00","38.71","25.08","7737.73","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 124}, ""server_ms"": 72, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,5,"update","68.03","62.00","44.10","27.81","7737.76","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 130}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,6,"update","78.31","67.00","38.31","27.48","7737.87","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 139}, ""server_ms"": 67, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,7,"update","69.65","64.00","43.07","27.64","7737.99","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 151}, ""server_ms"": 64, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,8,"update","80.55","76.00","37.25","25.85","7737.78","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 160}, ""server_ms"": 76, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,9,"update","75.44","62.00","39.77","27.15","7738.14","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 166}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,10,"update","68.17","62.00","44.01","28.08","7737.59","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 175}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,20,1,"update","67.11","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,2,"update","63.56","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,3,"update","63.84","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,4,"update","64.60","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,5,"update","64.25","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,6,"update","67.95","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,7,"update","70.92","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,8,"update","65.53","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,9,"update","64.28","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,10,"update","64.31","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,20,1,"update","15.73","12.00","190.67","21.19","7737.87","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,2,"update","14.60","0.00","205.43","22.20","7737.93","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,3,"update","14.22","0.00","210.91","24.47","7737.92","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,4,"update","7.22","0.00","415.71","46.67","7738.24","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,5,"update","13.45","0.00","223.12","30.51","7738.21","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,6,"update","7.98","5.00","375.79","66.03","7737.79","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,7,"update","13.24","0.00","226.52","25.21","7737.99","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,8,"update","23.62","0.00","127.00","21.96","7737.75","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,9,"update","6.80","0.00","441.05","47.55","7737.92","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,10,"update","13.09","0.00","229.16","25.67","7737.79","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,21,1,"delete","147.02","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,2,"delete","91.30","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,3,"delete","89.21","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,4,"delete","87.10","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,5,"delete","86.79","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,6,"delete","84.41","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,7,"delete","86.82","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,8,"delete","82.74","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,9,"delete","84.44","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,10,"delete","89.44","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,21,1,"delete","33.38","22.00","89.88","27.46","7737.88","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 31}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,2,"delete","27.08","22.00","110.78","33.48","7737.93","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 32}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,3,"delete","35.87","33.00","83.65","28.64","7738.07","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 33}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,4,"delete","35.67","33.00","84.10","26.52","7738.15","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 34}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,5,"delete","33.82","32.00","88.70","26.83","7737.71","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 35}, ""server_ms"": 32, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,6,"delete","37.05","24.00","80.96","24.92","7738.10","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 36}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,7,"delete","29.64","25.00","101.20","31.43","7737.91","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 37}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,8,"delete","39.35","26.00","76.25","26.46","7738.34","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 38}, ""server_ms"": 26, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,9,"delete","37.84","36.00","79.28","27.18","7737.85","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 39}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,10,"delete","35.79","32.00","83.81","25.74","7738.24","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 40}, ""server_ms"": 32, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","warmup",3,22,1,"delete","74.50","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,2,"delete","73.15","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,3,"delete","73.34","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,4,"delete","72.70","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,5,"delete","72.89","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,6,"delete","66.46","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,7,"delete","73.06","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,8,"delete","74.63","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,9,"delete","73.33","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,10,"delete","73.34","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,22,1,"delete","26.47","11.00","113.35","28.54","7738.06","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 31}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,2,"delete","23.49","11.00","127.74","25.62","7738.13","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 32}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,3,"delete","23.59","10.00","127.18","27.23","7737.77","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 33}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,4,"delete","21.49","19.00","139.59","26.63","7738.07","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 34}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",3,22,5,"delete","20.62","8.00","145.48","37.51","7738.30","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 35}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,6,"delete","36.58","31.00","82.01","73.49","7738.09","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 36}, ""server_ms"": 31, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,7,"delete","23.98","11.00","125.13","26.58","7738.22","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 37}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,8,"delete","22.89","20.00","131.09","27.65","7738.31","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 38}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",3,22,9,"delete","21.43","19.00","140.01","27.53","7738.46","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 39}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",3,22,10,"delete","22.82","9.00","131.45","25.79","7738.15","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 40}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",3,23,1,"delete","136.16","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,2,"delete","134.29","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,3,"delete","133.06","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,4,"delete","127.63","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,5,"delete","135.10","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,6,"delete","134.42","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,7,"delete","134.52","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,8,"delete","130.33","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,9,"delete","125.74","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,10,"delete","130.79","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,23,1,"delete","84.41","72.00","35.54","26.79","7738.23","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 31}, ""server_ms"": 72, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,2,"delete","80.01","78.00","37.50","27.34","7738.26","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 32}, ""server_ms"": 78, ""counters"": {}}"
"neo4j","optimized","steady",3,23,3,"delete","84.73","82.00","35.41","27.62","7738.40","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 33}, ""server_ms"": 82, ""counters"": {}}"
"neo4j","optimized","steady",3,23,4,"delete","80.45","79.00","37.29","26.53","7738.15","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 34}, ""server_ms"": 79, ""counters"": {}}"
"neo4j","optimized","steady",3,23,5,"delete","82.10","69.00","36.54","26.04","7738.03","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 35}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,6,"delete","83.04","81.00","36.13","26.78","7738.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 36}, ""server_ms"": 81, ""counters"": {}}"
"neo4j","optimized","steady",3,23,7,"delete","77.01","75.00","38.96","26.66","7738.49","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 37}, ""server_ms"": 75, ""counters"": {}}"
"neo4j","optimized","steady",3,23,8,"delete","78.73","66.00","38.10","26.58","7738.49","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 38}, ""server_ms"": 66, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,9,"delete","82.78","80.00","36.24","26.20","7738.43","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 39}, ""server_ms"": 80, ""counters"": {}}"
"neo4j","optimized","steady",3,23,10,"delete","76.51","73.00","39.21","27.17","7738.25","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 40}, ""server_ms"": 73, ""counters"": {}}"
"neo4j","optimized","warmup",3,24,1,"delete","636.55","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,2,"delete","303.13","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,3,"delete","331.75","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,4,"delete","310.27","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,5,"delete","299.29","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,6,"delete","295.55","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,7,"delete","302.73","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,8,"delete","293.70","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,9,"delete","303.42","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,10,"delete","302.28","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,24,1,"delete","250.39","237.00","11.98","25.93","7738.46","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 31}, ""server_ms"": 237, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,2,"delete","251.50","249.00","11.93","25.94","7738.40","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 32}, ""server_ms"": 249, ""counters"": {}}"
"neo4j","optimized","steady",3,24,3,"delete","267.07","255.00","11.23","25.98","7738.34","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 33}, ""server_ms"": 255, ""counters"": {}}"
"neo4j","optimized","steady",3,24,4,"delete","242.48","239.00","12.37","26.02","7738.60","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 34}, ""server_ms"": 239, ""counters"": {}}"
"neo4j","optimized","steady",3,24,5,"delete","270.63","267.00","11.09","31.96","7738.77","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 35}, ""server_ms"": 267, ""counters"": {}}"
"neo4j","optimized","steady",3,24,6,"delete","247.57","237.00","12.12","25.23","7738.55","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 36}, ""server_ms"": 237, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,7,"delete","250.48","249.00","11.98","25.64","7738.42","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 37}, ""server_ms"": 249, ""counters"": {}}"
"neo4j","optimized","steady",3,24,8,"delete","243.67","237.00","12.31","26.19","7738.66","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 38}, ""server_ms"": 237, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,9,"delete","253.00","250.00","11.86","25.11","7738.62","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 39}, ""server_ms"": 250, ""counters"": {}}"
"neo4j","optimized","steady",3,24,10,"delete","246.30","244.00","12.18","25.61","7738.65","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 40}, ""server_ms"": 244, ""counters"": {}}"
"neo4j","optimized","warmup",5,1,1,"simple","5555.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,2,"simple","5490.75","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,3,"simple","5495.88","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,4,"simple","5498.11","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,5,"simple","5448.67","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,6,"simple","5491.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,7,"simple","5538.99","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,8,"simple","5471.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,9,"simple","5447.63","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,10,"simple","5514.85","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,1,1,"simple","5396.58","466.00","0.93","3.75","7755.35","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 466, ""counters"": {}}"
"neo4j","optimized","steady",5,1,2,"simple","5416.11","470.00","0.92","3.67","7754.93","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 470, ""counters"": {}}"
"neo4j","optimized","steady",5,1,3,"simple","5427.57","437.00","0.92","3.75","7755.26","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 437, ""counters"": {}}"
"neo4j","optimized","steady",5,1,4,"simple","5416.81","425.00","0.92","3.64","7754.71","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 425, ""counters"": {}}"
"neo4j","optimized","steady",5,1,5,"simple","5430.61","471.00","0.92","3.91","7755.22","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 471, ""counters"": {}}"
"neo4j","optimized","steady",5,1,6,"simple","5443.83","448.00","0.92","3.60","7755.27","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 448, ""counters"": {}}"
"neo4j","optimized","steady",5,1,7,"simple","5322.62","430.00","0.94","3.67","7754.77","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 430, ""counters"": {}}"
"neo4j","optimized","steady",5,1,8,"simple","5370.05","427.00","0.93","3.68","7754.96","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 427, ""counters"": {}}"
"neo4j","optimized","steady",5,1,9,"simple","5391.32","453.00","0.93","3.70","7755.02","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 453, ""counters"": {}}"
"neo4j","optimized","steady",5,1,10,"simple","5383.57","462.00","0.93","3.97","7754.95","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 462, ""counters"": {}}"
"neo4j","optimized","warmup",5,2,1,"simple","91.04","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,2,"simple","89.53","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,3,"simple","88.92","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,4,"simple","90.59","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,5,"simple","89.35","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,6,"simple","95.74","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,7,"simple","88.83","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,8,"simple","89.61","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,9,"simple","88.65","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,10,"simple","88.78","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,2,1,"simple","37.63","0.00","132.89","9.74","7754.90","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,2,"simple","37.44","1.00","133.54","9.70","7755.00","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,3,"simple","39.47","1.00","126.69","9.25","7755.08","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,4,"simple","38.62","0.00","129.47","9.26","7754.90","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,5,"simple","38.23","0.00","130.79","9.47","7754.74","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,6,"simple","37.74","1.00","132.49","9.68","7754.81","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,7,"simple","38.60","0.00","129.53","9.51","7754.94","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,8,"simple","37.78","0.00","132.36","11.07","7754.89","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,9,"simple","38.85","1.00","128.70","9.54","7755.09","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,10,"simple","38.06","1.00","131.36","9.33","7755.03","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",5,3,1,"simple","212.73","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,2,"simple","208.73","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,3,"simple","207.75","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,4,"simple","216.26","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,5,"simple","211.54","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,6,"simple","212.12","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,7,"simple","207.25","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,8,"simple","215.41","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,9,"simple","207.12","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,10,"simple","207.31","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,3,1,"simple","151.43","29.00","33.02","10.15","7755.09","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Hornichstr. 89"", ""city"": ""Viersen"", ""zip"": ""41909"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",5,3,2,"simple","157.83","28.00","31.68","10.05","7755.09","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Hornichstr. 89"", ""city"": ""Viersen"", ""zip"": ""41909"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",5,3,3,"simple","159.51","27.00","31.35","9.64","7754.93","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Hornichstr. 89"", ""city"": ""Viersen"", ""zip"": ""41909"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,3,4,"simple","157.86","27.00","31.67","9.55","7754.88","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Hornichstr. 89"", ""city"": ""Viersen"", ""zip"": ""41909"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,3,5,"simple","161.04","28.00","31.05","9.63","7755.05","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Hornichstr. 89"", ""city"": ""Viersen"", ""zip"": ""41909"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",5,3,6,"simple","156.79","28.00","31.89","9.61","7755.09","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Hornichstr. 89"", ""city"": ""Viersen"", ""zip"": ""41909"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",5,3,7,"simple","156.62","24.00","31.92","9.55","7755.04","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Hornichstr. 89"", ""city"": ""Viersen"", ""zip"": ""41909"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",5,3,8,"simple","162.48","25.00","30.77","9.46","7755.08","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Hornichstr. 89"", ""city"": ""Viersen"", ""zip"": ""41909"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",5,3,9,"simple","156.90","29.00","31.87","9.86","7755.23","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Hornichstr. 89"", ""city"": ""Viersen"", ""zip"": ""41909"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",5,3,10,"simple","156.58","27.00","31.93","9.73","7755.28","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Hornichstr. 89"", ""city"": ""Viersen"", ""zip"": ""41909"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","warmup",5,4,1,"medium","1193.78","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,2,"medium","8808.76","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,3,"medium","3613.99","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,4,"medium","1875.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,5,"medium","1415.16","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,6,"medium","1701.39","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,7,"medium","1504.41","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,8,"medium","1364.93","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,9,"medium","3195.90","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,10,"medium","1595.33","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,4,1,"medium","1328.38","858.00","3.76","41.93","7777.77","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 858, ""counters"": {}}"
"neo4j","optimized","steady",5,4,2,"medium","1479.57","944.00","3.38","48.48","7786.83","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 944, ""counters"": {}}"
"neo4j","optimized","steady",5,4,3,"medium","3683.44","3404.00","1.36","67.58","7796.02","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 3404, ""counters"": {}}"
"neo4j","optimized","steady",5,4,4,"medium","4523.97","4167.00","1.11","71.32","7796.07","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 4167, ""counters"": {}}"
"neo4j","optimized","steady",5,4,5,"medium","1677.56","1171.00","2.98","37.11","7796.07","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 1171, ""counters"": {}}"
"neo4j","optimized","steady",5,4,6,"medium","2687.82","2136.00","1.86","49.20","7795.98","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 2136, ""counters"": {}}"
"neo4j","optimized","steady",5,4,7,"medium","1449.21","912.00","3.45","45.16","7796.28","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 912, ""counters"": {}}"
"neo4j","optimized","steady",5,4,8,"medium","1475.92","989.00","3.39","46.98","7796.54","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 989, ""counters"": {}}"
"neo4j","optimized","steady",5,4,9,"medium","1726.85","1246.00","2.90","47.74","7796.46","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 1246, ""counters"": {}}"
"neo4j","optimized","steady",5,4,10,"medium","1420.79","930.00","3.52","44.95","7796.68","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 132, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 930, ""counters"": {}}"
"neo4j","optimized","warmup",5,5,1,"medium","363.16","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,2,"medium","158.75","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,3,"medium","153.90","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,4,"medium","168.56","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,5,"medium","353.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,6,"medium","238.69","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,7,"medium","161.61","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,8,"medium","159.12","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,9,"medium","171.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,10,"medium","162.85","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,5,1,"medium","113.24","96.00","44.15","41.41","7796.53","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 96, ""counters"": {}}"
"neo4j","optimized","steady",5,5,2,"medium","110.26","100.00","45.35","42.31","7796.40","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 100, ""counters"": {}}"
"neo4j","optimized","steady",5,5,3,"medium","110.17","103.00","45.38","42.55","7796.65","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 103, ""counters"": {}}"
"neo4j","optimized","steady",5,5,4,"medium","101.43","97.00","49.30","43.15","7796.45","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 97, ""counters"": {}}"
"neo4j","optimized","steady",5,5,5,"medium","127.47","125.00","39.23","131.97","7796.46","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 125, ""counters"": {}}"
"neo4j","optimized","steady",5,5,6,"medium","108.71","100.00","46.00","41.40","7796.09","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 100, ""counters"": {}}"
"neo4j","optimized","steady",5,5,7,"medium","108.56","106.00","46.06","42.55","7796.23","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 106, ""counters"": {}}"
"neo4j","optimized","steady",5,5,8,"medium","108.51","104.00","46.08","42.90","7796.39","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 104, ""counters"": {}}"
"neo4j","optimized","steady",5,5,9,"medium","222.61","219.00","22.46","42.56","7796.25","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 219, ""counters"": {}}"
"neo4j","optimized","steady",5,5,10,"medium","108.29","103.00","46.17","42.34","7796.27","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 103, ""counters"": {}}"
"neo4j","optimized","warmup",5,6,1,"medium","155.23","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,2,"medium","107.40","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,3,"medium","107.39","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,4,"medium","106.54","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,5,"medium","106.56","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,6,"medium","107.48","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,7,"medium","107.06","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,8,"medium","107.80","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,9,"medium","107.54","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,10,"medium","112.88","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,6,1,"medium","57.49","23.00","86.96","22.47","7796.18","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",5,6,2,"medium","57.70","23.00","86.66","24.28","7796.25","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",5,6,3,"medium","58.93","21.00","84.85","22.05","7796.41","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,6,4,"medium","58.24","21.00","85.85","24.46","7796.05","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,6,5,"medium","57.25","21.00","87.34","21.91","7796.36","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,6,6,"medium","55.64","21.00","89.86","21.34","7796.23","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,6,7,"medium","57.17","23.00","87.46","21.68","7796.57","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",5,6,8,"medium","56.33","22.00","88.77","21.74","7796.51","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",5,6,9,"medium","55.74","21.00","89.71","21.42","7796.25","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,6,10,"medium","57.30","22.00","87.27","22.04","7796.31","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","warmup",5,7,1,"complex","1701.93","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,2,"complex","681.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,3,"complex","828.80","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,4,"complex","2394.69","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,5,"complex","711.89","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,6,"complex","784.77","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,7,"complex","695.61","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,8,"complex","1969.09","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,9,"complex","2675.48","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,10,"complex","720.44","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,7,1,"complex","731.47","546.00","6.84","31.94","7796.38","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 546, ""counters"": {}}"
"neo4j","optimized","steady",5,7,2,"complex","763.95","607.00","6.54","37.26","7796.42","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 607, ""counters"": {}}"
"neo4j","optimized","steady",5,7,3,"complex","640.29","475.00","7.81","31.55","7796.51","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 475, ""counters"": {}}"
"neo4j","optimized","steady",5,7,4,"complex","629.29","470.00","7.95","31.78","7796.46","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 470, ""counters"": {}}"
"neo4j","optimized","steady",5,7,5,"complex","654.03","500.00","7.64","32.65","7796.47","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 500, ""counters"": {}}"
"neo4j","optimized","steady",5,7,6,"complex","724.16","571.00","6.90","33.27","7796.31","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 571, ""counters"": {}}"
"neo4j","optimized","steady",5,7,7,"complex","656.29","492.00","7.62","31.85","7796.67","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 492, ""counters"": {}}"
"neo4j","optimized","steady",5,7,8,"complex","643.45","475.00","7.77","31.90","7796.48","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 475, ""counters"": {}}"
"neo4j","optimized","steady",5,7,9,"complex","630.43","475.00","7.93","32.21","7796.51","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 475, ""counters"": {}}"
"neo4j","optimized","steady",5,7,10,"complex","700.45","543.00","7.14","35.58","7796.38","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 543, ""counters"": {}}"
"neo4j","optimized","warmup",5,8,1,"complex","360.01","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,2,"complex","201.71","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,3,"complex","190.37","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,4,"complex","190.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,5,"complex","199.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,6,"complex","191.48","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,7,"complex","197.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,8,"complex","191.78","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,9,"complex","199.89","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,10,"complex","190.31","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,8,1,"complex","141.98","26.00","35.22","10.74","7796.51","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",5,8,2,"complex","138.11","25.00","36.20","10.48","7796.91","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",5,8,3,"complex","142.16","26.00","35.17","11.95","7796.76","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",5,8,4,"complex","142.74","27.00","35.03","10.92","7796.77","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,8,5,"complex","153.33","29.00","32.61","12.42","7796.75","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",5,8,6,"complex","140.69","26.00","35.54","11.00","7796.82","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",5,8,7,"complex","144.03","27.00","34.71","14.49","7796.80","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,8,8,"complex","145.70","27.00","34.32","16.36","7794.79","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,8,9,"complex","145.66","36.00","34.33","12.80","7792.65","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 36, ""counters"": {}}"
"neo4j","optimized","steady",5,8,10,"complex","150.54","39.00","33.21","13.70","7792.68","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 39, ""counters"": {}}"
"neo4j","optimized","warmup",5,9,1,"complex","766.30","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,2,"complex","423.41","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,3,"complex","335.68","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,4,"complex","296.90","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,5,"complex","308.01","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,6,"complex","319.61","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,7,"complex","304.68","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,8,"complex","288.45","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,9,"complex","298.53","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,10,"complex","293.18","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,9,1,"complex","254.24","201.00","19.67","48.74","7788.01","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 201, ""counters"": {}}"
"neo4j","optimized","steady",5,9,2,"complex","242.86","190.00","20.59","34.63","7789.81","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 190, ""counters"": {}}"
"neo4j","optimized","steady",5,9,3,"complex","255.35","212.00","19.58","37.05","7784.49","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 212, ""counters"": {}}"
"neo4j","optimized","steady",5,9,4,"complex","244.80","197.00","20.43","37.72","7784.67","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 197, ""counters"": {}}"
"neo4j","optimized","steady",5,9,5,"complex","263.10","218.00","19.00","38.96","7784.88","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 218, ""counters"": {}}"
"neo4j","optimized","steady",5,9,6,"complex","253.84","209.00","19.70","36.81","7784.83","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 209, ""counters"": {}}"
"neo4j","optimized","steady",5,9,7,"complex","252.64","211.00","19.79","37.62","7784.63","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 211, ""counters"": {}}"
"neo4j","optimized","steady",5,9,8,"complex","244.85","203.00","20.42","35.98","7784.67","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 203, ""counters"": {}}"
"neo4j","optimized","steady",5,9,9,"complex","250.31","208.00","19.98","39.18","7785.02","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 208, ""counters"": {}}"
"neo4j","optimized","steady",5,9,10,"complex","239.29","205.00","20.90","36.15","7785.03","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 205, ""counters"": {}}"
"neo4j","optimized","warmup",5,10,1,"very_complex","974.54","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,2,"very_complex","531.52","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,3,"very_complex","1103.25","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,4,"very_complex","781.22","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,5,"very_complex","763.13","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,6,"very_complex","498.09","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,7,"very_complex","700.16","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,8,"very_complex","518.17","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,9,"very_complex","698.60","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,10,"very_complex","599.84","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,10,1,"very_complex","407.91","401.00","12.26","42.37","7784.93","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 401, ""counters"": {}}"
"neo4j","optimized","steady",5,10,2,"very_complex","1002.97","936.00","4.99","62.14","7784.64","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 936, ""counters"": {}}"
"neo4j","optimized","steady",5,10,3,"very_complex","571.46","554.00","8.75","57.22","7785.03","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 554, ""counters"": {}}"
"neo4j","optimized","steady",5,10,4,"very_complex","536.15","533.00","9.33","51.04","7784.86","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 533, ""counters"": {}}"
"neo4j","optimized","steady",5,10,5,"very_complex","555.61","532.00","9.00","51.82","7784.70","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 532, ""counters"": {}}"
"neo4j","optimized","steady",5,10,6,"very_complex","478.27","460.00","10.45","49.83","7784.73","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 460, ""counters"": {}}"
"neo4j","optimized","steady",5,10,7,"very_complex","411.60","404.00","12.15","42.13","7784.87","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 404, ""counters"": {}}"
"neo4j","optimized","steady",5,10,8,"very_complex","800.56","754.00","6.25","57.86","7784.88","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 754, ""counters"": {}}"
"neo4j","optimized","steady",5,10,9,"very_complex","556.33","553.00","8.99","50.39","7784.87","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 553, ""counters"": {}}"
"neo4j","optimized","steady",5,10,10,"very_complex","460.42","451.00","10.86","48.80","7784.84","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 451, ""counters"": {}}"
"neo4j","optimized","warmup",5,11,1,"very_complex","5298.97","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,2,"very_complex","1844.99","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,3,"very_complex","1926.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,4,"very_complex","2538.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,5,"very_complex","2082.64","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,6,"very_complex","1991.07","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,7,"very_complex","2123.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,8,"very_complex","1897.30","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,9,"very_complex","3167.61","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,10,"very_complex","2336.81","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,11,1,"very_complex","1925.50","1915.00","2.60","47.47","7785.35","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1915, ""counters"": {}}"
"neo4j","optimized","steady",5,11,2,"very_complex","1906.21","1891.00","2.62","47.14","7785.06","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1891, ""counters"": {}}"
"neo4j","optimized","steady",5,11,3,"very_complex","2155.14","2151.00","2.32","49.18","7785.02","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2151, ""counters"": {}}"
"neo4j","optimized","steady",5,11,4,"very_complex","1912.58","1823.00","2.61","44.87","7785.29","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1823, ""counters"": {}}"
"neo4j","optimized","steady",5,11,5,"very_complex","2073.85","2061.00","2.41","48.84","7785.15","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2061, ""counters"": {}}"
"neo4j","optimized","steady",5,11,6,"very_complex","1916.65","1871.00","2.61","46.35","7785.22","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1871, ""counters"": {}}"
"neo4j","optimized","steady",5,11,7,"very_complex","1948.18","1934.00","2.57","50.36","7784.83","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1934, ""counters"": {}}"
"neo4j","optimized","steady",5,11,8,"very_complex","2096.29","1924.00","2.39","45.09","7785.06","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1924, ""counters"": {}}"
"neo4j","optimized","steady",5,11,9,"very_complex","2206.95","2201.00","2.27","51.22","7785.16","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2201, ""counters"": {}}"
"neo4j","optimized","steady",5,11,10,"very_complex","1953.19","1894.00","2.56","48.97","7785.27","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 1894, ""counters"": {}}"
"neo4j","optimized","warmup",5,12,1,"very_complex","650.99","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,2,"very_complex","629.77","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,3,"very_complex","1093.19","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,4,"very_complex","827.72","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,5,"very_complex","762.05","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,6,"very_complex","643.05","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,7,"very_complex","835.83","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,8,"very_complex","755.68","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,9,"very_complex","817.40","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,10,"very_complex","639.26","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,12,1,"very_complex","873.54","867.00","5.72","60.90","7784.92","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 867, ""counters"": {}}"
"neo4j","optimized","steady",5,12,2,"very_complex","711.20","704.00","7.03","55.44","7784.80","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 704, ""counters"": {}}"
"neo4j","optimized","steady",5,12,3,"very_complex","713.23","706.00","7.01","49.08","7785.13","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 706, ""counters"": {}}"
"neo4j","optimized","steady",5,12,4,"very_complex","630.48","624.00","7.93","46.41","7784.77","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 624, ""counters"": {}}"
"neo4j","optimized","steady",5,12,5,"very_complex","752.10","742.00","6.65","55.67","7784.86","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 742, ""counters"": {}}"
"neo4j","optimized","steady",5,12,6,"very_complex","577.82","570.00","8.65","42.03","7784.87","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 570, ""counters"": {}}"
"neo4j","optimized","steady",5,12,7,"very_complex","862.94","856.00","5.79","56.23","7784.92","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 856, ""counters"": {}}"
"neo4j","optimized","steady",5,12,8,"very_complex","597.30","590.00","8.37","44.18","7785.04","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 590, ""counters"": {}}"
"neo4j","optimized","steady",5,12,9,"very_complex","768.44","761.00","6.51","56.04","7785.09","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 761, ""counters"": {}}"
"neo4j","optimized","steady",5,12,10,"very_complex","590.45","583.00","8.47","42.42","7785.01","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 583, ""counters"": {}}"
"neo4j","optimized","warmup",5,13,1,"create","410.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,2,"create","84.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,3,"create","80.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,4,"create","80.75","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,5,"create","84.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,6,"create","81.89","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,7,"create","85.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,8,"create","84.00","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,9,"create","83.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,10,"create","78.10","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,13,1,"create","34.49","21.00","144.99","39.10","7785.21","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135031}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,2,"create","204.65","152.00","24.43","69.33","7784.91","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135032}, ""server_ms"": 152, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,3,"create","95.25","86.00","52.49","70.40","7784.95","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135033}, ""server_ms"": 86, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,4,"create","31.63","25.00","158.06","45.39","7785.04","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135034}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,5,"create","32.21","22.00","155.23","40.37","7785.02","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135035}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,6,"create","37.83","31.00","132.18","44.39","7785.21","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135036}, ""server_ms"": 31, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,7,"create","33.72","24.00","148.28","40.54","7785.14","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135037}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,8,"create","33.71","21.00","148.34","40.74","7785.00","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135038}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,9,"create","30.93","17.00","161.63","44.67","7785.13","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135039}, ""server_ms"": 17, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,10,"create","31.23","19.00","160.12","42.73","7785.00","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135040}, ""server_ms"": 19, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",5,14,1,"create","248.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,2,"create","98.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,3,"create","94.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,4,"create","92.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,5,"create","95.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,6,"create","98.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,7,"create","97.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,8,"create","96.57","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,9,"create","94.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,10,"create","96.32","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,14,1,"create","44.20","37.00","113.11","38.73","7784.96","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199949}, ""server_ms"": 37, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,2,"create","45.47","36.00","109.97","39.99","7785.28","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199950}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,3,"create","43.71","39.00","114.38","41.33","7785.11","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199951}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,4,"create","46.27","37.00","108.07","41.46","7785.02","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199952}, ""server_ms"": 37, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,5,"create","41.97","38.00","119.12","42.95","7784.73","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199953}, ""server_ms"": 38, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,6,"create","44.93","39.00","111.30","42.27","7785.19","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199954}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,7,"create","43.19","35.00","115.78","44.04","7785.11","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199956}, ""server_ms"": 35, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,8,"create","45.46","32.00","109.99","40.59","7785.06","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199958}, ""server_ms"": 32, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,9,"create","43.09","33.00","116.03","44.37","7785.16","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199961}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,10,"create","44.67","36.00","111.92","42.94","7785.14","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199963}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",5,15,1,"create","286.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,2,"create","150.10","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,3,"create","118.43","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,4,"create","121.45","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,5,"create","117.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,6,"create","116.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,7,"create","121.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,8,"create","118.16","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,9,"create","125.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,10,"create","120.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,15,1,"create","69.70","61.00","71.74","41.28","7785.27","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150119}, ""server_ms"": 61, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,2,"create","64.06","52.00","78.05","42.14","7785.38","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150120}, ""server_ms"": 52, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,3,"create","64.52","56.00","77.50","40.47","7784.84","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150121}, ""server_ms"": 56, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,4,"create","65.52","58.00","76.31","43.38","7784.99","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150122}, ""server_ms"": 58, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,5,"create","61.87","54.00","80.81","42.53","7784.87","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150123}, ""server_ms"": 54, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,6,"create","62.88","56.00","79.51","41.86","7785.14","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150125}, ""server_ms"": 56, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,7,"create","65.74","57.00","76.05","40.26","7785.11","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150126}, ""server_ms"": 57, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,8,"create","63.76","57.00","78.42","40.44","7785.22","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150127}, ""server_ms"": 57, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,9,"create","67.33","59.00","74.26","41.73","7784.93","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150128}, ""server_ms"": 59, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,10,"create","67.63","58.00","73.94","39.92","7785.12","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150129}, ""server_ms"": 58, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",5,16,1,"create","1015.84","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,2,"create","553.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,3,"create","489.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,4,"create","466.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,5,"create","461.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,6,"create","470.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,7,"create","494.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,8,"create","463.22","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,9,"create","456.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,10,"create","452.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,16,1,"create","407.12","398.00","12.28","41.56","7786.30","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049630}, ""server_ms"": 398, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,2,"create","404.31","386.00","12.37","40.73","7786.13","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049634}, ""server_ms"": 386, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,3,"create","400.71","376.00","12.48","41.46","7786.32","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049636}, ""server_ms"": 376, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,4,"create","405.09","402.00","12.34","42.13","7786.14","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049641}, ""server_ms"": 402, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,5,"create","768.79","734.00","6.50","41.88","7786.26","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049642}, ""server_ms"": 734, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,6,"create","419.49","416.00","11.92","40.60","7785.93","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049648}, ""server_ms"": 416, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,7,"create","412.02","400.00","12.14","41.27","7786.48","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049650}, ""server_ms"": 400, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,8,"create","422.51","413.00","11.83","40.63","7786.25","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049655}, ""server_ms"": 413, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,9,"create","420.26","417.00","11.90","40.50","7786.18","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049658}, ""server_ms"": 417, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,10,"create","408.33","394.00","12.25","40.99","7786.06","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049659}, ""server_ms"": 394, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",5,17,1,"update","948.40","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,2,"update","536.13","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,3,"update","562.23","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,4,"update","521.67","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,5,"update","585.90","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,6,"update","516.40","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,7,"update","528.90","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,8,"update","560.61","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,9,"update","504.04","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,10,"update","534.09","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,17,1,"update","449.77","424.00","11.12","40.53","7786.36","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 184}, ""server_ms"": 424, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,2,"update","452.72","430.00","11.04","41.26","7786.21","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 188}, ""server_ms"": 430, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,3,"update","463.67","458.00","10.78","41.99","7786.25","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 196}, ""server_ms"": 458, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,4,"update","471.37","429.00","10.61","39.60","7786.29","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 199}, ""server_ms"": 429, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,5,"update","464.18","421.00","10.77","40.45","7786.45","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 203}, ""server_ms"": 421, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,6,"update","463.62","461.00","10.78","40.97","7786.07","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 212}, ""server_ms"": 461, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,7,"update","451.73","447.00","11.07","41.74","7785.90","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 215}, ""server_ms"": 447, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,8,"update","464.45","436.00","10.77","43.85","7786.02","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 218}, ""server_ms"": 436, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,9,"update","475.16","416.00","10.52","38.38","7786.39","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 224}, ""server_ms"": 416, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,10,"update","459.50","454.00","10.88","41.41","7786.08","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 231}, ""server_ms"": 454, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,18,1,"update","100.45","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,2,"update","64.63","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,3,"update","64.91","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,4,"update","63.76","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,5,"update","64.98","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,6,"update","64.98","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,7,"update","65.09","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,8,"update","64.43","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,9,"update","65.31","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,10,"update","71.95","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,18,1,"update","14.16","9.00","353.14","55.33","7786.37","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,2,"update","14.57","12.00","343.19","56.57","7786.48","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,3,"update","13.75","11.00","363.67","62.94","7786.07","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,4,"update","17.29","9.00","289.14","47.06","7786.10","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,5,"update","14.95","9.00","334.40","52.87","7785.91","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,6,"update","14.73","11.00","339.42","53.52","7786.31","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,7,"update","14.21","11.00","351.89","60.88","7786.43","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,8,"update","14.01","12.00","356.76","56.95","7786.42","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,9,"update","14.26","12.00","350.56","54.44","7786.39","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,10,"update","13.92","10.00","359.32","56.56","7786.15","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,19,1,"update","213.84","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,2,"update","134.68","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,3,"update","130.95","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,4,"update","137.76","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,5,"update","144.16","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,6,"update","126.52","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,7,"update","131.16","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,8,"update","133.88","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,9,"update","131.37","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,10,"update","132.06","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,19,1,"update","82.71","79.00","60.45","40.17","7786.56","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 163}, ""server_ms"": 79, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,2,"update","86.16","78.00","58.03","40.82","7786.39","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 172}, ""server_ms"": 78, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,3,"update","93.60","83.00","53.42","42.51","7786.33","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 193}, ""server_ms"": 83, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,4,"update","81.33","74.00","61.48","38.67","7786.21","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 202}, ""server_ms"": 74, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,5,"update","85.99","83.00","58.14","41.17","7786.27","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 226}, ""server_ms"": 83, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,6,"update","82.69","80.00","60.46","40.07","7786.32","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 241}, ""server_ms"": 80, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,7,"update","98.37","90.00","50.83","40.26","7786.48","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 253}, ""server_ms"": 90, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,8,"update","89.08","71.00","56.13","39.47","7786.23","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 259}, ""server_ms"": 71, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,9,"update","89.23","83.00","56.04","37.15","7786.23","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 280}, ""server_ms"": 83, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,10,"update","80.33","78.00","62.24","39.37","7786.40","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 301}, ""server_ms"": 78, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,20,1,"update","82.39","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,2,"update","68.93","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,3,"update","67.41","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,4,"update","66.43","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,5,"update","66.51","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,6,"update","67.24","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,7,"update","74.89","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,8,"update","68.02","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,9,"update","72.74","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,10,"update","67.21","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,20,1,"update","17.49","0.00","285.84","23.67","7786.21","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,2,"update","17.23","9.00","290.17","21.52","7786.19","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,3,"update","17.23","1.00","290.14","25.16","7786.00","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,4,"update","24.47","0.00","204.36","17.63","7786.45","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,5,"update","9.22","0.00","542.24","37.87","7786.30","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,6,"update","16.26","9.00","307.54","21.53","7786.45","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,7,"update","16.36","13.00","305.55","23.40","7786.48","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,8,"update","18.16","14.00","275.28","20.45","7786.28","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 14, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,9,"update","9.18","1.00","544.63","36.86","7786.22","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,10,"update","9.95","3.00","502.45","35.98","7786.28","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,21,1,"delete","158.40","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,2,"delete","100.37","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,3,"delete","93.06","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,4,"delete","88.46","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,5,"delete","87.54","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,6,"delete","88.13","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,7,"delete","85.50","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,8,"delete","84.15","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,9,"delete","86.55","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,10,"delete","87.23","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,21,1,"delete","28.46","26.00","175.70","48.15","7786.27","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 51}, ""server_ms"": 26, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,2,"delete","39.97","34.00","125.11","39.98","7786.34","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 52}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,3,"delete","35.76","23.00","139.82","38.31","7786.67","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 53}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,4,"delete","35.26","22.00","141.80","39.19","7786.42","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 54}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,5,"delete","37.81","34.00","132.23","40.53","7785.98","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 55}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,6,"delete","37.64","35.00","132.83","38.88","7786.43","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 56}, ""server_ms"": 35, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,7,"delete","43.32","42.00","115.42","37.21","7786.60","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 57}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,8,"delete","32.11","30.00","155.70","46.28","7786.21","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 58}, ""server_ms"": 30, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,9,"delete","38.71","31.00","129.18","35.59","7786.17","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 59}, ""server_ms"": 31, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,10,"delete","47.68","45.00","104.87","120.08","7786.74","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 60}, ""server_ms"": 45, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","warmup",5,22,1,"delete","103.26","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,2,"delete","74.30","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,3,"delete","76.04","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,4,"delete","72.38","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,5,"delete","65.27","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,6,"delete","72.78","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,7,"delete","74.08","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,8,"delete","65.03","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,9,"delete","74.10","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,10,"delete","67.99","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,22,1,"delete","21.15","20.00","236.40","38.98","7786.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 51}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",5,22,2,"delete","23.50","21.00","212.77","36.83","7786.49","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 52}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,22,3,"delete","21.97","20.00","227.57","36.28","7786.50","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 53}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",5,22,4,"delete","29.47","27.00","169.64","28.75","7786.50","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 54}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,22,5,"delete","15.77","14.00","317.14","51.75","7786.57","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 55}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",5,22,6,"delete","22.41","18.00","223.13","38.58","7786.48","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 56}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","optimized","steady",5,22,7,"delete","24.40","11.00","204.90","35.60","7786.45","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 57}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,8,"delete","22.38","14.00","223.45","42.10","7786.36","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 58}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",5,22,9,"delete","21.62","19.00","231.29","37.09","7786.34","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 59}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",5,22,10,"delete","15.13","12.00","330.57","55.33","7786.51","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 60}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","warmup",5,23,1,"delete","139.97","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,2,"delete","137.87","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,3,"delete","134.26","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,4,"delete","144.02","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,5,"delete","132.14","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,6,"delete","135.93","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,7,"delete","136.45","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,8,"delete","134.83","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,9,"delete","127.62","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,10,"delete","132.07","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,23,1,"delete","87.42","85.00","57.20","45.47","7786.40","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 51}, ""server_ms"": 85, ""counters"": {}}"
"neo4j","optimized","steady",5,23,2,"delete","84.63","83.00","59.08","40.80","7786.55","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 52}, ""server_ms"": 83, ""counters"": {}}"
"neo4j","optimized","steady",5,23,3,"delete","85.17","83.00","58.71","40.16","7786.60","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 53}, ""server_ms"": 83, ""counters"": {}}"
"neo4j","optimized","steady",5,23,4,"delete","81.35","72.00","61.46","43.80","7786.42","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 54}, ""server_ms"": 72, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,5,"delete","95.31","70.00","52.46","38.74","7786.41","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 55}, ""server_ms"": 70, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,6,"delete","80.71","78.00","61.95","41.23","7786.58","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 56}, ""server_ms"": 78, ""counters"": {}}"
"neo4j","optimized","steady",5,23,7,"delete","79.28","75.00","63.07","43.01","7786.75","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 57}, ""server_ms"": 75, ""counters"": {}}"
"neo4j","optimized","steady",5,23,8,"delete","77.73","76.00","64.32","43.44","7786.74","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 58}, ""server_ms"": 76, ""counters"": {}}"
"neo4j","optimized","steady",5,23,9,"delete","82.88","81.00","60.33","42.43","7786.71","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 59}, ""server_ms"": 81, ""counters"": {}}"
"neo4j","optimized","steady",5,23,10,"delete","89.59","86.00","55.81","39.93","7786.66","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 60}, ""server_ms"": 86, ""counters"": {}}"
"neo4j","optimized","warmup",5,24,1,"delete","616.26","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,2,"delete","348.48","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,3,"delete","324.97","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,4,"delete","321.93","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,5,"delete","336.18","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,6,"delete","311.09","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,7,"delete","313.82","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,8,"delete","335.68","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,9,"delete","319.30","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,10,"delete","325.78","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,24,1,"delete","272.45","271.00","18.35","40.76","7786.91","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 51}, ""server_ms"": 271, ""counters"": {}}"
"neo4j","optimized","steady",5,24,2,"delete","268.00","256.00","18.66","40.96","7786.68","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 52}, ""server_ms"": 256, ""counters"": {}}"
"neo4j","optimized","steady",5,24,3,"delete","275.12","258.00","18.17","41.74","7786.67","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 53}, ""server_ms"": 258, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,4,"delete","269.28","259.00","18.57","41.04","7789.38","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 54}, ""server_ms"": 259, ""counters"": {}}"
"neo4j","optimized","steady",5,24,5,"delete","283.29","278.00","17.65","40.62","7789.65","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 55}, ""server_ms"": 278, ""counters"": {}}"
"neo4j","optimized","steady",5,24,6,"delete","270.86","261.00","18.46","41.00","7789.66","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 56}, ""server_ms"": 261, ""counters"": {}}"
"neo4j","optimized","steady",5,24,7,"delete","266.85","242.00","18.74","41.22","7789.53","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 57}, ""server_ms"": 242, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,8,"delete","271.02","248.00","18.45","40.40","7789.59","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 58}, ""server_ms"": 248, ""counters"": {}}"
"neo4j","optimized","steady",5,24,9,"delete","283.35","244.00","17.65","38.39","7789.88","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 59}, ""server_ms"": 244, ""counters"": {}}"
"neo4j","optimized","steady",5,24,10,"delete","362.56","255.00","13.79","31.21","7791.88","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 60}, ""server_ms"": 255, ""counters"": {}}"
"neo4j","optimized","warmup",10,1,1,"simple","11169.60","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,2,"simple","10851.60","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,3,"simple","10770.49","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,4,"simple","10710.94","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,5,"simple","10690.35","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,6,"simple","10778.63","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,7,"simple","10833.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,8,"simple","10779.39","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,9,"simple","10785.90","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,10,"simple","10753.11","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,1,1,"simple","10775.42","558.00","0.93","4.59","7838.28","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 558, ""counters"": {}}"
"neo4j","optimized","steady",10,1,2,"simple","10717.61","544.00","0.93","4.28","7838.59","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 544, ""counters"": {}}"
"neo4j","optimized","steady",10,1,3,"simple","10735.50","533.00","0.93","4.19","7838.47","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 533, ""counters"": {}}"
"neo4j","optimized","steady",10,1,4,"simple","10771.98","542.00","0.93","4.63","7838.31","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 542, ""counters"": {}}"
"neo4j","optimized","steady",10,1,5,"simple","10756.71","533.00","0.93","4.27","7838.39","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 533, ""counters"": {}}"
"neo4j","optimized","steady",10,1,6,"simple","10791.06","476.00","0.93","4.29","7838.50","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 476, ""counters"": {}}"
"neo4j","optimized","steady",10,1,7,"simple","10707.65","541.00","0.93","4.53","7838.18","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 541, ""counters"": {}}"
"neo4j","optimized","steady",10,1,8,"simple","10683.22","516.00","0.94","4.17","7838.02","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 516, ""counters"": {}}"
"neo4j","optimized","steady",10,1,9,"simple","10680.42","482.00","0.94","4.25","7838.14","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 482, ""counters"": {}}"
"neo4j","optimized","steady",10,1,10,"simple","10694.58","485.00","0.94","4.01","7838.34","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 485, ""counters"": {}}"
"neo4j","optimized","warmup",10,2,1,"simple","134.28","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,2,"simple","133.39","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,3,"simple","127.44","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,4,"simple","125.64","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,5,"simple","137.71","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,6,"simple","125.38","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,7,"simple","131.14","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,8,"simple","125.85","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,9,"simple","130.22","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,10,"simple","125.95","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,2,1,"simple","74.86","1.00","133.58","6.49","7838.32","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,2,"simple","76.09","1.00","131.42","5.89","7838.37","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,3,"simple","76.82","1.00","130.17","5.67","7838.26","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,4,"simple","75.26","0.00","132.87","5.74","7838.64","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,5,"simple","74.92","0.00","133.47","5.82","7838.71","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,6,"simple","77.52","0.00","129.00","9.67","7838.42","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,7,"simple","75.70","1.00","132.10","5.74","7838.42","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,8,"simple","74.80","1.00","133.69","6.67","7838.09","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,9,"simple","74.73","0.00","133.82","5.72","7838.66","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,10,"simple","76.77","0.00","130.25","5.77","7838.36","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",10,3,1,"simple","376.55","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,2,"simple","347.13","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,3,"simple","354.49","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,4,"simple","358.84","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,5,"simple","355.36","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,6,"simple","358.78","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,7,"simple","344.34","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,8,"simple","352.39","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,9,"simple","352.28","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,10,"simple","348.22","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,3,1,"simple","302.72","33.00","33.03","10.94","7838.35","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Schmidtallee 3/7"", ""city"": ""Dresden"", ""zip"": ""85357"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",10,3,2,"simple","299.98","33.00","33.34","10.15","7838.52","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Schmidtallee 3/7"", ""city"": ""Dresden"", ""zip"": ""85357"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",10,3,3,"simple","294.36","34.00","33.97","10.95","7838.38","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Schmidtallee 3/7"", ""city"": ""Dresden"", ""zip"": ""85357"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",10,3,4,"simple","305.06","33.00","32.78","10.72","7838.35","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Schmidtallee 3/7"", ""city"": ""Dresden"", ""zip"": ""85357"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",10,3,5,"simple","310.09","29.00","32.25","10.46","7838.30","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Schmidtallee 3/7"", ""city"": ""Dresden"", ""zip"": ""85357"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",10,3,6,"simple","297.77","33.00","33.58","11.31","7838.64","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Schmidtallee 3/7"", ""city"": ""Dresden"", ""zip"": ""85357"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",10,3,7,"simple","293.81","36.00","34.04","10.68","7838.37","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Schmidtallee 3/7"", ""city"": ""Dresden"", ""zip"": ""85357"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 36, ""counters"": {}}"
"neo4j","optimized","steady",10,3,8,"simple","294.62","31.00","33.94","10.37","7838.42","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Schmidtallee 3/7"", ""city"": ""Dresden"", ""zip"": ""85357"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",10,3,9,"simple","294.47","32.00","33.96","10.38","7838.41","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Schmidtallee 3/7"", ""city"": ""Dresden"", ""zip"": ""85357"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",10,3,10,"simple","297.32","34.00","33.63","10.91","7838.24","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 43, ""street"": ""Schmidtallee 3/7"", ""city"": ""Dresden"", ""zip"": ""85357"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","warmup",10,4,1,"medium","8379.97","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,2,"medium","5546.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,3,"medium","6205.09","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,4,"medium","3660.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,5,"medium","3327.80","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,6,"medium","2573.14","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,7,"medium","2473.03","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,8,"medium","3442.64","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,9,"medium","4771.58","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,10,"medium","4332.24","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,4,1,"medium","6045.53","4913.00","1.65","81.39","8042.17","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 4913, ""counters"": {}}"
"neo4j","optimized","steady",10,4,2,"medium","6056.79","4985.00","1.65","67.19","8041.90","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 4985, ""counters"": {}}"
"neo4j","optimized","steady",10,4,3,"medium","2843.69","1869.00","3.52","63.57","8042.14","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 1869, ""counters"": {}}"
"neo4j","optimized","steady",10,4,4,"medium","2394.35","1339.00","4.18","60.38","8041.80","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 1339, ""counters"": {}}"
"neo4j","optimized","steady",10,4,5,"medium","2485.45","1357.00","4.02","62.86","8041.91","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 1357, ""counters"": {}}"
"neo4j","optimized","steady",10,4,6,"medium","2341.49","1218.00","4.27","48.50","8042.01","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 1218, ""counters"": {}}"
"neo4j","optimized","steady",10,4,7,"medium","3026.66","1884.00","3.30","75.60","8042.26","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 1884, ""counters"": {}}"
"neo4j","optimized","steady",10,4,8,"medium","3834.04","2736.00","2.61","66.13","8028.57","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 2736, ""counters"": {}}"
"neo4j","optimized","steady",10,4,9,"medium","5315.97","4365.00","1.88","77.05","8014.81","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 4365, ""counters"": {}}"
"neo4j","optimized","steady",10,4,10,"medium","5724.75","4724.00","1.75","61.93","8015.13","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 232, ""created_at"": ""2025-05-03T01:23:57.000000000+00:00"", ""updated_at"": ""2025-06-07T18:06:30.000000000+00:00""}, ""server_ms"": 4724, ""counters"": {}}"
"neo4j","optimized","warmup",10,5,1,"medium","413.56","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,2,"medium","234.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,3,"medium","200.63","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,4,"medium","210.32","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,5,"medium","186.50","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,6,"medium","225.03","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,7,"medium","264.20","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,8,"medium","232.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,9,"medium","192.40","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,10,"medium","165.57","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,5,1,"medium","213.82","167.00","46.77","141.05","8015.21","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 167, ""counters"": {}}"
"neo4j","optimized","steady",10,5,2,"medium","153.36","101.00","65.21","71.53","8015.39","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 101, ""counters"": {}}"
"neo4j","optimized","steady",10,5,3,"medium","126.23","107.00","79.22","74.88","8015.05","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 107, ""counters"": {}}"
"neo4j","optimized","steady",10,5,4,"medium","185.38","167.00","53.94","79.09","8015.66","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 167, ""counters"": {}}"
"neo4j","optimized","steady",10,5,5,"medium","153.11","122.00","65.31","77.71","8015.50","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 122, ""counters"": {}}"
"neo4j","optimized","steady",10,5,6,"medium","125.51","113.00","79.68","79.38","8015.42","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 113, ""counters"": {}}"
"neo4j","optimized","steady",10,5,7,"medium","168.40","159.00","59.38","147.55","8015.19","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 159, ""counters"": {}}"
"neo4j","optimized","steady",10,5,8,"medium","139.91","128.00","71.48","89.31","8016.45","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 128, ""counters"": {}}"
"neo4j","optimized","steady",10,5,9,"medium","120.00","113.00","83.33","80.42","8016.72","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 113, ""counters"": {}}"
"neo4j","optimized","steady",10,5,10,"medium","158.45","147.00","63.11","81.66","8017.11","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 147, ""counters"": {}}"
"neo4j","optimized","warmup",10,6,1,"medium","325.71","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,2,"medium","144.25","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,3,"medium","153.07","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,4,"medium","144.75","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,5,"medium","159.62","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,6,"medium","144.59","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,7,"medium","145.65","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,8,"medium","143.23","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,9,"medium","147.15","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,10,"medium","142.85","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,6,1,"medium","90.48","24.00","110.52","25.52","8013.12","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,6,2,"medium","91.69","26.00","109.07","25.64","8013.23","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",10,6,3,"medium","90.23","24.00","110.82","25.17","8013.32","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,6,4,"medium","90.51","24.00","110.49","25.32","8013.41","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,6,5,"medium","97.05","26.00","103.04","29.46","8013.30","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",10,6,6,"medium","95.74","26.00","104.44","24.84","8013.07","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",10,6,7,"medium","92.54","24.00","108.07","25.43","8013.38","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,6,8,"medium","90.96","24.00","109.93","30.86","8013.11","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,6,9,"medium","91.15","27.00","109.71","28.47","8013.22","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",10,6,10,"medium","97.10","28.00","102.99","33.45","8013.34","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 2980, ""user_id"": 11566, ""product_id"": 1856472, ""rating"": 4, ""created_at"": ""2025-07-13T03:13:52.000000000+00:00""}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","warmup",10,7,1,"complex","1738.14","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,2,"complex","914.97","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,3,"complex","2432.92","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,4,"complex","1443.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,5,"complex","1011.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,6,"complex","1023.49","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,7,"complex","899.74","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,8,"complex","875.36","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,9,"complex","874.79","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,10,"complex","895.43","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,7,1,"complex","872.50","553.00","11.46","54.48","8015.37","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 553, ""counters"": {}}"
"neo4j","optimized","steady",10,7,2,"complex","840.43","532.00","11.90","57.28","8021.71","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 532, ""counters"": {}}"
"neo4j","optimized","steady",10,7,3,"complex","876.99","554.00","11.40","54.91","8021.23","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 554, ""counters"": {}}"
"neo4j","optimized","steady",10,7,4,"complex","855.80","629.00","11.68","54.06","8013.76","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 629, ""counters"": {}}"
"neo4j","optimized","steady",10,7,5,"complex","861.66","548.00","11.61","56.90","8018.96","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 548, ""counters"": {}}"
"neo4j","optimized","steady",10,7,6,"complex","824.43","505.00","12.13","51.91","8013.75","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 505, ""counters"": {}}"
"neo4j","optimized","steady",10,7,7,"complex","822.21","509.00","12.16","52.80","8015.06","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 509, ""counters"": {}}"
"neo4j","optimized","steady",10,7,8,"complex","837.10","518.00","11.95","53.95","8015.48","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 518, ""counters"": {}}"
"neo4j","optimized","steady",10,7,9,"complex","858.82","542.00","11.64","53.89","8013.86","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 542, ""counters"": {}}"
"neo4j","optimized","steady",10,7,10,"complex","810.51","527.00","12.34","54.17","8013.73","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-04-18T02:10:10.000000000+00:00"", ""total"": 100.25000238418579}, ""server_ms"": 527, ""counters"": {}}"
"neo4j","optimized","warmup",10,8,1,"complex","546.62","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,2,"complex","361.06","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,3,"complex","314.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,4,"complex","328.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,5,"complex","311.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,6,"complex","323.89","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,7,"complex","313.99","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,8,"complex","318.36","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,9,"complex","323.64","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,10,"complex","312.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,8,1,"complex","270.64","29.00","36.95","11.47","8016.36","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",10,8,2,"complex","262.60","27.00","38.08","11.29","8016.51","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",10,8,3,"complex","259.38","27.00","38.55","10.69","8016.43","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",10,8,4,"complex","269.40","27.00","37.12","10.31","8016.50","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",10,8,5,"complex","276.21","28.00","36.20","10.53","8016.24","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",10,8,6,"complex","265.01","32.00","37.73","12.05","8016.38","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",10,8,7,"complex","265.40","35.00","37.68","14.51","8016.45","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 35, ""counters"": {}}"
"neo4j","optimized","steady",10,8,8,"complex","262.22","28.00","38.14","11.41","8016.24","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",10,8,9,"complex","262.65","29.00","38.07","11.69","8016.50","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","optimized","steady",10,8,10,"complex","291.73","54.00","34.28","16.22","8016.36","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 775, ""name"": ""Roberts Beacon 330 Bluetooth Speaker with EQ & Stereo Pairing - Carbon Black"", ""avg_rating"": 5.0}, ""server_ms"": 54, ""counters"": {}}"
"neo4j","optimized","warmup",10,9,1,"complex","583.83","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,2,"complex","377.60","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,3,"complex","387.09","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,4,"complex","385.94","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,5,"complex","386.83","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,6,"complex","397.67","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,7,"complex","388.35","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,8,"complex","377.16","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,9,"complex","435.36","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,10,"complex","364.85","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,9,1,"complex","363.64","290.00","27.50","65.69","8016.58","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 290, ""counters"": {}}"
"neo4j","optimized","steady",10,9,2,"complex","384.10","250.00","26.03","62.66","8016.64","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 250, ""counters"": {}}"
"neo4j","optimized","steady",10,9,3,"complex","356.30","262.00","28.07","63.32","8016.53","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 262, ""counters"": {}}"
"neo4j","optimized","steady",10,9,4,"complex","376.35","259.00","26.57","63.69","8016.54","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 259, ""counters"": {}}"
"neo4j","optimized","steady",10,9,5,"complex","353.43","254.00","28.29","59.94","8016.80","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 254, ""counters"": {}}"
"neo4j","optimized","steady",10,9,6,"complex","373.40","269.00","26.78","65.92","8016.57","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 269, ""counters"": {}}"
"neo4j","optimized","steady",10,9,7,"complex","359.57","302.00","27.81","61.05","8016.67","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 302, ""counters"": {}}"
"neo4j","optimized","steady",10,9,8,"complex","370.32","281.00","27.00","65.02","8016.75","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 281, ""counters"": {}}"
"neo4j","optimized","steady",10,9,9,"complex","346.20","242.00","28.89","61.43","8016.96","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 242, ""counters"": {}}"
"neo4j","optimized","steady",10,9,10,"complex","358.53","275.00","27.89","68.51","8016.50","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 275, ""counters"": {}}"
"neo4j","optimized","warmup",10,10,1,"very_complex","889.17","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,2,"very_complex","4629.94","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,3,"very_complex","3937.61","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,4,"very_complex","2010.52","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,5,"very_complex","850.07","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,6,"very_complex","951.43","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,7,"very_complex","818.18","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,8,"very_complex","821.15","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,9,"very_complex","794.95","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,10,"very_complex","755.56","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,10,1,"very_complex","771.38","729.00","12.96","80.26","8016.97","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 729, ""counters"": {}}"
"neo4j","optimized","steady",10,10,2,"very_complex","732.65","692.00","13.65","81.14","8016.73","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 692, ""counters"": {}}"
"neo4j","optimized","steady",10,10,3,"very_complex","754.25","752.00","13.26","82.17","8016.95","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 752, ""counters"": {}}"
"neo4j","optimized","steady",10,10,4,"very_complex","731.12","625.00","13.68","80.96","8017.20","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 625, ""counters"": {}}"
"neo4j","optimized","steady",10,10,5,"very_complex","772.15","623.00","12.95","79.79","8016.73","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 623, ""counters"": {}}"
"neo4j","optimized","steady",10,10,6,"very_complex","819.44","737.00","12.20","78.43","8016.87","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 737, ""counters"": {}}"
"neo4j","optimized","steady",10,10,7,"very_complex","664.38","594.00","15.05","75.25","8017.11","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 594, ""counters"": {}}"
"neo4j","optimized","steady",10,10,8,"very_complex","2616.34","1929.00","3.82","89.12","8017.26","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 1929, ""counters"": {}}"
"neo4j","optimized","steady",10,10,9,"very_complex","962.00","865.00","10.39","83.85","8017.09","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 865, ""counters"": {}}"
"neo4j","optimized","steady",10,10,10,"very_complex","822.69","858.00","12.16","83.05","8017.15","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""rec_id"": 165738, ""freq"": 1}, ""server_ms"": 858, ""counters"": {}}"
"neo4j","optimized","warmup",10,11,1,"very_complex","8629.72","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,2,"very_complex","3468.59","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,3,"very_complex","6584.50","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,4,"very_complex","4140.31","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,5,"very_complex","2838.06","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,6,"very_complex","2657.28","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,7,"very_complex","2583.51","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,8,"very_complex","2927.32","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,9,"very_complex","2768.43","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,10,"very_complex","2952.51","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,11,1,"very_complex","2378.26","2372.00","4.20","87.60","8014.66","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2372, ""counters"": {}}"
"neo4j","optimized","steady",10,11,2,"very_complex","4407.96","4205.00","2.27","83.45","8015.05","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 4205, ""counters"": {}}"
"neo4j","optimized","steady",10,11,3,"very_complex","2673.06","2406.00","3.74","84.28","8014.67","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2406, ""counters"": {}}"
"neo4j","optimized","steady",10,11,4,"very_complex","2800.36","2606.00","3.57","86.11","8014.86","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2606, ""counters"": {}}"
"neo4j","optimized","steady",10,11,5,"very_complex","3749.83","3657.00","2.67","86.97","8015.04","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 3657, ""counters"": {}}"
"neo4j","optimized","steady",10,11,6,"very_complex","3052.06","2861.00","3.28","85.20","8014.80","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2861, ""counters"": {}}"
"neo4j","optimized","steady",10,11,7,"very_complex","2897.64","2757.00","3.45","83.86","8014.85","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2757, ""counters"": {}}"
"neo4j","optimized","steady",10,11,8,"very_complex","2918.68","2825.00","3.43","82.79","8014.92","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2825, ""counters"": {}}"
"neo4j","optimized","steady",10,11,9,"very_complex","4767.91","4637.00","2.10","82.05","8014.86","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 4637, ""counters"": {}}"
"neo4j","optimized","steady",10,11,10,"very_complex","2978.31","2927.00","3.36","86.73","8015.14","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 3, ""prodB"": 156139, ""co_orders"": 1}, ""server_ms"": 2927, ""counters"": {}}"
"neo4j","optimized","warmup",10,12,1,"very_complex","908.80","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,2,"very_complex","1036.38","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,3,"very_complex","1007.44","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,4,"very_complex","948.36","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,5,"very_complex","763.22","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,6,"very_complex","1196.88","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,7,"very_complex","666.26","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,8,"very_complex","1546.24","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,9,"very_complex","929.69","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,10,"very_complex","800.34","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,12,1,"very_complex","1070.58","977.00","9.34","81.22","8014.98","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 977, ""counters"": {}}"
"neo4j","optimized","steady",10,12,2,"very_complex","1163.49","1030.00","8.59","84.05","8014.62","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 1030, ""counters"": {}}"
"neo4j","optimized","steady",10,12,3,"very_complex","1154.93","1036.00","8.66","76.25","8014.69","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 1036, ""counters"": {}}"
"neo4j","optimized","steady",10,12,4,"very_complex","974.46","922.00","10.26","80.57","8014.76","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 922, ""counters"": {}}"
"neo4j","optimized","steady",10,12,5,"very_complex","664.54","653.00","15.05","84.60","8014.79","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 653, ""counters"": {}}"
"neo4j","optimized","steady",10,12,6,"very_complex","1167.77","1085.00","8.56","81.81","8015.08","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 1085, ""counters"": {}}"
"neo4j","optimized","steady",10,12,7,"very_complex","828.82","761.00","12.07","80.67","8014.81","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 761, ""counters"": {}}"
"neo4j","optimized","steady",10,12,8,"very_complex","1153.29","1151.00","8.67","81.14","8014.53","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 1151, ""counters"": {}}"
"neo4j","optimized","steady",10,12,9,"very_complex","979.24","948.00","10.21","82.13","8014.84","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 948, ""counters"": {}}"
"neo4j","optimized","steady",10,12,10,"very_complex","1413.18","1328.00","7.08","81.53","8014.76","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 43, ""first"": {""prod_id"": 165738, ""freq"": 1}, ""server_ms"": 1328, ""counters"": {}}"
"neo4j","optimized","warmup",10,13,1,"create","401.57","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,2,"create","88.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,3,"create","89.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,4,"create","93.99","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,5,"create","96.29","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,6,"create","92.89","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,7,"create","87.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,8,"create","88.84","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,9,"create","86.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,10,"create","91.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,13,1,"create","34.35","24.00","291.14","81.36","8017.09","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135056}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,2,"create","35.35","26.00","282.88","72.86","8016.87","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135059}, ""server_ms"": 26, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,3,"create","32.67","25.00","306.06","82.83","8016.91","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135060}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,4,"create","36.16","25.00","276.55","66.20","8017.12","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135062}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,5,"create","39.53","28.00","253.00","65.94","8016.96","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135065}, ""server_ms"": 28, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,6,"create","42.85","26.00","233.39","71.60","8016.74","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135066}, ""server_ms"": 26, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,7,"create","33.33","25.00","300.01","75.85","8016.69","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135068}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,8,"create","37.50","25.00","266.67","71.48","8017.14","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135070}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,9,"create","33.85","26.00","295.44","72.78","8017.12","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135071}, ""server_ms"": 26, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,10,"create","38.22","21.00","261.65","75.29","8017.10","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 135073}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",10,14,1,"create","332.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,2,"create","100.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,3,"create","112.06","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,4,"create","141.01","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,5,"create","132.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,6,"create","104.50","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,7,"create","112.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,8,"create","101.05","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,9,"create","106.87","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,10,"create","110.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,14,1,"create","58.35","42.00","171.39","61.36","8015.70","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199992}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,2,"create","48.70","37.00","205.36","77.58","8015.56","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199995}, ""server_ms"": 37, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,3,"create","68.57","54.00","145.83","68.59","8015.81","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 199999}, ""server_ms"": 54, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,4,"create","90.29","83.00","110.76","72.75","8015.45","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200005}, ""server_ms"": 83, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,5,"create","64.19","48.00","155.78","71.78","8015.62","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200007}, ""server_ms"": 48, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,6,"create","51.28","34.00","195.01","79.72","8015.87","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200009}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,7,"create","69.00","53.00","144.92","64.53","8015.96","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200013}, ""server_ms"": 53, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,8,"create","88.53","55.00","112.95","65.23","8015.90","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200015}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,9,"create","85.36","82.00","117.14","51.33","8015.95","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200023}, ""server_ms"": 82, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,10,"create","72.84","49.00","137.28","58.03","8015.98","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200026}, ""server_ms"": 49, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",10,15,1,"create","425.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,2,"create","304.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,3,"create","121.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,4,"create","123.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,5,"create","123.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,6,"create","122.62","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,7,"create","120.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,8,"create","139.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,9,"create","122.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,10,"create","131.76","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,15,1,"create","74.33","67.00","134.53","77.44","8020.54","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150155}, ""server_ms"": 67, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,2,"create","80.30","58.00","124.53","70.47","8020.74","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150156}, ""server_ms"": 58, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,3,"create","92.56","60.00","108.04","56.31","8020.55","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150163}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,4,"create","69.70","63.00","143.46","77.57","8020.48","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150167}, ""server_ms"": 63, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,5,"create","74.71","69.00","133.85","77.95","8020.55","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150171}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,6,"create","83.17","67.00","120.24","72.54","8020.88","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150175}, ""server_ms"": 67, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,7,"create","69.71","59.00","143.45","79.38","8020.54","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150180}, ""server_ms"": 59, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,8,"create","82.18","55.00","121.69","65.91","8020.73","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150185}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,9,"create","84.54","70.00","118.29","68.92","8020.84","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150191}, ""server_ms"": 70, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,10,"create","78.55","64.00","127.31","73.52","8020.39","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150194}, ""server_ms"": 64, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",10,16,1,"create","1173.57","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,2,"create","527.57","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,3,"create","760.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,4,"create","549.10","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,5,"create","557.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,6,"create","521.53","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,7,"create","519.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,8,"create","629.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,9,"create","545.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,10,"create","544.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,16,1,"create","455.70","448.00","21.94","82.78","8020.87","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049735}, ""server_ms"": 448, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,2,"create","509.76","504.00","19.62","83.49","8020.66","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049742}, ""server_ms"": 504, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,3,"create","552.12","432.00","18.11","70.94","8020.48","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049745}, ""server_ms"": 432, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,4,"create","481.13","439.00","20.78","75.84","8020.62","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049755}, ""server_ms"": 439, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,5,"create","463.80","451.00","21.56","80.98","8020.74","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049763}, ""server_ms"": 451, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,6,"create","570.86","568.00","17.52","71.24","8020.58","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049774}, ""server_ms"": 568, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,7,"create","455.14","437.00","21.97","78.68","8020.49","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049778}, ""server_ms"": 437, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,8,"create","455.04","442.00","21.98","81.01","8020.42","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049785}, ""server_ms"": 442, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,9,"create","466.84","442.00","21.42","78.66","8020.90","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049791}, ""server_ms"": 442, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,10,"create","555.77","459.00","17.99","74.02","8024.79","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049797}, ""server_ms"": 459, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",10,17,1,"update","1759.10","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,2,"update","583.54","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,3,"update","601.78","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,4,"update","628.80","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,5,"update","555.01","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,6,"update","564.24","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,7,"update","615.84","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,8,"update","586.03","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,9,"update","584.16","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,10,"update","539.53","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,17,1,"update","534.54","507.00","18.71","75.32","8029.44","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 341}, ""server_ms"": 507, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,2,"update","629.46","499.00","15.89","68.74","8029.41","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 346}, ""server_ms"": 499, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,3,"update","552.32","493.00","18.11","74.32","8029.02","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 360}, ""server_ms"": 493, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,4,"update","509.40","463.00","19.63","80.91","8029.65","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 364}, ""server_ms"": 463, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,5,"update","624.61","600.00","16.01","73.41","8029.18","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 379}, ""server_ms"": 600, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,6,"update","507.01","475.00","19.72","79.47","8029.47","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 385}, ""server_ms"": 475, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,7,"update","512.43","510.00","19.51","77.86","8029.50","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 402}, ""server_ms"": 510, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,8,"update","518.35","515.00","19.29","80.01","8029.58","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 411}, ""server_ms"": 515, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,9,"update","520.17","447.00","19.22","77.67","8029.34","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 413}, ""server_ms"": 447, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,10,"update","523.04","482.00","19.12","79.20","8029.64","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 424}, ""server_ms"": 482, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,18,1,"update","116.92","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,2,"update","67.12","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,3,"update","67.92","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,4,"update","67.52","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,5,"update","67.07","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,6,"update","67.61","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,7,"update","66.95","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,8,"update","67.62","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,9,"update","66.61","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,10,"update","66.60","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,18,1,"update","16.81","12.00","594.92","78.12","8029.70","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,2,"update","16.10","12.00","621.14","81.82","8029.59","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,3,"update","16.91","12.00","591.44","76.36","8029.51","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,4,"update","16.90","9.00","591.62","75.76","8029.59","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,5,"update","21.46","13.00","466.09","65.92","8029.69","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,6,"update","16.59","12.00","602.94","77.03","8029.50","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,7,"update","17.42","12.00","574.05","75.34","8029.73","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,8,"update","16.46","13.00","607.57","80.27","8029.37","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,9,"update","17.05","12.00","586.60","75.62","8029.37","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,10,"update","16.36","12.00","611.15","80.23","8029.36","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,19,1,"update","215.67","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,2,"update","137.45","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,3,"update","143.20","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,4,"update","138.50","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,5,"update","148.60","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,6,"update","138.78","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,7,"update","135.96","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,8,"update","130.72","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,9,"update","152.79","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,10,"update","141.00","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,19,1,"update","92.04","73.00","108.64","64.91","8029.30","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 311}, ""server_ms"": 73, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,2,"update","86.45","60.00","115.68","71.34","8029.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 335}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,3,"update","84.09","72.00","118.92","70.89","8029.52","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 374}, ""server_ms"": 72, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,4,"update","86.36","61.00","115.80","69.94","8029.44","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 395}, ""server_ms"": 61, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,5,"update","102.51","80.00","97.55","58.60","8029.24","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 446}, ""server_ms"": 80, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,6,"update","80.84","75.00","123.69","73.67","8029.35","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 473}, ""server_ms"": 75, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,7,"update","91.38","87.00","109.43","70.84","8029.46","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 509}, ""server_ms"": 87, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,8,"update","81.81","71.00","122.24","75.35","8029.31","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 524}, ""server_ms"": 71, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,9,"update","96.55","85.00","103.57","68.33","8029.40","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 554}, ""server_ms"": 85, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,10,"update","98.12","73.00","101.92","64.05","8029.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 587}, ""server_ms"": 73, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,20,1,"update","78.85","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,2,"update","73.70","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,3,"update","73.38","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,4,"update","74.54","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,5,"update","72.75","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,6,"update","73.33","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,7,"update","66.55","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,8,"update","77.48","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,9,"update","76.81","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,10,"update","65.72","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,20,1,"update","22.66","0.00","441.24","16.69","8029.54","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,2,"update","23.40","9.00","427.44","16.08","8029.35","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,3,"update","15.82","0.00","632.22","29.94","8029.16","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,4,"update","22.50","0.00","444.46","17.26","8029.37","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,5,"update","23.33","0.00","428.59","15.74","8029.31","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,6,"update","22.41","9.00","446.21","21.03","8029.61","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,7,"update","22.91","9.00","436.53","19.70","8029.28","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,8,"update","30.64","9.00","326.40","12.20","8029.52","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,9,"update","22.65","0.00","441.47","17.68","8029.49","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,10,"update","16.20","0.00","617.15","27.47","8029.38","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""valerijweitzel@example.org.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,21,1,"delete","235.98","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,2,"delete","90.53","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,3,"delete","90.08","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,4,"delete","89.16","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,5,"delete","87.91","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,6,"delete","91.28","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,7,"delete","90.51","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,8,"delete","89.08","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,9,"delete","115.29","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,10,"delete","89.50","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,21,1,"delete","38.41","36.00","260.35","70.73","8029.38","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 71}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,2,"delete","43.70","40.00","228.81","63.42","8029.82","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 72}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,3,"delete","37.13","34.00","269.34","71.02","8029.53","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 73}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,4,"delete","41.77","39.00","239.41","70.24","8029.34","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 74}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,5,"delete","42.63","39.00","234.57","65.55","8029.31","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 75}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,6,"delete","37.64","36.00","265.65","70.50","8029.32","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 76}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,7,"delete","33.73","31.00","296.48","76.26","8029.33","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 77}, ""server_ms"": 31, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,8,"delete","43.04","31.00","232.35","68.15","8029.58","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 78}, ""server_ms"": 31, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,9,"delete","34.04","31.00","293.78","78.79","8029.53","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 79}, ""server_ms"": 31, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,10,"delete","40.45","35.00","247.20","72.13","8029.07","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 80}, ""server_ms"": 35, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","warmup",10,22,1,"delete","74.63","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,2,"delete","74.20","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,3,"delete","77.39","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,4,"delete","75.77","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,5,"delete","73.11","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,6,"delete","72.58","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,7,"delete","72.28","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,8,"delete","73.18","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,9,"delete","79.91","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,10,"delete","73.02","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,22,1,"delete","23.21","9.00","430.92","57.52","8029.31","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 71}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,2,"delete","23.75","16.00","421.09","53.27","8029.38","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 72}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",10,22,3,"delete","23.77","22.00","420.62","55.41","8029.57","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 73}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",10,22,4,"delete","24.66","21.00","405.58","53.42","8029.30","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 74}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",10,22,5,"delete","22.47","11.00","444.97","59.48","8029.58","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 75}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,6,"delete","21.79","10.00","458.87","60.21","8029.34","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 76}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,7,"delete","25.43","22.00","393.27","54.17","8029.55","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 77}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",10,22,8,"delete","23.27","20.00","429.78","56.47","8029.36","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 78}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",10,22,9,"delete","23.88","21.00","418.78","55.87","8029.44","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 79}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",10,22,10,"delete","23.03","20.00","434.19","60.45","8029.38","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 80}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","warmup",10,23,1,"delete","178.86","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,2,"delete","139.58","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,3,"delete","140.76","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,4,"delete","145.00","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,5,"delete","142.50","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,6,"delete","152.96","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,7,"delete","151.03","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,8,"delete","141.54","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,9,"delete","150.93","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,10,"delete","155.46","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,23,1,"delete","98.78","73.00","101.24","72.07","8029.10","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 71}, ""server_ms"": 73, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,2,"delete","98.25","80.00","101.78","75.10","8029.39","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 72}, ""server_ms"": 80, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,3,"delete","90.25","87.00","110.81","79.30","8029.39","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 73}, ""server_ms"": 87, ""counters"": {}}"
"neo4j","optimized","steady",10,23,4,"delete","98.79","91.00","101.23","75.61","8029.36","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 74}, ""server_ms"": 91, ""counters"": {}}"
"neo4j","optimized","steady",10,23,5,"delete","91.50","85.00","109.29","78.38","8029.29","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 75}, ""server_ms"": 85, ""counters"": {}}"
"neo4j","optimized","steady",10,23,6,"delete","92.72","90.00","107.85","78.78","8029.45","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 76}, ""server_ms"": 90, ""counters"": {}}"
"neo4j","optimized","steady",10,23,7,"delete","89.49","84.00","111.75","79.98","8029.51","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 77}, ""server_ms"": 84, ""counters"": {}}"
"neo4j","optimized","steady",10,23,8,"delete","89.67","84.00","111.52","78.08","8029.55","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 78}, ""server_ms"": 84, ""counters"": {}}"
"neo4j","optimized","steady",10,23,9,"delete","94.24","90.00","106.11","77.92","8029.54","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 79}, ""server_ms"": 90, ""counters"": {}}"
"neo4j","optimized","steady",10,23,10,"delete","123.21","106.00","81.16","80.61","8029.51","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 80}, ""server_ms"": 106, ""counters"": {}}"
"neo4j","optimized","warmup",10,24,1,"delete","709.59","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,2,"delete","390.71","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,3,"delete","356.40","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,4,"delete","431.31","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,5,"delete","404.88","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,6,"delete","346.59","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,7,"delete","361.36","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,8,"delete","350.99","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,9,"delete","353.83","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,10,"delete","404.01","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,24,1,"delete","310.88","296.00","32.17","78.01","8029.80","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 71}, ""server_ms"": 296, ""counters"": {}}"
"neo4j","optimized","steady",10,24,2,"delete","310.22","308.00","32.24","80.25","8029.62","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 72}, ""server_ms"": 308, ""counters"": {}}"
"neo4j","optimized","steady",10,24,3,"delete","466.53","325.00","21.44","61.98","8029.72","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 73}, ""server_ms"": 325, ""counters"": {}}"
"neo4j","optimized","steady",10,24,4,"delete","366.59","302.00","27.28","80.39","8029.69","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 74}, ""server_ms"": 302, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,5,"delete","340.83","303.00","29.34","74.97","8029.33","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 75}, ""server_ms"": 303, ""counters"": {}}"
"neo4j","optimized","steady",10,24,6,"delete","388.12","332.00","25.77","72.42","8029.77","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 76}, ""server_ms"": 332, ""counters"": {}}"
"neo4j","optimized","steady",10,24,7,"delete","306.45","295.00","32.63","79.40","8029.63","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 77}, ""server_ms"": 295, ""counters"": {}}"
"neo4j","optimized","steady",10,24,8,"delete","329.72","303.00","30.33","74.92","8029.55","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 78}, ""server_ms"": 303, ""counters"": {}}"
"neo4j","optimized","steady",10,24,9,"delete","373.32","338.00","26.79","72.78","8029.87","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 79}, ""server_ms"": 338, ""counters"": {}}"
"neo4j","optimized","steady",10,24,10,"delete","306.64","284.00","32.61","80.55","8029.54","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 80}, ""server_ms"": 284, ""counters"": {}}"
