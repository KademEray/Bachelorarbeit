"db","mode","phase","concurrency","query_no","repeat","complexity","duration_ms","server_ms","qps","avg_cpu","avg_mem","disk_mb","statement","result"
"neo4j","normal","warmup",1,1,1,"simple","8789.05","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,1,2,"simple","1434.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,1,3,"simple","1471.35","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,1,4,"simple","1378.35","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,1,5,"simple","1182.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,1,6,"simple","1175.99","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,1,7,"simple","1200.70","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,1,8,"simple","1331.87","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,1,9,"simple","1455.47","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,1,10,"simple","1458.63","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,1,1,"simple","1448.34","668.00","0.69","4.48","3116.46","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 668, ""counters"": {}}"
"neo4j","normal","steady",1,1,2,"simple","1439.56","676.00","0.69","4.35","3401.67","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 676, ""counters"": {}}"
"neo4j","normal","steady",1,1,3,"simple","1451.01","681.00","0.69","4.42","3686.66","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 681, ""counters"": {}}"
"neo4j","normal","steady",1,1,4,"simple","1436.31","675.00","0.70","4.38","3971.58","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 675, ""counters"": {}}"
"neo4j","normal","steady",1,1,5,"simple","1449.90","686.00","0.69","4.36","4256.46","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 686, ""counters"": {}}"
"neo4j","normal","steady",1,1,6,"simple","1416.02","675.00","0.71","4.44","4540.53","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 675, ""counters"": {}}"
"neo4j","normal","steady",1,1,7,"simple","1276.77","494.00","0.78","4.70","4734.49","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 494, ""counters"": {}}"
"neo4j","normal","steady",1,1,8,"simple","1300.59","532.00","0.77","4.36","4789.74","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 532, ""counters"": {}}"
"neo4j","normal","steady",1,1,9,"simple","1308.49","547.00","0.76","3.93","4793.68","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 547, ""counters"": {}}"
"neo4j","normal","steady",1,1,10,"simple","1556.54","808.00","0.64","4.73","4784.90","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 808, ""counters"": {}}"
"neo4j","normal","warmup",1,2,1,"simple","181.35","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,2,2,"simple","63.67","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,2,3,"simple","61.19","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,2,4,"simple","61.29","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,2,5,"simple","60.28","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,2,6,"simple","61.98","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,2,7,"simple","60.56","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,2,8,"simple","60.37","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,2,9,"simple","59.84","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,2,10,"simple","60.68","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,2,1,"simple","16.91","0.00","59.14","57.34","4785.76","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",1,2,2,"simple","13.91","2.00","71.88","27.76","4786.21","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,2,3,"simple","9.84","1.00","101.60","37.02","4786.14","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,2,4,"simple","10.48","1.00","95.42","35.67","4786.10","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,2,5,"simple","10.11","1.00","98.90","35.74","4786.13","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,2,6,"simple","9.56","0.00","104.56","37.75","4786.20","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",1,2,7,"simple","9.46","0.00","105.68","37.50","4786.48","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",1,2,8,"simple","9.84","0.00","101.68","35.43","4786.49","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",1,2,9,"simple","9.68","1.00","103.35","47.19","4786.35","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,2,10,"simple","9.90","1.00","101.02","36.47","4786.37","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",1,3,1,"simple","169.28","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,3,2,"simple","75.16","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,3,3,"simple","75.78","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,3,4,"simple","74.16","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,3,5,"simple","74.58","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,3,6,"simple","74.76","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,3,7,"simple","75.11","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,3,8,"simple","76.02","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,3,9,"simple","74.43","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,3,10,"simple","74.30","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,3,1,"simple","29.87","3.00","33.48","18.29","4797.04","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Killerallee 55"", ""city"": ""Hersbruck"", ""zip"": ""25821"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",1,3,2,"simple","24.45","4.00","40.90","16.10","4797.65","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Killerallee 55"", ""city"": ""Hersbruck"", ""zip"": ""25821"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,3,3,"simple","23.75","4.00","42.11","16.37","4798.48","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Killerallee 55"", ""city"": ""Hersbruck"", ""zip"": ""25821"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,3,4,"simple","23.50","4.00","42.56","18.09","4799.31","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Killerallee 55"", ""city"": ""Hersbruck"", ""zip"": ""25821"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,3,5,"simple","23.04","4.00","43.40","16.21","4798.91","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Killerallee 55"", ""city"": ""Hersbruck"", ""zip"": ""25821"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,3,6,"simple","25.83","7.00","38.71","16.06","4799.36","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Killerallee 55"", ""city"": ""Hersbruck"", ""zip"": ""25821"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","normal","steady",1,3,7,"simple","24.93","6.00","40.11","16.01","4799.27","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Killerallee 55"", ""city"": ""Hersbruck"", ""zip"": ""25821"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",1,3,8,"simple","25.35","6.00","39.45","19.87","4799.22","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Killerallee 55"", ""city"": ""Hersbruck"", ""zip"": ""25821"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",1,3,9,"simple","27.59","7.00","36.24","15.05","4799.23","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Killerallee 55"", ""city"": ""Hersbruck"", ""zip"": ""25821"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","normal","steady",1,3,10,"simple","25.66","7.00","38.97","16.82","4799.33","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Killerallee 55"", ""city"": ""Hersbruck"", ""zip"": ""25821"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","normal","warmup",1,4,1,"medium","1660.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,4,2,"medium","874.45","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,4,3,"medium","818.58","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,4,4,"medium","873.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,4,5,"medium","953.34","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,4,6,"medium","762.65","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,4,7,"medium","861.66","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,4,8,"medium","894.37","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,4,9,"medium","1039.74","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,4,10,"medium","13790.98","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,4,1,"medium","1213.82","942.00","0.82","24.92","7227.62","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 942, ""counters"": {}}"
"neo4j","normal","steady",1,4,2,"medium","717.89","638.00","1.39","20.84","7260.10","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 638, ""counters"": {}}"
"neo4j","normal","steady",1,4,3,"medium","546.81","466.00","1.83","13.95","7288.44","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 466, ""counters"": {}}"
"neo4j","normal","steady",1,4,4,"medium","525.00","450.00","1.90","14.09","7288.80","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 450, ""counters"": {}}"
"neo4j","normal","steady",1,4,5,"medium","537.45","457.00","1.86","14.22","7288.78","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 457, ""counters"": {}}"
"neo4j","normal","steady",1,4,6,"medium","531.39","451.00","1.88","14.18","7288.93","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 451, ""counters"": {}}"
"neo4j","normal","steady",1,4,7,"medium","534.94","453.00","1.87","14.01","7288.76","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 453, ""counters"": {}}"
"neo4j","normal","steady",1,4,8,"medium","529.97","450.00","1.89","14.24","7288.96","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 450, ""counters"": {}}"
"neo4j","normal","steady",1,4,9,"medium","527.04","449.00","1.90","15.21","7288.83","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 449, ""counters"": {}}"
"neo4j","normal","steady",1,4,10,"medium","534.98","454.00","1.87","21.19","7291.12","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 17, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 454, ""counters"": {}}"
"neo4j","normal","warmup",1,5,1,"medium","474.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,5,2,"medium","61.56","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,5,3,"medium","60.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,5,4,"medium","60.21","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,5,5,"medium","60.12","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,5,6,"medium","60.67","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,5,7,"medium","61.31","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,5,8,"medium","59.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,5,9,"medium","59.73","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,5,10,"medium","61.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,5,1,"medium","17.32","2.00","57.74","46.59","7313.91","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 67708, ""name"": ""U-POL - Plastic Bumper Filler - 250ml"", ""price"": 14.4399995803833, ""stock"": 50, ""created_at"": ""2018-11-29T03:08:58.000000000+00:00"", ""updated_at"": ""2023-12-26T06:38:09.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,5,2,"medium","11.95","2.00","83.70","30.87","7305.90","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 67708, ""name"": ""U-POL - Plastic Bumper Filler - 250ml"", ""price"": 14.4399995803833, ""stock"": 50, ""created_at"": ""2018-11-29T03:08:58.000000000+00:00"", ""updated_at"": ""2023-12-26T06:38:09.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,5,3,"medium","9.94","2.00","100.64","42.83","7305.70","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 67708, ""name"": ""U-POL - Plastic Bumper Filler - 250ml"", ""price"": 14.4399995803833, ""stock"": 50, ""created_at"": ""2018-11-29T03:08:58.000000000+00:00"", ""updated_at"": ""2023-12-26T06:38:09.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,5,4,"medium","9.85","2.00","101.53","38.31","7305.89","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 67708, ""name"": ""U-POL - Plastic Bumper Filler - 250ml"", ""price"": 14.4399995803833, ""stock"": 50, ""created_at"": ""2018-11-29T03:08:58.000000000+00:00"", ""updated_at"": ""2023-12-26T06:38:09.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,5,5,"medium","9.69","2.00","103.25","40.42","7306.20","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 67708, ""name"": ""U-POL - Plastic Bumper Filler - 250ml"", ""price"": 14.4399995803833, ""stock"": 50, ""created_at"": ""2018-11-29T03:08:58.000000000+00:00"", ""updated_at"": ""2023-12-26T06:38:09.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,5,6,"medium","9.77","2.00","102.35","40.64","7305.99","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 67708, ""name"": ""U-POL - Plastic Bumper Filler - 250ml"", ""price"": 14.4399995803833, ""stock"": 50, ""created_at"": ""2018-11-29T03:08:58.000000000+00:00"", ""updated_at"": ""2023-12-26T06:38:09.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,5,7,"medium","10.13","2.00","98.76","36.50","7305.96","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 67708, ""name"": ""U-POL - Plastic Bumper Filler - 250ml"", ""price"": 14.4399995803833, ""stock"": 50, ""created_at"": ""2018-11-29T03:08:58.000000000+00:00"", ""updated_at"": ""2023-12-26T06:38:09.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,5,8,"medium","9.42","2.00","106.15","89.30","7306.63","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 67708, ""name"": ""U-POL - Plastic Bumper Filler - 250ml"", ""price"": 14.4399995803833, ""stock"": 50, ""created_at"": ""2018-11-29T03:08:58.000000000+00:00"", ""updated_at"": ""2023-12-26T06:38:09.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,5,9,"medium","10.74","2.00","93.14","36.41","7307.57","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 67708, ""name"": ""U-POL - Plastic Bumper Filler - 250ml"", ""price"": 14.4399995803833, ""stock"": 50, ""created_at"": ""2018-11-29T03:08:58.000000000+00:00"", ""updated_at"": ""2023-12-26T06:38:09.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,5,10,"medium","9.51","2.00","105.12","36.48","7307.46","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 49, ""first"": {""id"": 67708, ""name"": ""U-POL - Plastic Bumper Filler - 250ml"", ""price"": 14.4399995803833, ""stock"": 50, ""created_at"": ""2018-11-29T03:08:58.000000000+00:00"", ""updated_at"": ""2023-12-26T06:38:09.000000000+00:00"", ""quantity"": 3}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","warmup",1,6,1,"medium","112.23","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,6,2,"medium","59.57","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,6,3,"medium","59.36","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,6,4,"medium","59.83","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,6,5,"medium","69.01","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,6,6,"medium","59.57","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,6,7,"medium","58.87","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,6,8,"medium","59.12","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,6,9,"medium","59.65","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,6,10,"medium","59.08","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,6,1,"medium","13.15","0.00","76.02","29.98","7308.59","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",1,6,2,"medium","9.18","1.00","108.88","36.34","7308.39","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,6,3,"medium","8.67","1.00","115.30","41.73","7308.58","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,6,4,"medium","9.03","1.00","110.71","36.77","7308.54","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,6,5,"medium","9.26","0.00","108.01","36.50","7308.48","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",1,6,6,"medium","9.07","1.00","110.20","36.55","7308.57","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,6,7,"medium","9.68","1.00","103.30","37.62","7308.40","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,6,8,"medium","8.92","1.00","112.12","38.39","7308.56","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,6,9,"medium","8.86","1.00","112.88","36.82","7308.77","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,6,10,"medium","9.77","1.00","102.34","34.69","7308.58","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",1,7,1,"complex","302.78","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,7,2,"complex","85.56","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,7,3,"complex","84.42","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,7,4,"complex","83.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,7,5,"complex","79.95","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,7,6,"complex","82.92","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,7,7,"complex","90.72","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,7,8,"complex","82.27","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,7,9,"complex","82.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,7,10,"complex","82.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,7,1,"complex","33.80","5.00","29.59","14.34","7313.40","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,7,2,"complex","30.69","5.00","32.58","14.18","7313.33","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,7,3,"complex","31.79","4.00","31.46","11.64","7313.38","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,7,4,"complex","31.14","5.00","32.11","13.71","7313.39","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,7,5,"complex","31.94","5.00","31.31","11.34","7313.54","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,7,6,"complex","30.54","5.00","32.75","12.20","7313.72","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,7,7,"complex","102.66","76.00","9.74","60.47","7314.04","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 76, ""counters"": {}}"
"neo4j","normal","steady",1,7,8,"complex","32.63","5.00","30.65","11.36","7314.61","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,7,9,"complex","31.52","5.00","31.73","11.63","7314.47","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,7,10,"complex","29.83","5.00","33.52","12.43","7314.27","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","warmup",1,8,1,"complex","184.31","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,8,2,"complex","57.56","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,8,3,"complex","64.63","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,8,4,"complex","56.09","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,8,5,"complex","55.88","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,8,6,"complex","55.69","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,8,7,"complex","55.72","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,8,8,"complex","56.03","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,8,9,"complex","55.85","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,8,10,"complex","55.97","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,8,1,"complex","10.46","1.00","95.61","52.39","7319.37","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 55, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,8,2,"complex","5.63","1.00","177.55","60.34","7319.22","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 55, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,8,3,"complex","5.67","1.00","176.40","68.60","7319.16","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 55, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,8,4,"complex","5.32","1.00","188.02","64.46","7319.25","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 55, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,8,5,"complex","13.23","2.00","75.59","30.52","7319.35","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 55, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,8,6,"complex","5.65","1.00","176.92","72.51","7319.25","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 55, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,8,7,"complex","5.27","1.00","189.60","77.57","7319.26","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 55, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,8,8,"complex","5.19","1.00","192.76","70.48","7319.16","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 55, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,8,9,"complex","6.69","1.00","149.38","56.11","7319.22","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 55, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",1,8,10,"complex","5.31","1.00","188.30","137.68","7319.25","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 55, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",1,9,1,"complex","200.30","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,9,2,"complex","64.90","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,9,3,"complex","64.45","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,9,4,"complex","61.27","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,9,5,"complex","67.84","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,9,6,"complex","60.12","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,9,7,"complex","60.50","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,9,8,"complex","60.35","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,9,9,"complex","60.24","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,9,10,"complex","61.14","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,9,1,"complex","15.66","2.00","63.84","27.73","7325.99","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 9, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,9,2,"complex","9.90","2.00","100.97","33.99","7325.89","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 9, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,9,3,"complex","9.46","2.00","105.71","36.24","7326.13","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 9, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,9,4,"complex","9.72","2.00","102.86","36.76","7325.68","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 9, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,9,5,"complex","9.43","3.00","106.03","35.02","7326.33","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 9, ""orders_last_30d"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",1,9,6,"complex","9.91","2.00","100.86","33.81","7326.18","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 9, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,9,7,"complex","9.95","2.00","100.51","77.41","7326.04","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 9, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,9,8,"complex","9.87","2.00","101.28","34.72","7325.93","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 9, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,9,9,"complex","13.59","2.00","73.58","25.35","7326.06","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 9, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",1,9,10,"complex","9.98","2.00","100.16","41.60","7325.99","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 9, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","warmup",1,10,1,"very_complex","299.37","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,10,2,"very_complex","60.70","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,10,3,"very_complex","59.60","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,10,4,"very_complex","59.17","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,10,5,"very_complex","58.31","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,10,6,"very_complex","58.47","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,10,7,"very_complex","58.74","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,10,8,"very_complex","58.51","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,10,9,"very_complex","58.49","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,10,10,"very_complex","62.94","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,10,1,"very_complex","18.59","5.00","53.78","100.40","7328.83","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,10,2,"very_complex","8.58","5.00","116.56","46.23","7331.87","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,10,3,"very_complex","8.19","5.00","122.11","46.55","7331.83","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,10,4,"very_complex","7.69","5.00","129.99","46.86","7331.94","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,10,5,"very_complex","7.82","4.00","127.86","49.30","7331.91","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,10,6,"very_complex","7.75","5.00","128.95","44.82","7332.06","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,10,7,"very_complex","7.36","4.00","135.92","47.78","7332.16","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,10,8,"very_complex","7.50","4.00","133.37","49.66","7331.82","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,10,9,"very_complex","7.64","4.00","130.83","46.75","7331.87","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,10,10,"very_complex","7.42","4.00","134.74","57.41","7331.94","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","warmup",1,11,1,"very_complex","269.35","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,11,2,"very_complex","81.75","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,11,3,"very_complex","80.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,11,4,"very_complex","78.06","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,11,5,"very_complex","76.56","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,11,6,"very_complex","76.49","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,11,7,"very_complex","76.64","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,11,8,"very_complex","75.98","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,11,9,"very_complex","76.42","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,11,10,"very_complex","76.13","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,11,1,"very_complex","31.63","21.00","31.62","19.47","7334.96","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","normal","steady",1,11,2,"very_complex","26.00","21.00","38.46","25.59","7335.12","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","normal","steady",1,11,3,"very_complex","27.35","22.00","36.57","20.73","7335.06","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","normal","steady",1,11,4,"very_complex","26.21","22.00","38.15","18.85","7335.20","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","normal","steady",1,11,5,"very_complex","25.78","21.00","38.79","19.21","7335.18","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","normal","steady",1,11,6,"very_complex","25.73","21.00","38.87","19.06","7334.82","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","normal","steady",1,11,7,"very_complex","25.44","21.00","39.30","18.79","7335.29","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","normal","steady",1,11,8,"very_complex","25.91","22.00","38.60","25.67","7334.97","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","normal","steady",1,11,9,"very_complex","25.45","21.00","39.29","19.45","7335.30","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","normal","steady",1,11,10,"very_complex","26.39","21.00","37.90","21.95","7335.19","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","normal","warmup",1,12,1,"very_complex","153.94","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,12,2,"very_complex","57.55","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,12,3,"very_complex","57.79","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,12,4,"very_complex","57.65","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,12,5,"very_complex","57.44","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,12,6,"very_complex","58.08","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,12,7,"very_complex","57.75","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,12,8,"very_complex","57.47","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,12,9,"very_complex","57.40","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,12,10,"very_complex","58.04","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,12,1,"very_complex","13.44","4.00","74.40","39.90","7336.79","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,12,2,"very_complex","7.60","4.00","131.58","47.78","7336.81","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,12,3,"very_complex","7.31","4.00","136.71","47.86","7336.53","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,12,4,"very_complex","7.25","4.00","137.84","49.45","7336.96","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,12,5,"very_complex","7.49","4.00","133.49","52.93","7336.69","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,12,6,"very_complex","7.47","5.00","133.87","50.14","7336.75","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",1,12,7,"very_complex","6.94","4.00","144.18","630.85","7344.02","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,12,8,"very_complex","7.81","4.00","128.08","52.62","7351.76","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,12,9,"very_complex","7.84","4.00","127.63","46.24","7351.93","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",1,12,10,"very_complex","7.63","4.00","131.09","47.60","7351.99","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","warmup",1,13,1,"create","318.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,13,2,"create","81.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,13,3,"create","59.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,13,4,"create","64.55","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,13,5,"create","64.75","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,13,6,"create","64.27","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,13,7,"create","63.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,13,8,"create","72.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,13,9,"create","63.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,13,10,"create","66.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,13,1,"create","17.81","1.00","56.16","25.85","7363.00","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1362}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",1,13,2,"create","6.05","1.00","165.25","72.03","7362.62","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1363}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",1,13,3,"create","13.48","1.00","74.16","34.20","7362.99","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1364}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",1,13,4,"create","15.11","1.00","66.19","25.27","7363.17","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1365}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",1,13,5,"create","14.43","1.00","69.31","30.96","7363.06","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1366}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",1,13,6,"create","13.91","1.00","71.88","32.40","7362.93","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1367}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",1,13,7,"create","13.93","1.00","71.78","42.16","7362.96","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1368}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",1,13,8,"create","6.27","1.00","159.43","70.14","7362.84","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1369}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",1,13,9,"create","13.57","1.00","73.69","26.26","7363.05","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1370}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",1,13,10,"create","13.67","1.00","73.14","24.52","7362.82","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1371}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","warmup",1,14,1,"create","105.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,14,2,"create","63.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,14,3,"create","63.97","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,14,4,"create","65.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,14,5,"create","63.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,14,6,"create","64.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,14,7,"create","64.43","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,14,8,"create","64.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,14,9,"create","63.89","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,14,10,"create","64.00","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,14,1,"create","18.66","1.00","53.60","30.84","7363.22","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2020}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,14,2,"create","17.70","1.00","56.51","43.86","7363.26","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2021}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,14,3,"create","26.46","1.00","37.79","16.95","7363.10","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2022}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,14,4,"create","13.68","2.00","73.08","25.39","7363.39","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2023}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,14,5,"create","13.52","1.00","73.99","25.00","7363.14","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2024}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,14,6,"create","13.46","1.00","74.31","26.03","7363.62","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2025}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,14,7,"create","13.74","1.00","72.78","25.95","7363.32","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2026}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,14,8,"create","6.25","1.00","159.94","58.01","7363.31","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2027}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,14,9,"create","13.82","1.00","72.35","28.41","7363.44","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2028}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,14,10,"create","16.47","1.00","60.70","30.49","7363.60","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2029}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","warmup",1,15,1,"create","126.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,15,2,"create","73.46","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,15,3,"create","64.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,15,4,"create","65.27","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,15,5,"create","61.79","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,15,6,"create","64.25","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,15,7,"create","63.54","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,15,8,"create","63.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,15,9,"create","63.32","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,15,10,"create","63.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,15,1,"create","17.85","1.00","56.02","28.27","7365.66","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1499}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",1,15,2,"create","13.23","1.00","75.56","27.35","7365.51","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1500}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",1,15,3,"create","13.36","1.00","74.88","26.55","7365.54","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1501}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",1,15,4,"create","13.24","1.00","75.55","26.74","7365.69","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1502}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",1,15,5,"create","5.99","1.00","167.02","55.97","7365.61","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1503}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",1,15,6,"create","13.31","1.00","75.14","26.00","7365.91","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1504}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",1,15,7,"create","13.14","1.00","76.09","26.42","7365.78","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1505}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",1,15,8,"create","14.04","1.00","71.24","25.84","7366.20","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1506}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",1,15,9,"create","13.21","1.00","75.68","31.84","7366.23","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1507}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",1,15,10,"create","13.48","1.00","74.21","78.03","7366.73","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1508}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","warmup",1,16,1,"create","304.92","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,16,2,"create","75.10","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,16,3,"create","73.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,16,4,"create","69.83","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,16,5,"create","64.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,16,6,"create","70.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,16,7,"create","70.32","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,16,8,"create","77.79","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,16,9,"create","73.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,16,10,"create","72.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,16,1,"create","29.22","9.00","34.22","20.08","7368.56","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10454}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,16,2,"create","22.95","9.00","43.56","18.28","7368.41","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10455}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,16,3,"create","22.58","9.00","44.29","32.98","7368.24","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10456}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,16,4,"create","22.26","9.00","44.92","20.10","7368.64","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10457}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,16,5,"create","13.26","8.00","75.44","32.17","7368.44","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10458}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,16,6,"create","19.71","6.00","50.73","20.24","7368.42","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10459}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,16,7,"create","20.08","6.00","49.81","28.30","7368.64","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10460}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,16,8,"create","26.00","13.00","38.46","17.59","7368.76","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10461}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,16,9,"create","22.22","8.00","45.00","27.32","7368.91","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10462}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",1,16,10,"create","20.65","7.00","48.43","19.79","7368.86","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10463}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","warmup",1,17,1,"update","1126.90","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,17,2,"update","462.03","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,17,3,"update","463.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,17,4,"update","450.71","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,17,5,"update","661.40","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,17,6,"update","575.43","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,17,7,"update","455.62","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,17,8,"update","465.81","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,17,9,"update","450.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,17,10,"update","454.27","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,17,1,"update","1058.63","1044.00","0.94","8.63","7370.45","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 28}, ""server_ms"": 1044, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,17,2,"update","692.74","679.00","1.44","9.42","7370.30","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 29}, ""server_ms"": 679, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,17,3,"update","411.02","399.00","2.43","8.88","7370.81","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 30}, ""server_ms"": 399, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,17,4,"update","413.92","402.00","2.42","8.89","7370.49","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 31}, ""server_ms"": 402, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,17,5,"update","399.63","387.00","2.50","9.12","7370.73","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 32}, ""server_ms"": 387, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,17,6,"update","399.01","395.00","2.51","9.05","7370.75","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 33}, ""server_ms"": 395, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,17,7,"update","402.84","398.00","2.48","9.07","7370.79","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 34}, ""server_ms"": 398, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,17,8,"update","407.04","388.00","2.46","8.74","7370.69","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 35}, ""server_ms"": 388, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,17,9,"update","887.12","872.00","1.13","8.59","7370.51","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 36}, ""server_ms"": 872, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,17,10,"update","1827.03","1808.00","0.55","8.72","7370.45","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 37}, ""server_ms"": 1808, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",1,18,1,"update","223.40","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,18,2,"update","56.71","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,18,3,"update","66.50","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,18,4,"update","63.15","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,18,5,"update","54.41","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,18,6,"update","53.97","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,18,7,"update","54.62","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,18,8,"update","54.08","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,18,9,"update","54.02","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,18,10,"update","53.86","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,18,1,"update","11.24","1.00","88.96","66.87","7374.32","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,18,2,"update","16.94","0.00","59.04","19.43","7373.77","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,18,3,"update","4.07","0.00","245.75","78.42","7368.00","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,18,4,"update","3.55","0.00","281.51","89.53","7368.48","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,18,5,"update","3.70","0.00","270.42","87.80","7367.95","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,18,6,"update","3.69","1.00","270.70","218.83","7368.04","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,18,7,"update","3.99","1.00","250.88","87.19","7368.34","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,18,8,"update","4.08","0.00","245.03","79.41","7368.22","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,18,9,"update","3.67","0.00","272.68","88.10","7368.32","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,18,10,"update","3.94","1.00","253.59","84.61","7368.41","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",1,19,1,"update","172.19","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,19,2,"update","64.48","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,19,3,"update","69.28","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,19,4,"update","64.35","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,19,5,"update","70.78","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,19,6,"update","64.94","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,19,7,"update","72.35","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,19,8,"update","63.67","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,19,9,"update","71.21","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,19,10,"update","68.39","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,19,1,"update","21.82","1.00","45.82","19.08","7368.81","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1, ""new_quantity"": 34}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,19,2,"update","14.74","2.00","67.83","25.77","7368.91","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1, ""new_quantity"": 37}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,19,3,"update","13.60","1.00","73.52","25.82","7368.94","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1, ""new_quantity"": 40}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,19,4,"update","16.37","4.00","61.07","22.41","7370.28","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1, ""new_quantity"": 43}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,19,5,"update","14.73","2.00","67.88","82.55","7370.23","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1, ""new_quantity"": 46}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,19,6,"update","7.80","2.00","128.14","48.55","7370.12","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1, ""new_quantity"": 49}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,19,7,"update","14.81","2.00","67.52","23.57","7370.68","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1, ""new_quantity"": 52}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,19,8,"update","7.10","2.00","140.86","47.68","7370.47","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1, ""new_quantity"": 55}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,19,9,"update","14.10","2.00","70.91","30.11","7370.90","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1, ""new_quantity"": 58}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,19,10,"update","13.91","2.00","71.89","25.47","7370.73","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1, ""new_quantity"": 61}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",1,20,1,"update","149.73","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,20,2,"update","55.56","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,20,3,"update","63.94","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,20,4,"update","63.32","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,20,5,"update","65.41","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,20,6,"update","65.64","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,20,7,"update","64.40","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,20,8,"update","62.81","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,20,9,"update","70.14","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,20,10,"update","63.92","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,20,1,"update","17.92","0.00","55.79","21.84","7371.19","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,20,2,"update","18.63","0.00","53.67","24.20","7371.47","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,20,3,"update","14.68","3.00","68.13","23.70","7370.86","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,20,4,"update","12.35","0.00","80.94","26.92","7371.17","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,20,5,"update","20.10","1.00","49.76","20.06","7370.95","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,20,6,"update","5.71","0.00","175.13","59.49","7370.77","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,20,7,"update","14.35","0.00","69.70","25.30","7371.15","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,20,8,"update","5.65","0.00","176.87","67.36","7371.15","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,20,9,"update","17.22","4.00","58.06","32.39","7370.91","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",1,20,10,"update","57.32","1.00","17.45","6.65","7370.77","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",1,21,1,"delete","363.32","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,21,2,"delete","57.87","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,21,3,"delete","57.27","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,21,4,"delete","78.03","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,21,5,"delete","68.31","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,21,6,"delete","67.34","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,21,7,"delete","59.09","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,21,8,"delete","64.14","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,21,9,"delete","55.49","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,21,10,"delete","56.06","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,21,1,"delete","12.46","1.00","80.25","39.73","7373.57","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 11}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",1,21,2,"delete","13.44","2.00","74.42","29.47","7370.86","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 12}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",1,21,3,"delete","13.55","1.00","73.81","32.15","7370.95","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 13}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",1,21,4,"delete","13.50","1.00","74.07","31.00","7371.36","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 14}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",1,21,5,"delete","14.27","1.00","70.07","25.62","7370.98","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 15}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",1,21,6,"delete","14.01","1.00","71.38","26.85","7371.19","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 16}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",1,21,7,"delete","6.06","1.00","164.92","57.67","7371.27","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 17}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",1,21,8,"delete","13.10","1.00","76.32","25.97","7371.05","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 18}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",1,21,9,"delete","13.01","1.00","76.87","25.56","7371.24","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 19}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",1,21,10,"delete","13.15","1.00","76.02","26.84","7371.31","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 20}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","warmup",1,22,1,"delete","125.98","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,22,2,"delete","63.66","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,22,3,"delete","63.80","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,22,4,"delete","63.62","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,22,5,"delete","55.86","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,22,6,"delete","63.44","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,22,7,"delete","62.90","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,22,8,"delete","63.42","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,22,9,"delete","63.40","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,22,10,"delete","65.79","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,22,1,"delete","18.94","1.00","52.80","28.98","7372.62","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 11}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,22,2,"delete","14.21","1.00","70.38","28.65","7372.70","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 12}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,22,3,"delete","13.74","1.00","72.78","24.44","7372.63","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 13}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,22,4,"delete","13.45","1.00","74.35","24.35","7372.88","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 14}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,22,5,"delete","12.90","0.00","77.52","25.84","7372.57","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 15}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,22,6,"delete","12.87","1.00","77.68","27.37","7372.68","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 16}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,22,7,"delete","14.91","0.00","67.05","23.75","7372.66","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 17}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,22,8,"delete","13.32","1.00","75.07","28.00","7372.61","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 18}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,22,9,"delete","12.83","1.00","77.97","30.33","7372.37","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 19}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,22,10,"delete","14.06","1.00","71.13","25.40","7372.65","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 20}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","warmup",1,23,1,"delete","115.54","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,23,2,"delete","64.40","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,23,3,"delete","65.01","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,23,4,"delete","64.11","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,23,5,"delete","64.72","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,23,6,"delete","57.03","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,23,7,"delete","58.07","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,23,8,"delete","64.29","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,23,9,"delete","66.89","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,23,10,"delete","63.13","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,23,1,"delete","10.63","0.00","94.05","41.54","7373.61","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 11}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,23,2,"delete","64.49","1.00","15.51","6.05","7373.51","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 12}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,23,3,"delete","6.82","1.00","146.63","52.87","7373.57","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 13}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,23,4,"delete","13.40","1.00","74.62","29.89","7373.39","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 14}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,23,5,"delete","13.51","1.00","74.03","28.29","7373.48","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 15}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,23,6,"delete","13.75","1.00","72.71","25.83","7373.46","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 16}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,23,7,"delete","13.32","1.00","75.09","26.27","7373.67","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 17}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,23,8,"delete","13.68","1.00","73.11","26.58","7373.15","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 18}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,23,9,"delete","6.22","1.00","160.81","53.85","7373.44","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 19}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,23,10,"delete","13.70","1.00","72.97","25.93","7373.42","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 20}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","warmup",1,24,1,"delete","117.54","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,24,2,"delete","66.62","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,24,3,"delete","58.59","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,24,4,"delete","66.69","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,24,5,"delete","65.58","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,24,6,"delete","65.32","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,24,7,"delete","68.12","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,24,8,"delete","65.27","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,24,9,"delete","57.87","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",1,24,10,"delete","65.62","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",1,24,1,"delete","18.05","2.00","55.41","22.50","7376.31","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 11}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,24,2,"delete","15.61","3.00","64.06","24.30","7376.06","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 12}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,24,3,"delete","7.92","3.00","126.25","45.82","7376.00","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 13}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,24,4,"delete","15.38","3.00","65.04","24.56","7376.37","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 14}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,24,5,"delete","15.19","3.00","65.82","24.08","7376.10","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 15}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,24,6,"delete","14.99","3.00","66.72","22.73","7375.99","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 16}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,24,7,"delete","14.62","2.00","68.40","25.69","7376.32","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 17}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,24,8,"delete","14.54","3.00","68.79","23.42","7376.23","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 18}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,24,9,"delete","7.59","3.00","131.72","44.13","7376.29","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 19}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",1,24,10,"delete","7.19","2.00","139.01","49.89","7376.07","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 20}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","warmup",3,1,1,"simple","3876.97","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,1,2,"simple","3366.16","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,1,3,"simple","3394.40","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,1,4,"simple","3803.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,1,5,"simple","4579.04","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,1,6,"simple","3373.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,1,7,"simple","3311.22","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,1,8,"simple","3368.89","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,1,9,"simple","3314.48","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,1,10,"simple","3298.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,1,1,"simple","4028.55","1136.00","0.74","7.83","7391.28","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1136, ""counters"": {}}"
"neo4j","normal","steady",3,1,2,"simple","3318.47","392.00","0.90","3.28","7391.58","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 392, ""counters"": {}}"
"neo4j","normal","steady",3,1,3,"simple","3253.86","383.00","0.92","3.37","7392.08","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 383, ""counters"": {}}"
"neo4j","normal","steady",3,1,4,"simple","3285.00","387.00","0.91","3.44","7391.97","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 387, ""counters"": {}}"
"neo4j","normal","steady",3,1,5,"simple","3887.58","1136.00","0.77","7.44","7391.81","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1136, ""counters"": {}}"
"neo4j","normal","steady",3,1,6,"simple","6417.90","3492.00","0.47","14.81","7392.16","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 3492, ""counters"": {}}"
"neo4j","normal","steady",3,1,7,"simple","3477.83","656.00","0.86","5.19","7391.85","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 656, ""counters"": {}}"
"neo4j","normal","steady",3,1,8,"simple","3449.46","594.00","0.87","4.77","7391.63","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 594, ""counters"": {}}"
"neo4j","normal","steady",3,1,9,"simple","4085.14","1223.00","0.73","7.60","7391.71","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1223, ""counters"": {}}"
"neo4j","normal","steady",3,1,10,"simple","5339.55","2357.00","0.56","14.56","7392.00","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 2357, ""counters"": {}}"
"neo4j","normal","warmup",3,2,1,"simple","89.19","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,2,2,"simple","75.84","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,2,3,"simple","96.05","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,2,4,"simple","74.53","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,2,5,"simple","74.91","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,2,6,"simple","75.45","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,2,7,"simple","74.16","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,2,8,"simple","74.53","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,2,9,"simple","76.64","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,2,10,"simple","74.85","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,2,1,"simple","24.20","0.00","123.95","17.07","7391.62","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,2,2,"simple","24.27","1.00","123.63","15.88","7391.86","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,2,3,"simple","23.84","0.00","125.84","15.47","7391.67","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,2,4,"simple","23.36","0.00","128.44","16.13","7391.82","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,2,5,"simple","23.23","1.00","129.15","17.08","7391.89","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,2,6,"simple","26.38","1.00","113.72","13.76","7391.51","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,2,7,"simple","23.56","0.00","127.32","15.29","7391.76","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,2,8,"simple","23.92","1.00","125.42","14.70","7391.57","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,2,9,"simple","23.48","0.00","127.76","15.50","7391.60","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,2,10,"simple","23.74","1.00","126.38","15.21","7391.67","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",3,3,1,"simple","141.22","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,3,2,"simple","133.11","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,3,3,"simple","131.15","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,3,4,"simple","131.90","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,3,5,"simple","131.54","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,3,6,"simple","131.89","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,3,7,"simple","144.78","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,3,8,"simple","132.16","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,3,9,"simple","131.22","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,3,10,"simple","136.12","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,3,1,"simple","80.17","3.00","37.42","6.38","7391.48","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Kerstin-Weinhage-Allee 12"", ""city"": ""Hannover"", ""zip"": ""93676"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",3,3,2,"simple","82.60","2.00","36.32","7.01","7391.52","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Kerstin-Weinhage-Allee 12"", ""city"": ""Hannover"", ""zip"": ""93676"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",3,3,3,"simple","81.92","4.00","36.62","6.64","7391.51","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Kerstin-Weinhage-Allee 12"", ""city"": ""Hannover"", ""zip"": ""93676"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",3,3,4,"simple","81.60","3.00","36.77","7.70","7391.70","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Kerstin-Weinhage-Allee 12"", ""city"": ""Hannover"", ""zip"": ""93676"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",3,3,5,"simple","81.27","3.00","36.91","7.72","7391.64","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Kerstin-Weinhage-Allee 12"", ""city"": ""Hannover"", ""zip"": ""93676"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",3,3,6,"simple","82.40","3.00","36.41","6.98","7391.63","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Kerstin-Weinhage-Allee 12"", ""city"": ""Hannover"", ""zip"": ""93676"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",3,3,7,"simple","82.19","4.00","36.50","7.79","7391.77","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Kerstin-Weinhage-Allee 12"", ""city"": ""Hannover"", ""zip"": ""93676"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",3,3,8,"simple","83.43","3.00","35.96","8.13","7391.44","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Kerstin-Weinhage-Allee 12"", ""city"": ""Hannover"", ""zip"": ""93676"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",3,3,9,"simple","84.70","4.00","35.42","7.86","7391.51","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Kerstin-Weinhage-Allee 12"", ""city"": ""Hannover"", ""zip"": ""93676"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",3,3,10,"simple","81.79","3.00","36.68","6.89","7391.84","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 14, ""street"": ""Kerstin-Weinhage-Allee 12"", ""city"": ""Hannover"", ""zip"": ""93676"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","warmup",3,4,1,"medium","2402.72","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,4,2,"medium","3267.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,4,3,"medium","2994.31","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,4,4,"medium","3318.41","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,4,5,"medium","982.03","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,4,6,"medium","2604.15","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,4,7,"medium","1938.39","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,4,8,"medium","981.74","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,4,9,"medium","1951.86","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,4,10,"medium","3586.05","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,4,1,"medium","934.76","643.00","3.21","25.62","7419.93","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 643, ""counters"": {}}"
"neo4j","normal","steady",3,4,2,"medium","900.63","668.00","3.33","29.15","7420.42","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 668, ""counters"": {}}"
"neo4j","normal","steady",3,4,3,"medium","1349.78","1037.00","2.22","41.00","7420.93","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1037, ""counters"": {}}"
"neo4j","normal","steady",3,4,4,"medium","962.69","747.00","3.12","34.12","7421.62","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 747, ""counters"": {}}"
"neo4j","normal","steady",3,4,5,"medium","1044.28","754.00","2.87","32.42","7422.24","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 754, ""counters"": {}}"
"neo4j","normal","steady",3,4,6,"medium","1237.56","926.00","2.42","34.64","7422.41","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 926, ""counters"": {}}"
"neo4j","normal","steady",3,4,7,"medium","2138.16","1849.00","1.40","52.85","7422.79","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1849, ""counters"": {}}"
"neo4j","normal","steady",3,4,8,"medium","2252.38","1941.00","1.33","61.34","7422.79","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1941, ""counters"": {}}"
"neo4j","normal","steady",3,4,9,"medium","866.32","575.00","3.46","24.66","7423.00","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 575, ""counters"": {}}"
"neo4j","normal","steady",3,4,10,"medium","2220.98","1958.00","1.35","60.05","7422.99","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 37, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1958, ""counters"": {}}"
"neo4j","normal","warmup",3,5,1,"medium","80.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,5,2,"medium","53.85","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,5,3,"medium","54.35","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,5,4,"medium","54.29","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,5,5,"medium","54.06","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,5,6,"medium","53.99","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,5,7,"medium","54.10","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,5,8,"medium","53.86","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,5,9,"medium","53.91","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,5,10,"medium","55.99","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,5,1,"medium","46.83","2.00","64.07","8.45","7423.16","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",3,5,2,"medium","4.06","1.00","738.23","99.90","7423.06","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,5,3,"medium","3.97","1.00","756.39","123.54","7423.39","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,5,4,"medium","3.64","1.00","823.16","98.63","7423.17","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,5,5,"medium","3.71","1.00","809.39","97.49","7423.30","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,5,6,"medium","3.88","1.00","772.94","97.56","7423.17","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,5,7,"medium","3.59","1.00","835.68","134.84","7423.62","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,5,8,"medium","3.91","1.00","767.50","105.12","7423.29","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,5,9,"medium","3.69","1.00","813.91","105.71","7423.06","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,5,10,"medium","3.95","1.00","759.13","127.79","7423.07","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",3,6,1,"medium","79.17","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,6,2,"medium","74.30","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,6,3,"medium","179.13","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,6,4,"medium","73.96","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,6,5,"medium","74.71","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,6,6,"medium","74.76","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,6,7,"medium","81.51","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,6,8,"medium","74.03","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,6,9,"medium","73.10","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,6,10,"medium","75.39","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,6,1,"medium","22.25","0.00","134.81","18.78","7423.21","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,6,2,"medium","22.36","1.00","134.15","15.37","7423.04","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,6,3,"medium","22.95","0.00","130.71","24.99","7423.14","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,6,4,"medium","22.18","0.00","135.24","20.91","7423.03","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,6,5,"medium","21.66","1.00","138.47","16.24","7423.31","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,6,6,"medium","22.27","0.00","134.72","15.31","7423.34","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,6,7,"medium","21.14","1.00","141.94","16.44","7423.30","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,6,8,"medium","22.18","0.00","135.26","14.72","7423.42","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,6,9,"medium","21.77","1.00","137.79","15.81","7423.16","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,6,10,"medium","22.84","0.00","131.33","15.10","7423.28","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","warmup",3,7,1,"complex","161.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,7,2,"complex","151.31","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,7,3,"complex","147.88","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,7,4,"complex","150.01","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,7,5,"complex","148.85","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,7,6,"complex","150.17","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,7,7,"complex","149.65","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,7,8,"complex","148.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,7,9,"complex","148.64","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,7,10,"complex","149.29","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,7,1,"complex","98.55","5.00","30.44","5.92","7424.49","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,7,2,"complex","99.25","5.00","30.23","4.63","7424.42","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,7,3,"complex","97.29","5.00","30.84","4.99","7424.18","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,7,4,"complex","95.05","5.00","31.56","5.10","7424.22","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,7,5,"complex","106.92","5.00","28.06","4.42","7424.50","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,7,6,"complex","103.50","6.00","28.98","10.02","7426.46","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",3,7,7,"complex","112.58","5.00","26.65","4.28","7428.57","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,7,8,"complex","108.55","4.00","27.64","7.57","7428.60","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",3,7,9,"complex","107.27","5.00","27.97","4.94","7425.76","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,7,10,"complex","106.10","6.00","28.27","4.70","7422.63","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","warmup",3,8,1,"complex","66.13","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,8,2,"complex","59.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,8,3,"complex","57.66","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,8,4,"complex","58.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,8,5,"complex","57.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,8,6,"complex","57.70","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,8,7,"complex","57.31","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,8,8,"complex","57.31","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,8,9,"complex","57.37","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,8,10,"complex","57.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,8,1,"complex","6.95","1.00","431.76","54.95","7423.19","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 52, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,8,2,"complex","6.79","1.00","441.94","49.51","7423.45","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 52, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,8,3,"complex","6.81","1.00","440.76","48.08","7423.38","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 52, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,8,4,"complex","6.70","1.00","447.96","50.27","7423.41","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 52, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,8,5,"complex","6.88","1.00","435.84","49.19","7423.53","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 52, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,8,6,"complex","6.92","1.00","433.66","99.85","7423.45","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 52, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,8,7,"complex","6.58","0.00","455.70","56.04","7423.59","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 52, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",3,8,8,"complex","6.59","1.00","455.03","50.53","7423.24","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 52, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,8,9,"complex","6.61","1.00","453.71","52.93","7423.44","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 52, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",3,8,10,"complex","6.71","1.00","446.79","53.13","7423.37","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 52, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",3,9,1,"complex","90.14","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,9,2,"complex","74.81","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,9,3,"complex","72.90","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,9,4,"complex","73.91","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,9,5,"complex","72.12","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,9,6,"complex","76.03","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,9,7,"complex","74.18","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,9,8,"complex","112.17","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,9,9,"complex","75.54","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,9,10,"complex","73.45","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,9,1,"complex","21.50","2.00","139.57","18.18","7433.03","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 285, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",3,9,2,"complex","21.77","2.00","137.77","55.33","7432.48","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 285, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",3,9,3,"complex","21.65","2.00","138.55","30.97","7432.18","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 285, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",3,9,4,"complex","23.82","3.00","125.95","16.63","7431.90","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 285, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",3,9,5,"complex","21.77","3.00","137.79","18.40","7432.05","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 285, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",3,9,6,"complex","21.39","2.00","140.26","18.69","7432.15","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 285, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",3,9,7,"complex","22.17","3.00","135.30","17.69","7431.73","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 285, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",3,9,8,"complex","21.55","3.00","139.22","27.76","7431.97","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 285, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",3,9,9,"complex","21.89","2.00","137.06","18.12","7431.85","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 285, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",3,9,10,"complex","22.69","3.00","132.21","17.83","7432.14","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 285, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","warmup",3,10,1,"very_complex","62.22","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,10,2,"very_complex","57.27","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,10,3,"very_complex","57.89","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,10,4,"very_complex","57.59","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,10,5,"very_complex","57.85","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,10,6,"very_complex","58.43","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,10,7,"very_complex","64.50","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,10,8,"very_complex","57.74","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,10,9,"very_complex","59.69","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,10,10,"very_complex","58.01","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,10,1,"very_complex","7.46","6.00","402.01","67.11","7431.95","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",3,10,2,"very_complex","7.27","4.00","412.52","58.02","7431.88","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",3,10,3,"very_complex","8.04","6.00","373.13","67.74","7431.93","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",3,10,4,"very_complex","6.89","4.00","435.69","60.92","7432.11","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",3,10,5,"very_complex","7.05","4.00","425.82","61.66","7431.91","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",3,10,6,"very_complex","7.35","5.00","408.01","58.88","7431.91","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,10,7,"very_complex","7.37","4.00","407.03","56.46","7431.78","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",3,10,8,"very_complex","9.07","7.00","330.75","50.78","7431.86","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","normal","steady",3,10,9,"very_complex","7.32","5.00","409.71","68.87","7431.81","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,10,10,"very_complex","7.18","4.00","417.57","58.12","7432.11","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","warmup",3,11,1,"very_complex","143.00","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,11,2,"very_complex","78.94","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,11,3,"very_complex","79.22","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,11,4,"very_complex","77.87","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,11,5,"very_complex","77.23","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,11,6,"very_complex","76.29","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,11,7,"very_complex","76.77","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,11,8,"very_complex","77.06","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,11,9,"very_complex","77.31","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,11,10,"very_complex","78.33","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,11,1,"very_complex","37.57","27.00","79.85","181.56","7432.82","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","normal","steady",3,11,2,"very_complex","27.10","18.00","110.69","31.61","7433.11","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","normal","steady",3,11,3,"very_complex","26.21","17.00","114.45","28.64","7432.98","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","normal","steady",3,11,4,"very_complex","26.09","17.00","114.97","28.80","7433.08","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","normal","steady",3,11,5,"very_complex","25.53","18.00","117.49","29.87","7433.26","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","normal","steady",3,11,6,"very_complex","26.42","18.00","113.55","29.22","7432.96","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","normal","steady",3,11,7,"very_complex","26.54","18.00","113.02","31.79","7433.04","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","normal","steady",3,11,8,"very_complex","25.53","17.00","117.50","31.82","7432.91","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","normal","steady",3,11,9,"very_complex","25.88","17.00","115.93","29.18","7433.05","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","normal","steady",3,11,10,"very_complex","25.55","17.00","117.42","28.97","7432.87","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","normal","warmup",3,12,1,"very_complex","57.88","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,12,2,"very_complex","57.21","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,12,3,"very_complex","58.60","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,12,4,"very_complex","57.88","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,12,5,"very_complex","57.65","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,12,6,"very_complex","56.99","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,12,7,"very_complex","57.59","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,12,8,"very_complex","57.26","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,12,9,"very_complex","57.44","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,12,10,"very_complex","57.83","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,12,1,"very_complex","7.68","5.00","390.77","59.45","7433.23","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,12,2,"very_complex","10.06","8.00","298.24","46.42","7433.23","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 8, ""counters"": {}}"
"neo4j","normal","steady",3,12,3,"very_complex","6.73","4.00","445.45","62.32","7433.11","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",3,12,4,"very_complex","15.06","5.00","199.14","29.08","7432.88","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",3,12,5,"very_complex","12.06","10.00","248.72","39.62","7432.96","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","normal","steady",3,12,6,"very_complex","9.15","6.00","327.70","49.54","7433.12","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",3,12,7,"very_complex","10.96","8.00","273.71","51.86","7433.29","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 8, ""counters"": {}}"
"neo4j","normal","steady",3,12,8,"very_complex","17.49","11.00","171.56","35.86","7433.43","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","normal","steady",3,12,9,"very_complex","12.70","9.00","236.24","41.82","7432.94","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","normal","steady",3,12,10,"very_complex","9.25","6.00","324.34","50.73","7433.38","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","warmup",3,13,1,"create","91.10","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,13,2,"create","64.03","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,13,3,"create","70.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,13,4,"create","62.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,13,5,"create","64.76","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,13,6,"create","63.05","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,13,7,"create","62.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,13,8,"create","62.57","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,13,9,"create","55.80","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,13,10,"create","62.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,13,1,"create","13.18","1.00","227.55","28.02","7433.70","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1382}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",3,13,2,"create","13.24","0.00","226.56","29.06","7433.45","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1383}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",3,13,3,"create","12.76","1.00","235.07","29.08","7433.87","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1384}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",3,13,4,"create","12.61","1.00","237.92","33.16","7433.36","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1385}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",3,13,5,"create","6.68","0.00","449.39","73.61","7433.36","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1386}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",3,13,6,"create","13.06","1.00","229.71","31.26","7433.60","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1387}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",3,13,7,"create","14.15","0.00","212.07","31.22","7433.52","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1388}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",3,13,8,"create","12.86","0.00","233.31","36.46","7433.95","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1389}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",3,13,9,"create","12.43","0.00","241.33","33.37","7433.74","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1390}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",3,13,10,"create","12.19","0.00","246.05","32.83","7433.88","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1391}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","warmup",3,14,1,"create","67.25","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,14,2,"create","62.73","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,14,3,"create","60.62","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,14,4,"create","64.00","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,14,5,"create","63.50","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,14,6,"create","63.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,14,7,"create","56.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,14,8,"create","63.00","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,14,9,"create","62.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,14,10,"create","63.48","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,14,1,"create","12.56","1.00","238.86","37.30","7434.30","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2040}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,14,2,"create","12.86","1.00","233.27","35.66","7433.95","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2041}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,14,3,"create","12.95","1.00","231.62","33.08","7434.19","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2042}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,14,4,"create","12.89","1.00","232.80","34.25","7434.42","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2043}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,14,5,"create","13.76","2.00","218.00","31.93","7434.27","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2044}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,14,6,"create","15.55","0.00","192.89","32.62","7434.20","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2045}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,14,7,"create","12.83","4.00","233.83","60.19","7434.36","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2046}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,14,8,"create","6.11","2.00","490.68","89.95","7434.31","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2047}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,14,9,"create","14.52","1.00","206.66","29.65","7434.30","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2048}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,14,10,"create","13.06","2.00","229.79","31.48","7434.08","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2049}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","warmup",3,15,1,"create","69.58","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,15,2,"create","59.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,15,3,"create","59.03","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,15,4,"create","58.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,15,5,"create","62.73","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,15,6,"create","62.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,15,7,"create","63.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,15,8,"create","62.79","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,15,9,"create","64.00","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,15,10,"create","63.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,15,1,"create","15.70","4.00","191.13","29.47","7434.94","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1519}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",3,15,2,"create","50.68","1.00","59.20","9.23","7435.05","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1520}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",3,15,3,"create","5.58","0.00","537.95","66.63","7434.79","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1521}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",3,15,4,"create","12.51","1.00","239.80","37.48","7435.01","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1522}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",3,15,5,"create","12.43","0.00","241.32","61.35","7435.10","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1523}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",3,15,6,"create","12.99","1.00","230.96","31.67","7435.59","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1524}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",3,15,7,"create","12.09","1.00","248.06","31.03","7435.65","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1525}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",3,15,8,"create","13.11","1.00","228.79","28.05","7435.38","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1526}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",3,15,9,"create","12.80","1.00","234.46","30.48","7435.35","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1527}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",3,15,10,"create","12.84","1.00","233.67","31.91","7435.82","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1528}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","warmup",3,16,1,"create","78.06","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,16,2,"create","57.32","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,16,3,"create","57.14","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,16,4,"create","64.77","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,16,5,"create","66.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,16,6,"create","64.50","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,16,7,"create","64.70","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,16,8,"create","67.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,16,9,"create","65.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,16,10,"create","64.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,16,1,"create","6.43","2.00","466.30","75.22","7436.02","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10474}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,16,2,"create","13.62","2.00","220.32","29.40","7436.43","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10475}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,16,3,"create","13.65","2.00","219.74","28.50","7436.01","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10476}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,16,4,"create","6.95","2.00","431.86","62.81","7436.03","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10477}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,16,5,"create","13.21","2.00","227.06","30.19","7436.10","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10478}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,16,6,"create","13.28","2.00","225.82","28.78","7436.28","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10479}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,16,7,"create","13.34","2.00","224.92","28.57","7436.22","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10480}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,16,8,"create","13.76","2.00","218.03","39.49","7436.41","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10481}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,16,9,"create","14.04","2.00","213.66","33.43","7436.09","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10482}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",3,16,10,"create","13.58","2.00","220.85","34.12","7436.22","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10483}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","warmup",3,17,1,"update","781.66","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,17,2,"update","507.24","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,17,3,"update","562.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,17,4,"update","494.50","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,17,5,"update","539.42","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,17,6,"update","684.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,17,7,"update","574.47","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,17,8,"update","468.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,17,9,"update","765.20","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,17,10,"update","480.04","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,17,1,"update","556.08","552.00","5.39","25.38","7436.64","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 69}, ""server_ms"": 552, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,17,2,"update","2513.04","2510.00","1.19","27.56","7436.20","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 73}, ""server_ms"": 2510, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,17,3,"update","448.92","445.00","6.68","25.20","7436.52","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 76}, ""server_ms"": 445, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,17,4,"update","492.55","490.00","6.09","24.67","7436.50","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 79}, ""server_ms"": 490, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,17,5,"update","521.83","505.00","5.75","27.70","7436.37","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 80}, ""server_ms"": 505, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,17,6,"update","452.46","396.00","6.63","24.53","7436.81","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 83}, ""server_ms"": 396, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,17,7,"update","431.45","426.00","6.95","25.06","7436.53","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 87}, ""server_ms"": 426, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,17,8,"update","2379.09","2369.00","1.26","25.79","7436.43","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 90}, ""server_ms"": 2369, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,17,9,"update","1249.46","1191.00","2.40","24.78","7436.62","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 92}, ""server_ms"": 1191, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,17,10,"update","453.04","448.00","6.62","25.79","7436.58","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 97}, ""server_ms"": 448, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",3,18,1,"update","66.22","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,18,2,"update","52.67","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,18,3,"update","53.06","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,18,4,"update","53.72","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,18,5,"update","53.64","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,18,6,"update","52.91","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,18,7,"update","53.78","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,18,8,"update","52.87","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,18,9,"update","61.03","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,18,10,"update","53.93","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,18,1,"update","3.53","1.00","850.65","92.10","7436.80","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,18,2,"update","10.02","0.00","299.42","38.08","7436.57","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,18,3,"update","3.76","1.00","797.36","99.65","7436.84","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,18,4,"update","9.74","0.00","308.02","39.48","7436.55","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,18,5,"update","3.68","1.00","815.51","88.34","7436.41","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,18,6,"update","6.06","1.00","495.42","59.12","7436.63","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,18,7,"update","3.57","1.00","840.08","90.04","7436.64","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,18,8,"update","3.72","1.00","807.02","88.06","7436.56","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,18,9,"update","3.58","2.00","837.85","91.67","7436.54","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 21, ""new_rating"": 1}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,18,10,"update","2.66","1.00","1126.76","301.12","7436.40","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",3,19,1,"update","63.96","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,19,2,"update","63.95","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,19,3,"update","63.68","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,19,4,"update","63.67","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,19,5,"update","64.33","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,19,6,"update","64.66","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,19,7,"update","63.19","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,19,8,"update","72.04","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,19,9,"update","56.15","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,19,10,"update","63.51","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,19,1,"update","13.23","10.00","226.80","28.77","7436.71","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 21, ""new_quantity"": 98}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,19,2,"update","17.76","14.00","168.87","25.69","7436.82","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 21, ""new_quantity"": 107}, ""server_ms"": 14, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,19,3,"update","6.63","1.00","452.39","50.55","7436.56","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 21, ""new_quantity"": 113}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,19,4,"update","13.55","9.00","221.35","24.55","7436.66","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 21, ""new_quantity"": 125}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,19,5,"update","14.50","0.00","206.96","24.18","7436.63","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 21, ""new_quantity"": 131}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,19,6,"update","14.63","10.00","205.00","24.10","7436.71","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 21, ""new_quantity"": 143}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,19,7,"update","14.56","11.00","206.07","23.73","7436.50","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 21, ""new_quantity"": 155}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,19,8,"update","14.39","11.00","208.47","27.29","7436.68","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 21, ""new_quantity"": 164}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,19,9,"update","13.50","10.00","222.20","25.62","7436.96","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 21, ""new_quantity"": 170}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,19,10,"update","13.24","0.00","226.52","25.92","7436.64","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 21, ""new_quantity"": 176}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",3,20,1,"update","65.67","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,20,2,"update","63.29","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,20,3,"update","63.54","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,20,4,"update","63.51","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,20,5,"update","63.77","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,20,6,"update","68.93","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,20,7,"update","65.54","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,20,8,"update","63.60","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,20,9,"update","62.89","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,20,10,"update","63.98","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,20,1,"update","13.03","10.00","230.27","26.97","7436.58","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,20,2,"update","6.42","0.00","467.00","50.73","7436.59","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,20,3,"update","14.70","10.00","204.08","23.85","7436.94","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,20,4,"update","14.56","10.00","206.06","24.30","7437.07","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,20,5,"update","13.81","0.00","217.30","35.13","7436.61","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,20,6,"update","21.72","17.00","138.10","18.20","7436.38","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 17, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,20,7,"update","14.56","12.00","206.02","24.09","7436.72","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,20,8,"update","13.44","1.00","223.14","25.51","7436.73","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,20,9,"update","14.06","0.00","213.34","25.30","7437.00","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",3,20,10,"update","14.38","0.00","208.57","23.90","7437.03","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",3,21,1,"delete","68.55","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,21,2,"delete","56.07","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,21,3,"delete","56.57","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,21,4,"delete","62.70","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,21,5,"delete","62.65","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,21,6,"delete","63.90","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,21,7,"delete","63.57","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,21,8,"delete","64.02","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,21,9,"delete","62.81","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,21,10,"delete","62.63","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,21,1,"delete","13.43","11.00","223.34","27.08","7436.71","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 31}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,21,2,"delete","6.14","4.00","488.54","57.63","7437.10","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 32}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,21,3,"delete","13.47","12.00","222.68","26.83","7436.88","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 33}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,21,4,"delete","12.25","11.00","244.81","32.91","7436.90","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 34}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,21,5,"delete","13.49","10.00","222.39","24.42","7436.94","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 35}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,21,6,"delete","5.64","3.00","532.03","71.11","7437.04","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 36}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,21,7,"delete","13.47","0.00","222.64","25.29","7437.12","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 37}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",3,21,8,"delete","13.58","10.00","220.91","26.01","7436.81","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 38}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,21,9,"delete","12.27","10.00","244.55","26.69","7437.04","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 39}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,21,10,"delete","13.49","0.00","222.40","30.25","7436.99","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 40}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","warmup",3,22,1,"delete","72.34","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,22,2,"delete","63.52","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,22,3,"delete","57.18","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,22,4,"delete","63.69","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,22,5,"delete","55.25","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,22,6,"delete","55.80","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,22,7,"delete","57.24","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,22,8,"delete","63.38","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,22,9,"delete","63.54","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,22,10,"delete","62.60","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,22,1,"delete","13.57","11.00","221.04","28.44","7437.34","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 31}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,22,2,"delete","13.24","10.00","226.56","24.95","7437.16","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 32}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,22,3,"delete","13.18","9.00","227.63","26.74","7437.13","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 33}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,22,4,"delete","13.32","12.00","225.19","31.19","7437.22","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 34}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,22,5,"delete","6.91","4.00","434.30","54.88","7437.20","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 35}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,22,6,"delete","12.33","10.00","243.30","30.02","7437.32","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 36}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,22,7,"delete","13.47","0.00","222.65","115.09","7439.38","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 37}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",3,22,8,"delete","13.28","11.00","225.87","25.34","7435.67","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 38}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,22,9,"delete","5.76","3.00","520.60","58.46","7435.98","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 39}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,22,10,"delete","12.21","0.00","245.71","29.13","7435.80","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 40}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","warmup",3,23,1,"delete","63.36","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,23,2,"delete","63.39","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,23,3,"delete","63.78","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,23,4,"delete","56.54","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,23,5,"delete","63.11","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,23,6,"delete","62.75","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,23,7,"delete","64.13","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,23,8,"delete","71.39","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,23,9,"delete","63.93","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,23,10,"delete","62.91","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,23,1,"delete","13.50","0.00","222.24","30.37","7435.95","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 31}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",3,23,2,"delete","13.45","1.00","223.08","40.17","7435.97","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 32}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",3,23,3,"delete","13.81","1.00","217.28","26.39","7435.95","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 33}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",3,23,4,"delete","13.47","11.00","222.68","25.67","7436.03","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 34}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,23,5,"delete","5.25","3.00","571.36","67.47","7436.06","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 35}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,23,6,"delete","13.51","1.00","222.06","25.43","7436.03","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 36}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",3,23,7,"delete","13.45","0.00","223.09","25.36","7435.80","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 37}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",3,23,8,"delete","12.66","10.00","236.93","34.84","7435.98","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 38}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,23,9,"delete","13.63","12.00","220.06","27.36","7436.09","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 39}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,23,10,"delete","13.47","0.00","222.73","28.44","7435.54","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 40}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","warmup",3,24,1,"delete","73.86","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,24,2,"delete","57.05","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,24,3,"delete","58.84","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,24,4,"delete","64.66","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,24,5,"delete","117.32","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,24,6,"delete","65.09","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,24,7,"delete","64.00","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,24,8,"delete","65.06","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,24,9,"delete","66.73","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",3,24,10,"delete","68.41","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",3,24,1,"delete","14.20","11.00","211.29","26.66","7436.43","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 31}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,24,2,"delete","14.15","1.00","211.95","29.47","7436.39","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 32}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",3,24,3,"delete","14.34","11.00","209.25","33.95","7436.73","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 33}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,24,4,"delete","14.39","1.00","208.46","25.42","7436.53","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 34}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",3,24,5,"delete","6.67","3.00","449.58","52.87","7436.88","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 35}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,24,6,"delete","13.00","1.00","230.80","27.31","7436.74","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 36}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",3,24,7,"delete","13.31","11.00","225.44","28.04","7436.82","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 37}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,24,8,"delete","5.83","3.00","514.47","78.47","7436.70","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 38}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,24,9,"delete","14.05","11.00","213.47","27.42","7436.49","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 39}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",3,24,10,"delete","5.63","4.00","532.88","64.45","7436.55","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 40}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","warmup",5,1,1,"simple","5660.92","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,1,2,"simple","5452.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,1,3,"simple","5478.05","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,1,4,"simple","6352.95","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,1,5,"simple","5542.12","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,1,6,"simple","5502.75","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,1,7,"simple","5512.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,1,8,"simple","5476.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,1,9,"simple","5467.98","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,1,10,"simple","5489.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,1,1,"simple","5439.05","423.00","0.92","3.82","7454.93","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 423, ""counters"": {}}"
"neo4j","normal","steady",5,1,2,"simple","5497.59","435.00","0.91","3.58","7454.67","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 435, ""counters"": {}}"
"neo4j","normal","steady",5,1,3,"simple","5446.53","438.00","0.92","3.55","7455.11","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 438, ""counters"": {}}"
"neo4j","normal","steady",5,1,4,"simple","5379.62","416.00","0.93","3.79","7454.94","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 416, ""counters"": {}}"
"neo4j","normal","steady",5,1,5,"simple","5597.45","437.00","0.89","3.56","7454.96","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 437, ""counters"": {}}"
"neo4j","normal","steady",5,1,6,"simple","5430.05","454.00","0.92","3.66","7454.85","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 454, ""counters"": {}}"
"neo4j","normal","steady",5,1,7,"simple","5427.65","468.00","0.92","3.66","7454.90","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 468, ""counters"": {}}"
"neo4j","normal","steady",5,1,8,"simple","5458.10","424.00","0.92","3.64","7454.82","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 424, ""counters"": {}}"
"neo4j","normal","steady",5,1,9,"simple","5438.70","478.00","0.92","3.72","7454.82","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 478, ""counters"": {}}"
"neo4j","normal","steady",5,1,10,"simple","5480.63","456.00","0.91","3.72","7455.09","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 456, ""counters"": {}}"
"neo4j","normal","warmup",5,2,1,"simple","92.95","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,2,2,"simple","95.85","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,2,3,"simple","89.38","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,2,4,"simple","89.28","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,2,5,"simple","90.14","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,2,6,"simple","89.97","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,2,7,"simple","90.20","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,2,8,"simple","88.96","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,2,9,"simple","92.21","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,2,10,"simple","89.40","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,2,1,"simple","38.97","1.00","128.30","9.05","7454.76","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,2,2,"simple","40.14","0.00","124.55","8.92","7454.66","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,2,3,"simple","38.42","1.00","130.13","9.37","7455.03","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,2,4,"simple","38.33","0.00","130.45","9.64","7454.91","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,2,5,"simple","38.28","0.00","130.63","9.63","7454.90","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,2,6,"simple","38.19","0.00","130.93","9.15","7454.99","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,2,7,"simple","42.10","0.00","118.77","8.93","7454.82","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,2,8,"simple","39.31","0.00","127.19","9.13","7454.98","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,2,9,"simple","39.67","0.00","126.05","9.66","7454.79","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,2,10,"simple","38.07","1.00","131.32","9.86","7454.84","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",5,3,1,"simple","193.26","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,3,2,"simple","187.95","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,3,3,"simple","188.35","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,3,4,"simple","187.53","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,3,5,"simple","195.86","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,3,6,"simple","186.94","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,3,7,"simple","199.43","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,3,8,"simple","186.46","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,3,9,"simple","190.98","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,3,10,"simple","186.15","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,3,1,"simple","137.16","2.00","36.45","3.85","7454.70","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 28, ""street"": ""Kadering 24"", ""city"": ""Guben"", ""zip"": ""44256"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",5,3,2,"simple","138.54","2.00","36.09","4.60","7454.92","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 28, ""street"": ""Kadering 24"", ""city"": ""Guben"", ""zip"": ""44256"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",5,3,3,"simple","135.99","3.00","36.77","4.29","7454.92","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 28, ""street"": ""Kadering 24"", ""city"": ""Guben"", ""zip"": ""44256"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,3,4,"simple","139.53","3.00","35.83","3.76","7454.79","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 28, ""street"": ""Kadering 24"", ""city"": ""Guben"", ""zip"": ""44256"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,3,5,"simple","135.91","3.00","36.79","4.25","7454.66","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 28, ""street"": ""Kadering 24"", ""city"": ""Guben"", ""zip"": ""44256"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,3,6,"simple","133.88","3.00","37.35","3.98","7455.03","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 28, ""street"": ""Kadering 24"", ""city"": ""Guben"", ""zip"": ""44256"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,3,7,"simple","142.01","3.00","35.21","5.51","7455.12","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 28, ""street"": ""Kadering 24"", ""city"": ""Guben"", ""zip"": ""44256"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,3,8,"simple","138.05","3.00","36.22","3.74","7455.01","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 28, ""street"": ""Kadering 24"", ""city"": ""Guben"", ""zip"": ""44256"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,3,9,"simple","137.37","3.00","36.40","3.81","7455.04","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 28, ""street"": ""Kadering 24"", ""city"": ""Guben"", ""zip"": ""44256"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,3,10,"simple","144.14","3.00","34.69","3.59","7454.90","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 28, ""street"": ""Kadering 24"", ""city"": ""Guben"", ""zip"": ""44256"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","warmup",5,4,1,"medium","1283.19","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,4,2,"medium","1145.91","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,4,3,"medium","19181.34","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,4,4,"medium","1774.02","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,4,5,"medium","1625.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,4,6,"medium","1479.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,4,7,"medium","1373.33","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,4,8,"medium","1512.75","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,4,9,"medium","4195.14","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,4,10,"medium","1516.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,4,1,"medium","1292.65","795.00","3.87","38.47","7472.43","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 795, ""counters"": {}}"
"neo4j","normal","steady",5,4,2,"medium","1303.97","793.00","3.83","48.54","7472.54","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 793, ""counters"": {}}"
"neo4j","normal","steady",5,4,3,"medium","2472.19","1970.00","2.02","57.25","7472.56","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1970, ""counters"": {}}"
"neo4j","normal","steady",5,4,4,"medium","1499.23","998.00","3.34","52.85","7472.90","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 998, ""counters"": {}}"
"neo4j","normal","steady",5,4,5,"medium","1346.69","852.00","3.71","39.03","7472.76","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 852, ""counters"": {}}"
"neo4j","normal","steady",5,4,6,"medium","1352.70","887.00","3.70","51.28","7472.52","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 887, ""counters"": {}}"
"neo4j","normal","steady",5,4,7,"medium","1412.47","947.00","3.54","43.60","7473.02","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 947, ""counters"": {}}"
"neo4j","normal","steady",5,4,8,"medium","1272.52","780.00","3.93","44.57","7473.15","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 780, ""counters"": {}}"
"neo4j","normal","steady",5,4,9,"medium","1324.68","855.00","3.77","41.07","7473.12","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 855, ""counters"": {}}"
"neo4j","normal","steady",5,4,10,"medium","1164.70","713.00","4.29","34.88","7473.11","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 97, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 713, ""counters"": {}}"
"neo4j","normal","warmup",5,5,1,"medium","59.06","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,5,2,"medium","54.92","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,5,3,"medium","54.50","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,5,4,"medium","54.18","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,5,5,"medium","53.97","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,5,6,"medium","54.26","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,5,7,"medium","54.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,5,8,"medium","56.08","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,5,9,"medium","59.56","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,5,10,"medium","64.08","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,5,1,"medium","9.74","7.00","513.13","65.96","7473.21","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 7, ""counters"": {}}"
"neo4j","normal","steady",5,5,2,"medium","11.08","8.00","451.44","63.90","7472.85","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 8, ""counters"": {}}"
"neo4j","normal","steady",5,5,3,"medium","11.01","8.00","454.11","62.74","7473.02","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 8, ""counters"": {}}"
"neo4j","normal","steady",5,5,4,"medium","30.63","28.00","163.26","48.18","7472.84","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 28, ""counters"": {}}"
"neo4j","normal","steady",5,5,5,"medium","10.43","7.00","479.36","61.73","7473.10","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 7, ""counters"": {}}"
"neo4j","normal","steady",5,5,6,"medium","11.24","8.00","444.90","59.56","7473.16","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 8, ""counters"": {}}"
"neo4j","normal","steady",5,5,7,"medium","11.03","8.00","453.44","61.73","7473.00","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 8, ""counters"": {}}"
"neo4j","normal","steady",5,5,8,"medium","10.81","8.00","462.39","62.50","7473.18","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 8, ""counters"": {}}"
"neo4j","normal","steady",5,5,9,"medium","12.39","8.00","403.61","58.31","7472.96","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 8, ""counters"": {}}"
"neo4j","normal","steady",5,5,10,"medium","10.44","1.00","479.15","67.02","7472.90","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",5,6,1,"medium","90.33","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,6,2,"medium","88.16","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,6,3,"medium","89.06","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,6,4,"medium","88.38","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,6,5,"medium","87.55","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,6,6,"medium","89.26","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,6,7,"medium","89.63","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,6,8,"medium","88.30","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,6,9,"medium","90.72","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,6,10,"medium","92.57","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,6,1,"medium","37.07","2.00","134.89","12.68","7473.37","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",5,6,2,"medium","37.09","1.00","134.81","11.50","7473.06","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,6,3,"medium","36.83","0.00","135.77","11.38","7473.18","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,6,4,"medium","37.45","2.00","133.52","11.25","7472.95","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",5,6,5,"medium","36.60","1.00","136.63","11.74","7473.46","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,6,6,"medium","37.38","1.00","133.76","12.83","7473.06","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,6,7,"medium","37.19","1.00","134.46","15.41","7473.01","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,6,8,"medium","37.51","1.00","133.31","11.63","7472.97","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,6,9,"medium","36.81","2.00","135.83","11.70","7473.21","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",5,6,10,"medium","37.37","2.00","133.78","14.71","7473.00","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","warmup",5,7,1,"complex","240.66","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,7,2,"complex","233.49","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,7,3,"complex","220.12","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,7,4,"complex","229.59","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,7,5,"complex","231.26","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,7,6,"complex","232.68","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,7,7,"complex","226.28","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,7,8,"complex","232.25","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,7,9,"complex","709.83","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,7,10,"complex","213.84","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,7,1,"complex","163.28","5.00","30.62","3.59","7472.98","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",5,7,2,"complex","169.68","5.00","29.47","3.57","7473.09","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",5,7,3,"complex","164.26","5.00","30.44","3.94","7473.25","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",5,7,4,"complex","163.54","5.00","30.57","3.43","7473.16","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",5,7,5,"complex","167.81","6.00","29.79","3.57","7473.23","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",5,7,6,"complex","168.05","4.00","29.75","3.44","7473.08","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,7,7,"complex","166.83","6.00","29.97","3.51","7472.56","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",5,7,8,"complex","162.89","5.00","30.70","3.46","7473.07","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",5,7,9,"complex","162.92","5.00","30.69","3.48","7473.28","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",5,7,10,"complex","163.37","4.00","30.61","3.68","7473.27","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","warmup",5,8,1,"complex","69.87","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,8,2,"complex","59.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,8,3,"complex","59.16","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,8,4,"complex","59.60","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,8,5,"complex","59.27","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,8,6,"complex","58.97","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,8,7,"complex","59.35","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,8,8,"complex","59.70","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,8,9,"complex","59.56","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,8,10,"complex","59.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,8,1,"complex","9.59","0.00","521.46","53.73","7473.31","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 48, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,8,2,"complex","9.45","1.00","529.21","39.85","7473.03","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 48, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,8,3,"complex","9.25","0.00","540.76","49.65","7473.30","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 48, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,8,4,"complex","9.46","1.00","528.55","58.34","7473.09","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 48, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,8,5,"complex","9.30","1.00","537.67","43.00","7473.22","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 48, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,8,6,"complex","9.15","1.00","546.50","40.68","7472.97","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 48, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,8,7,"complex","9.16","1.00","545.88","39.60","7473.53","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 48, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,8,8,"complex","9.24","0.00","541.13","40.62","7473.22","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 48, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",5,8,9,"complex","15.55","1.00","321.59","38.41","7473.38","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 48, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",5,8,10,"complex","9.07","0.00","551.21","44.76","7473.26","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 48, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","warmup",5,9,1,"complex","127.94","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,9,2,"complex","85.67","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,9,3,"complex","85.38","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,9,4,"complex","85.49","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,9,5,"complex","85.77","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,9,6,"complex","85.51","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,9,7,"complex","85.92","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,9,8,"complex","92.67","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,9,9,"complex","85.79","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,9,10,"complex","85.72","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,9,1,"complex","34.87","2.00","143.41","36.17","7474.06","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",5,9,2,"complex","35.56","2.00","140.62","12.97","7474.43","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",5,9,3,"complex","36.49","2.00","137.04","13.87","7474.87","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",5,9,4,"complex","34.76","2.00","143.83","14.89","7474.61","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",5,9,5,"complex","36.70","2.00","136.23","14.63","7474.83","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",5,9,6,"complex","33.85","3.00","147.73","15.68","7474.84","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,9,7,"complex","34.13","3.00","146.49","27.66","7475.01","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,9,8,"complex","81.36","3.00","61.46","6.06","7475.04","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,9,9,"complex","36.65","3.00","136.42","17.41","7475.14","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,9,10,"complex","34.33","2.00","145.63","15.04","7474.76","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","warmup",5,10,1,"very_complex","64.69","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,10,2,"very_complex","58.98","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,10,3,"very_complex","67.08","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,10,4,"very_complex","58.71","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,10,5,"very_complex","58.41","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,10,6,"very_complex","57.97","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,10,7,"very_complex","58.05","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,10,8,"very_complex","58.76","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,10,9,"very_complex","60.02","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,10,10,"very_complex","58.98","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,10,1,"very_complex","7.90","4.00","632.87","66.81","7481.06","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,10,2,"very_complex","8.20","4.00","609.83","71.28","7481.00","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,10,3,"very_complex","8.17","5.00","612.36","75.39","7474.67","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",5,10,4,"very_complex","7.52","5.00","665.29","86.58","7474.23","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",5,10,5,"very_complex","8.49","4.00","588.89","75.15","7474.66","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,10,6,"very_complex","11.96","4.00","417.91","61.74","7474.76","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,10,7,"very_complex","10.37","4.00","482.29","66.52","7475.01","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,10,8,"very_complex","20.56","13.00","243.19","37.77","7475.15","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 13, ""counters"": {}}"
"neo4j","normal","steady",5,10,9,"very_complex","8.26","4.00","605.09","68.61","7474.96","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,10,10,"very_complex","9.23","5.00","541.96","78.48","7475.12","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","warmup",5,11,1,"very_complex","173.68","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,11,2,"very_complex","87.02","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,11,3,"very_complex","84.18","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,11,4,"very_complex","83.54","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,11,5,"very_complex","85.18","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,11,6,"very_complex","84.37","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,11,7,"very_complex","83.68","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,11,8,"very_complex","82.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,11,9,"very_complex","82.91","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,11,10,"very_complex","82.30","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,11,1,"very_complex","31.43","19.00","159.08","37.80","7475.71","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","normal","steady",5,11,2,"very_complex","31.34","18.00","159.56","34.39","7475.89","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","normal","steady",5,11,3,"very_complex","31.88","19.00","156.82","34.10","7475.53","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","normal","steady",5,11,4,"very_complex","31.96","20.00","156.43","37.15","7475.88","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","normal","steady",5,11,5,"very_complex","31.99","20.00","156.30","39.31","7475.63","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","normal","steady",5,11,6,"very_complex","32.76","20.00","152.61","37.48","7475.87","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","normal","steady",5,11,7,"very_complex","31.31","19.00","159.67","35.25","7475.39","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","normal","steady",5,11,8,"very_complex","42.87","24.00","116.63","38.01","7475.62","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","normal","steady",5,11,9,"very_complex","38.45","23.00","130.05","38.48","7475.65","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","normal","steady",5,11,10,"very_complex","31.76","18.00","157.42","33.27","7475.75","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","normal","warmup",5,12,1,"very_complex","63.86","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,12,2,"very_complex","60.38","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,12,3,"very_complex","58.84","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,12,4,"very_complex","58.69","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,12,5,"very_complex","58.75","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,12,6,"very_complex","59.82","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,12,7,"very_complex","58.12","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,12,8,"very_complex","58.29","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,12,9,"very_complex","57.95","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,12,10,"very_complex","58.06","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,12,1,"very_complex","8.14","4.00","614.24","62.32","7475.48","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,12,2,"very_complex","8.23","5.00","607.30","64.35","7475.51","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",5,12,3,"very_complex","8.42","5.00","593.73","63.87","7475.64","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",5,12,4,"very_complex","7.76","3.00","644.13","62.78","7475.63","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",5,12,5,"very_complex","7.34","4.00","680.81","66.45","7476.00","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,12,6,"very_complex","7.58","4.00","660.05","64.79","7475.74","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,12,7,"very_complex","8.52","4.00","587.05","60.23","7475.89","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,12,8,"very_complex","7.99","4.00","625.52","61.86","7475.80","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,12,9,"very_complex","7.87","4.00","635.24","63.61","7475.79","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",5,12,10,"very_complex","7.28","4.00","686.67","65.09","7475.40","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","warmup",5,13,1,"create","94.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,13,2,"create","64.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,13,3,"create","70.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,13,4,"create","63.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,13,5,"create","62.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,13,6,"create","65.11","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,13,7,"create","63.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,13,8,"create","62.76","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,13,9,"create","62.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,13,10,"create","62.62","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,13,1,"create","12.28","0.00","407.24","29.78","7476.29","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1402}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",5,13,2,"create","12.50","0.00","400.11","35.32","7476.54","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1403}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",5,13,3,"create","15.10","0.00","331.05","30.28","7476.47","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1404}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",5,13,4,"create","5.63","0.00","888.35","70.89","7476.41","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1405}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",5,13,5,"create","12.72","0.00","392.95","37.21","7476.48","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1406}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",5,13,6,"create","13.11","0.00","381.36","53.76","7476.61","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1407}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",5,13,7,"create","13.10","0.00","381.73","30.21","7476.53","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1408}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",5,13,8,"create","7.43","0.00","673.14","73.24","7476.41","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1409}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",5,13,9,"create","19.93","0.00","250.83","24.32","7476.72","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1411}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",5,13,10,"create","12.40","1.00","403.21","35.91","7476.35","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1412}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","warmup",5,14,1,"create","60.25","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,14,2,"create","63.02","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,14,3,"create","62.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,14,4,"create","64.36","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,14,5,"create","62.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,14,6,"create","62.75","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,14,7,"create","62.58","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,14,8,"create","62.48","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,14,9,"create","62.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,14,10,"create","62.87","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,14,1,"create","5.44","0.00","919.17","80.96","7476.36","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2060}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,14,2,"create","12.40","0.00","403.10","31.69","7476.78","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2061}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,14,3,"create","13.31","1.00","375.56","41.82","7476.62","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2062}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,14,4,"create","12.19","0.00","410.26","34.17","7476.88","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2063}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,14,5,"create","12.74","0.00","392.54","29.72","7476.61","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2064}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,14,6,"create","12.37","1.00","404.06","36.54","7476.36","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2065}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,14,7,"create","12.41","0.00","402.75","96.85","7477.87","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2066}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,14,8,"create","19.01","1.00","262.97","35.13","7479.21","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2067}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,14,9,"create","12.15","0.00","411.51","31.09","7478.93","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2068}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,14,10,"create","28.34","0.00","176.41","21.09","7479.12","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2069}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","warmup",5,15,1,"create","67.68","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,15,2,"create","63.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,15,3,"create","62.54","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,15,4,"create","62.85","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,15,5,"create","63.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,15,6,"create","55.74","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,15,7,"create","63.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,15,8,"create","62.68","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,15,9,"create","62.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,15,10,"create","71.03","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,15,1,"create","12.37","1.00","404.15","31.39","7479.33","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1539}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",5,15,2,"create","12.65","0.00","395.29","32.97","7479.25","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1540}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",5,15,3,"create","12.28","0.00","407.31","34.15","7479.07","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1541}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",5,15,4,"create","12.29","1.00","406.78","34.54","7479.13","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1542}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",5,15,5,"create","5.71","1.00","875.35","60.06","7479.07","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1543}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",5,15,6,"create","12.42","1.00","402.48","29.68","7479.07","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1544}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",5,15,7,"create","15.00","0.00","333.34","24.39","7479.14","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1545}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",5,15,8,"create","12.07","0.00","414.23","39.97","7479.13","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1546}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",5,15,9,"create","12.33","1.00","405.49","29.79","7479.46","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1547}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",5,15,10,"create","4.81","1.00","1038.59","73.36","7478.90","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1548}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","warmup",5,16,1,"create","73.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,16,2,"create","63.84","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,16,3,"create","63.80","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,16,4,"create","71.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,16,5,"create","64.03","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,16,6,"create","64.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,16,7,"create","63.80","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,16,8,"create","64.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,16,9,"create","63.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,16,10,"create","63.97","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,16,1,"create","18.97","2.00","263.56","25.87","7479.61","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10494}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,16,2,"create","13.21","2.00","378.60","30.72","7479.60","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10495}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,16,3,"create","13.39","2.00","373.54","59.71","7479.41","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10496}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,16,4,"create","6.33","2.00","790.06","71.89","7479.41","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10497}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,16,5,"create","19.26","4.00","259.54","25.60","7479.71","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10498}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,16,6,"create","16.36","1.00","305.59","38.57","7479.35","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10499}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,16,7,"create","13.71","2.00","364.63","31.41","7479.58","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10500}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,16,8,"create","14.59","2.00","342.81","27.85","7479.33","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10501}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,16,9,"create","20.84","2.00","239.94","25.82","7479.76","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10502}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",5,16,10,"create","13.12","1.00","381.04","31.46","7479.60","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10503}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","warmup",5,17,1,"update","921.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,17,2,"update","714.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,17,3,"update","796.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,17,4,"update","536.09","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,17,5,"update","486.49","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,17,6,"update","1365.74","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,17,7,"update","2684.02","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,17,8,"update","524.08","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,17,9,"update","550.42","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,17,10,"update","606.96","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,17,1,"update","698.79","612.00","7.16","38.42","7479.30","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 149}, ""server_ms"": 612, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,17,2,"update","4527.22","4521.00","1.10","42.36","7479.57","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 155}, ""server_ms"": 4521, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,17,3,"update","518.19","511.00","9.65","45.51","7479.76","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 162}, ""server_ms"": 511, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,17,4,"update","626.37","623.00","7.98","38.22","7479.82","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 167}, ""server_ms"": 623, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,17,5,"update","1682.06","1679.00","2.97","39.81","7480.07","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 172}, ""server_ms"": 1679, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,17,6,"update","627.60","575.00","7.97","40.19","7479.51","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 173}, ""server_ms"": 575, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,17,7,"update","474.74","471.00","10.53","41.43","7479.54","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 182}, ""server_ms"": 471, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,17,8,"update","458.40","454.00","10.91","43.57","7479.59","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 186}, ""server_ms"": 454, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,17,9,"update","466.03","421.00","10.73","40.55","7479.51","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 188}, ""server_ms"": 421, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,17,10,"update","449.17","430.00","11.13","41.08","7479.53","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 194}, ""server_ms"": 430, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",5,18,1,"update","67.33","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,18,2,"update","53.68","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,18,3,"update","53.37","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,18,4,"update","53.38","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,18,5,"update","53.63","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,18,6,"update","53.29","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,18,7,"update","55.97","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,18,8,"update","53.04","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,18,9,"update","53.89","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,18,10,"update","53.37","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,18,1,"update","2.86","0.00","1747.46","114.96","7479.78","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,18,2,"update","3.12","0.00","1602.10","107.26","7479.79","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,18,3,"update","3.31","0.00","1511.81","101.68","7479.76","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,18,4,"update","2.87","0.00","1744.77","115.38","7479.69","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,18,5,"update","2.95","0.00","1692.22","120.41","7479.75","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,18,6,"update","3.78","0.00","1322.26","93.45","7479.91","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,18,7,"update","2.94","0.00","1703.23","116.80","7479.77","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,18,8,"update","10.20","0.00","490.01","50.16","7479.75","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,18,9,"update","3.62","0.00","1382.48","104.32","7479.56","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,18,10,"update","3.37","2.00","1485.18","101.56","7479.57","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 41, ""new_rating"": 1}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",5,19,1,"update","73.29","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,19,2,"update","67.39","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,19,3,"update","67.07","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,19,4,"update","73.70","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,19,5,"update","67.76","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,19,6,"update","59.67","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,19,7,"update","67.06","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,19,8,"update","66.64","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,19,9,"update","67.99","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,19,10,"update","66.47","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,19,1,"update","16.53","0.00","302.56","23.29","7479.90","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 41, ""new_quantity"": 155}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,19,2,"update","10.76","4.00","464.83","37.30","7479.88","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 41, ""new_quantity"": 176}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,19,3,"update","9.86","5.00","506.89","40.87","7479.97","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 41, ""new_quantity"": 191}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,19,4,"update","16.74","13.00","298.75","24.65","7479.74","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 41, ""new_quantity"": 209}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,19,5,"update","9.65","7.00","518.14","38.49","7479.73","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 41, ""new_quantity"": 227}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,19,6,"update","18.92","1.00","264.20","18.83","7479.69","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 41, ""new_quantity"": 230}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,19,7,"update","16.70","14.00","299.39","21.17","7479.74","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 41, ""new_quantity"": 257}, ""server_ms"": 14, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,19,8,"update","16.80","9.00","297.56","21.12","7479.48","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 41, ""new_quantity"": 263}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,19,9,"update","16.60","0.00","301.24","22.14","7479.61","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 41, ""new_quantity"": 275}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,19,10,"update","9.52","5.00","525.38","44.36","7479.96","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 41, ""new_quantity"": 299}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",5,20,1,"update","90.89","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,20,2,"update","68.06","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,20,3,"update","73.76","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,20,4,"update","66.87","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,20,5,"update","67.92","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,20,6,"update","59.74","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,20,7,"update","67.51","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,20,8,"update","60.88","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,20,9,"update","64.68","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,20,10,"update","59.54","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,20,1,"update","17.23","13.00","290.17","33.60","7479.95","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,20,2,"update","19.96","12.00","250.54","22.88","7479.56","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,20,3,"update","9.94","3.00","502.89","39.15","7479.85","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,20,4,"update","18.54","9.00","269.65","25.39","7479.63","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,20,5,"update","17.54","0.00","285.12","32.02","7479.95","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,20,6,"update","18.16","13.00","275.30","23.47","7479.84","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,20,7,"update","18.06","0.00","276.83","25.37","7479.94","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,20,8,"update","18.08","0.00","276.54","22.44","7479.68","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,20,9,"update","17.47","9.00","286.23","22.42","7479.96","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",5,20,10,"update","22.44","4.00","222.84","24.75","7480.04","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",5,21,1,"delete","65.33","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,21,2,"delete","63.19","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,21,3,"delete","64.44","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,21,4,"delete","62.21","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,21,5,"delete","62.40","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,21,6,"delete","55.51","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,21,7,"delete","55.03","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,21,8,"delete","62.30","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,21,9,"delete","62.59","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,21,10,"delete","63.83","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,21,1,"delete","14.35","9.00","348.36","56.95","7479.67","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 52}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,21,2,"delete","12.74","10.00","392.57","28.98","7480.10","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 53}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,21,3,"delete","13.01","9.00","384.39","28.10","7479.90","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 54}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,21,4,"delete","13.58","10.00","368.08","28.15","7479.94","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 55}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,21,5,"delete","5.26","2.00","950.01","82.37","7479.84","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 56}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,21,6,"delete","12.91","0.00","387.18","133.45","7477.87","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 57}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",5,21,7,"delete","7.74","6.00","646.39","53.26","7475.85","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 58}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,21,8,"delete","14.18","1.00","352.56","32.99","7475.86","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 59}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",5,21,9,"delete","19.82","2.00","252.22","29.00","7475.99","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 60}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",5,21,10,"delete","12.43","10.00","402.32","34.17","7475.78","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 61}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","warmup",5,22,1,"delete","65.16","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,22,2,"delete","62.92","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,22,3,"delete","56.52","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,22,4,"delete","63.06","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,22,5,"delete","63.27","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,22,6,"delete","63.50","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,22,7,"delete","63.16","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,22,8,"delete","63.58","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,22,9,"delete","64.16","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,22,10,"delete","63.62","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,22,1,"delete","12.44","10.00","401.85","27.41","7476.57","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 51}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,22,2,"delete","11.98","10.00","417.26","27.77","7477.08","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 52}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,22,3,"delete","4.91","2.00","1017.50","307.98","7479.01","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 53}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,22,4,"delete","13.10","1.00","381.57","26.49","7481.51","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 54}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",5,22,5,"delete","12.28","1.00","407.19","27.84","7481.53","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 55}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",5,22,6,"delete","13.18","10.00","379.34","26.56","7481.47","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 56}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,22,7,"delete","12.43","0.00","402.37","29.07","7481.16","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 57}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",5,22,8,"delete","12.19","10.00","410.21","28.49","7481.74","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 58}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,22,9,"delete","13.13","0.00","380.68","28.26","7481.65","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 59}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",5,22,10,"delete","108.80","12.00","45.96","8.02","7483.65","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 60}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","warmup",5,23,1,"delete","71.62","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,23,2,"delete","63.32","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,23,3,"delete","62.45","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,23,4,"delete","62.74","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,23,5,"delete","63.59","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,23,6,"delete","63.83","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,23,7,"delete","62.46","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,23,8,"delete","62.73","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,23,9,"delete","63.37","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,23,10,"delete","62.68","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,23,1,"delete","12.90","0.00","387.74","28.96","7480.49","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 51}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",5,23,2,"delete","5.57","2.00","898.00","64.24","7480.28","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 52}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,23,3,"delete","12.71","1.00","393.27","32.53","7480.50","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 53}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",5,23,4,"delete","13.34","10.00","374.83","26.27","7480.23","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 54}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,23,5,"delete","12.33","1.00","405.47","28.55","7480.63","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 55}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",5,23,6,"delete","12.13","10.00","412.12","35.80","7480.40","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 56}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,23,7,"delete","12.73","10.00","392.66","29.81","7480.56","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 57}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,23,8,"delete","13.62","11.00","367.04","77.54","7481.86","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 58}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,23,9,"delete","14.60","13.00","342.52","24.89","7483.92","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 59}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,23,10,"delete","6.43","4.00","777.12","59.80","7484.02","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 60}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","warmup",5,24,1,"delete","74.08","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,24,2,"delete","65.61","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,24,3,"delete","64.56","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,24,4,"delete","62.63","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,24,5,"delete","63.44","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,24,6,"delete","63.21","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,24,7,"delete","63.04","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,24,8,"delete","64.41","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,24,9,"delete","64.23","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",5,24,10,"delete","56.09","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",5,24,1,"delete","13.77","11.00","363.03","32.42","7483.82","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 51}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,24,2,"delete","10.88","5.00","459.41","45.47","7484.23","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 52}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,24,3,"delete","12.94","1.00","386.49","200.83","7484.15","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 53}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",5,24,4,"delete","14.15","11.00","353.35","27.71","7483.76","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 54}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,24,5,"delete","12.77","1.00","391.69","29.26","7483.88","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 55}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",5,24,6,"delete","6.44","1.00","776.37","57.51","7483.81","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 56}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",5,24,7,"delete","12.67","11.00","394.79","38.91","7483.97","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 57}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,24,8,"delete","12.95","10.00","386.00","30.49","7483.84","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 58}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,24,9,"delete","13.14","11.00","380.65","28.12","7483.81","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 59}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",5,24,10,"delete","5.66","4.00","884.10","66.15","7483.85","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 60}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","warmup",10,1,1,"simple","11128.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,1,2,"simple","11056.30","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,1,3,"simple","10761.99","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,1,4,"simple","10926.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,1,5,"simple","10787.29","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,1,6,"simple","10890.45","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,1,7,"simple","10877.96","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,1,8,"simple","10817.36","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,1,9,"simple","10762.87","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,1,10,"simple","10663.02","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,1,1,"simple","10795.99","566.00","0.93","4.45","7525.47","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 566, ""counters"": {}}"
"neo4j","normal","steady",10,1,2,"simple","10963.28","573.00","0.91","4.84","7525.21","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 573, ""counters"": {}}"
"neo4j","normal","steady",10,1,3,"simple","10792.66","529.00","0.93","4.29","7525.46","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 529, ""counters"": {}}"
"neo4j","normal","steady",10,1,4,"simple","10851.29","583.00","0.92","4.44","7525.58","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 583, ""counters"": {}}"
"neo4j","normal","steady",10,1,5,"simple","10802.82","530.00","0.93","4.40","7525.43","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 530, ""counters"": {}}"
"neo4j","normal","steady",10,1,6,"simple","10754.43","503.00","0.93","4.11","7525.26","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 503, ""counters"": {}}"
"neo4j","normal","steady",10,1,7,"simple","10748.75","556.00","0.93","4.38","7525.54","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 556, ""counters"": {}}"
"neo4j","normal","steady",10,1,8,"simple","10763.76","506.00","0.93","4.11","7525.37","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 506, ""counters"": {}}"
"neo4j","normal","steady",10,1,9,"simple","10761.98","543.00","0.93","4.38","7525.36","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 543, ""counters"": {}}"
"neo4j","normal","steady",10,1,10,"simple","10798.76","556.00","0.93","4.51","7526.18","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 556, ""counters"": {}}"
"neo4j","normal","warmup",10,2,1,"simple","134.97","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,2,2,"simple","126.79","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,2,3,"simple","142.54","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,2,4,"simple","126.31","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,2,5,"simple","125.37","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,2,6,"simple","131.61","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,2,7,"simple","125.34","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,2,8,"simple","126.08","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,2,9,"simple","125.13","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,2,10,"simple","125.53","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,2,1,"simple","73.79","0.00","135.52","6.13","7527.12","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,2,2,"simple","83.83","1.00","119.29","5.22","7526.98","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,2,3,"simple","74.94","1.00","133.44","5.55","7526.64","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,2,4,"simple","79.88","0.00","125.18","5.25","7527.30","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,2,5,"simple","74.31","0.00","134.57","6.37","7527.22","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,2,6,"simple","77.06","1.00","129.77","5.49","7527.05","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,2,7,"simple","75.84","0.00","131.86","5.45","7527.20","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,2,8,"simple","78.26","0.00","127.78","5.61","7526.84","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,2,9,"simple","75.33","0.00","132.74","9.28","7527.11","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,2,10,"simple","75.57","1.00","132.33","5.69","7527.15","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",10,3,1,"simple","340.44","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,3,2,"simple","331.42","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,3,3,"simple","327.03","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,3,4,"simple","338.26","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,3,5,"simple","326.68","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,3,6,"simple","323.32","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,3,7,"simple","342.30","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,3,8,"simple","328.35","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,3,9,"simple","336.65","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,3,10,"simple","335.74","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,3,1,"simple","278.91","3.00","35.85","2.72","7527.19","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 62, ""user_id"": 42, ""street"": ""Kordula-Kade-Ring 7"", ""city"": ""Wurzen"", ""zip"": ""90099"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",10,3,2,"simple","277.71","3.00","36.01","3.02","7526.79","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 62, ""user_id"": 42, ""street"": ""Kordula-Kade-Ring 7"", ""city"": ""Wurzen"", ""zip"": ""90099"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",10,3,3,"simple","277.98","4.00","35.97","2.83","7527.30","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 62, ""user_id"": 42, ""street"": ""Kordula-Kade-Ring 7"", ""city"": ""Wurzen"", ""zip"": ""90099"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",10,3,4,"simple","281.07","2.00","35.58","2.88","7527.29","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 62, ""user_id"": 42, ""street"": ""Kordula-Kade-Ring 7"", ""city"": ""Wurzen"", ""zip"": ""90099"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,3,5,"simple","314.47","3.00","31.80","2.49","7527.18","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 62, ""user_id"": 42, ""street"": ""Kordula-Kade-Ring 7"", ""city"": ""Wurzen"", ""zip"": ""90099"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",10,3,6,"simple","276.50","3.00","36.17","2.84","7527.01","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 62, ""user_id"": 42, ""street"": ""Kordula-Kade-Ring 7"", ""city"": ""Wurzen"", ""zip"": ""90099"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",10,3,7,"simple","283.03","4.00","35.33","2.87","7527.14","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 62, ""user_id"": 42, ""street"": ""Kordula-Kade-Ring 7"", ""city"": ""Wurzen"", ""zip"": ""90099"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",10,3,8,"simple","272.43","3.00","36.71","2.77","7527.06","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 62, ""user_id"": 42, ""street"": ""Kordula-Kade-Ring 7"", ""city"": ""Wurzen"", ""zip"": ""90099"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",10,3,9,"simple","274.74","5.00","36.40","2.96","7527.09","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 62, ""user_id"": 42, ""street"": ""Kordula-Kade-Ring 7"", ""city"": ""Wurzen"", ""zip"": ""90099"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",10,3,10,"simple","295.06","3.00","33.89","2.60","7527.15","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 62, ""user_id"": 42, ""street"": ""Kordula-Kade-Ring 7"", ""city"": ""Wurzen"", ""zip"": ""90099"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","warmup",10,4,1,"medium","15372.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,4,2,"medium","8584.09","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,4,3,"medium","8061.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,4,4,"medium","5437.50","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,4,5,"medium","4409.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,4,6,"medium","2959.76","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,4,7,"medium","2774.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,4,8,"medium","3270.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,4,9,"medium","3185.81","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,4,10,"medium","2516.13","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,4,1,"medium","2458.52","1373.00","4.07","65.26","7618.63","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1373, ""counters"": {}}"
"neo4j","normal","steady",10,4,2,"medium","3538.79","2416.00","2.83","52.10","7620.84","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 2416, ""counters"": {}}"
"neo4j","normal","steady",10,4,3,"medium","2093.04","1068.00","4.78","45.38","7620.79","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1068, ""counters"": {}}"
"neo4j","normal","steady",10,4,4,"medium","4857.89","3705.00","2.06","78.35","7620.78","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 3705, ""counters"": {}}"
"neo4j","normal","steady",10,4,5,"medium","7969.38","7058.00","1.25","70.62","7623.18","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 7058, ""counters"": {}}"
"neo4j","normal","steady",10,4,6,"medium","3228.16","2226.00","3.10","66.50","7625.29","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 2226, ""counters"": {}}"
"neo4j","normal","steady",10,4,7,"medium","2406.56","1364.00","4.16","61.16","7626.03","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1364, ""counters"": {}}"
"neo4j","normal","steady",10,4,8,"medium","2344.91","1379.00","4.26","67.06","7636.55","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1379, ""counters"": {}}"
"neo4j","normal","steady",10,4,9,"medium","2241.66","1211.00","4.46","48.23","7645.84","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 1211, ""counters"": {}}"
"neo4j","normal","steady",10,4,10,"medium","2009.82","899.00","4.98","48.63","7646.25","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 197, ""created_at"": ""2023-09-06T17:30:55.000000000+00:00"", ""updated_at"": ""2024-08-15T02:55:45.000000000+00:00""}, ""server_ms"": 899, ""counters"": {}}"
"neo4j","normal","warmup",10,5,1,"medium","69.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,5,2,"medium","56.79","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,5,3,"medium","56.52","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,5,4,"medium","56.67","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,5,5,"medium","56.56","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,5,6,"medium","56.42","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,5,7,"medium","57.16","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,5,8,"medium","56.79","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,5,9,"medium","56.65","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,5,10,"medium","59.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,5,1,"medium","6.61","1.00","1511.92","109.36","7646.25","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,5,2,"medium","6.22","1.00","1607.87","81.72","7646.57","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,5,3,"medium","6.33","1.00","1579.25","72.96","7646.01","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,5,4,"medium","6.98","2.00","1432.60","71.21","7645.82","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,5,5,"medium","42.04","1.00","237.87","78.59","7646.27","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,5,6,"medium","6.31","1.00","1584.26","92.79","7645.78","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,5,7,"medium","6.72","1.00","1487.81","90.33","7645.94","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,5,8,"medium","7.21","1.00","1387.56","125.11","7645.83","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,5,9,"medium","9.61","1.00","1040.66","53.81","7645.72","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,5,10,"medium","6.28","1.00","1591.27","242.85","7645.99","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[:HAS_ITEM]->(oi:OrderItem)-[:REFERS_TO]->(p:Product)         RETURN                 p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",10,6,1,"medium","123.13","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,6,2,"medium","122.34","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,6,3,"medium","123.79","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,6,4,"medium","122.52","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,6,5,"medium","122.59","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,6,6,"medium","130.87","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,6,7,"medium","121.53","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,6,8,"medium","123.11","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,6,9,"medium","121.98","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,6,10,"medium","127.74","nan","nan","nan","nan","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,6,1,"medium","70.59","0.00","141.65","7.05","7642.74","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,6,2,"medium","76.37","0.00","130.95","6.08","7642.93","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,6,3,"medium","70.94","1.00","140.97","8.42","7642.60","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,6,4,"medium","72.14","0.00","138.62","5.90","7642.61","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,6,5,"medium","76.17","0.00","131.29","7.64","7643.06","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,6,6,"medium","71.27","1.00","140.30","5.91","7642.94","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,6,7,"medium","77.97","0.00","128.25","5.70","7642.56","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,6,8,"medium","72.23","0.00","138.45","20.32","7645.88","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,6,9,"medium","69.98","1.00","142.90","5.89","7644.04","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,6,10,"medium","72.25","1.00","138.42","6.75","7644.18","690.86","         MATCH (r:Review)         RETURN r.id         AS id,                r.user_id    AS user_id,                r.product_id AS product_id,                r.rating     AS rating,                r.created_at AS created_at         ORDER BY created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 105, ""user_id"": 407, ""product_id"": 1400431, ""rating"": 2, ""created_at"": ""2025-07-12T08:59:52.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","warmup",10,7,1,"complex","399.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,7,2,"complex","384.96","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,7,3,"complex","373.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,7,4,"complex","384.13","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,7,5,"complex","379.25","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,7,6,"complex","382.49","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,7,7,"complex","379.35","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,7,8,"complex","393.01","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,7,9,"complex","379.76","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,7,10,"complex","386.35","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,7,1,"complex","324.12","5.00","30.85","4.14","7645.50","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",10,7,2,"complex","340.28","6.00","29.39","3.89","7645.71","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",10,7,3,"complex","322.52","11.00","31.01","4.07","7645.43","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","normal","steady",10,7,4,"complex","337.92","7.00","29.59","11.27","7652.43","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","normal","steady",10,7,5,"complex","326.99","6.00","30.58","3.98","7656.74","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",10,7,6,"complex","328.46","6.00","30.45","4.37","7653.49","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",10,7,7,"complex","325.84","5.00","30.69","4.87","7644.65","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",10,7,8,"complex","328.08","5.00","30.48","3.64","7645.74","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",10,7,9,"complex","321.45","6.00","31.11","3.55","7645.58","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",10,7,10,"complex","327.82","13.00","30.50","3.38","7645.95","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH o, SUM(oi.quantity * oi.price) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-03-30T16:52:29.000000000+00:00"", ""total"": 84.14999771118164}, ""server_ms"": 13, ""counters"": {}}"
"neo4j","normal","warmup",10,8,1,"complex","75.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,8,2,"complex","65.73","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,8,3,"complex","65.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,8,4,"complex","65.86","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,8,5,"complex","66.74","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,8,6,"complex","65.65","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,8,7,"complex","69.14","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,8,8,"complex","69.81","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,8,9,"complex","66.27","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,8,10,"complex","67.11","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,8,1,"complex","15.91","1.00","628.62","37.95","7645.82","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 40, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","normal","steady",10,8,2,"complex","16.05","2.00","622.91","33.88","7645.54","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 40, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,8,3,"complex","15.91","2.00","628.41","31.87","7645.56","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 40, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,8,4,"complex","16.96","2.00","589.57","37.16","7645.68","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 40, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,8,5,"complex","16.49","0.00","606.41","31.01","7645.65","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 40, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","normal","steady",10,8,6,"complex","16.07","6.00","622.36","35.23","7645.76","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 40, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","steady",10,8,7,"complex","16.20","2.00","617.17","35.19","7645.76","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 40, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,8,8,"complex","16.28","2.00","614.08","46.72","7645.38","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 40, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,8,9,"complex","15.52","2.00","644.22","30.12","7645.39","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 40, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,8,10,"complex","16.83","2.00","594.26","27.96","7645.40","690.86","         MATCH (p:Product)<-[:REVIEWS]-(r:Review)         WITH p, AVG(r.rating) AS avg_rating         WHERE avg_rating > 4         RETURN p.id        AS id,                p.name      AS name,                avg_rating  AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 40, ""first"": {""id"": 12248, ""name"": ""Fitbit Versa 3 Health & Fitness Smartwatch with 6-months Premium Membership Included, Built-in GPS, Daily Readiness Score and up to 6+ Days Battery"", ""avg_rating"": 5.0}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","warmup",10,9,1,"complex","129.13","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,9,2,"complex","116.92","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,9,3,"complex","135.12","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,9,4,"complex","120.62","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,9,5,"complex","134.54","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,9,6,"complex","122.00","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,9,7,"complex","119.29","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,9,8,"complex","116.65","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,9,9,"complex","121.33","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,9,10,"complex","115.74","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,9,1,"complex","72.33","3.00","138.26","16.18","7646.76","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",10,9,2,"complex","66.85","3.00","149.59","10.19","7647.09","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",10,9,3,"complex","64.55","3.00","154.92","10.31","7646.63","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",10,9,4,"complex","69.06","3.00","144.81","11.22","7646.93","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",10,9,5,"complex","67.50","5.00","148.15","11.05","7647.17","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",10,9,6,"complex","67.14","2.00","148.94","8.91","7646.80","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,9,7,"complex","66.07","2.00","151.36","10.13","7646.96","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,9,8,"complex","66.28","3.00","150.88","9.06","7647.04","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","normal","steady",10,9,9,"complex","74.89","2.00","133.54","9.71","7647.03","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","normal","steady",10,9,10,"complex","72.32","7.00","138.28","15.21","7647.01","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         WHERE orders_last_30d > 0         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 284, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","normal","warmup",10,10,1,"very_complex","67.38","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,10,2,"very_complex","62.16","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,10,3,"very_complex","60.44","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,10,4,"very_complex","60.92","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,10,5,"very_complex","66.86","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,10,6,"very_complex","73.75","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,10,7,"very_complex","65.91","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,10,8,"very_complex","68.95","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,10,9,"very_complex","61.85","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,10,10,"very_complex","63.57","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,10,1,"very_complex","10.96","5.00","912.12","71.98","7646.88","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",10,10,2,"very_complex","13.05","5.00","766.32","67.85","7646.84","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",10,10,3,"very_complex","11.76","5.00","850.33","69.18","7647.19","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",10,10,4,"very_complex","10.70","5.00","934.74","68.74","7647.14","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",10,10,5,"very_complex","13.68","8.00","730.99","64.58","7646.88","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 8, ""counters"": {}}"
"neo4j","normal","steady",10,10,6,"very_complex","10.55","4.00","947.69","67.04","7647.09","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",10,10,7,"very_complex","10.17","4.00","982.85","70.87","7646.90","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",10,10,8,"very_complex","11.93","4.00","838.21","61.27","7647.35","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",10,10,9,"very_complex","10.36","5.00","965.53","70.09","7647.06","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","normal","steady",10,10,10,"very_complex","12.81","6.00","780.35","61.14","7646.95","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi1:OrderItem)         WITH oi1.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1 // tiebreak = product_id         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS rec_id ,         COUNT(*) AS freq         ORDER BY freq DESC , rec_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""rec_id"": 332242, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","normal","warmup",10,11,1,"very_complex","233.92","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,11,2,"very_complex","101.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,11,3,"very_complex","98.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,11,4,"very_complex","96.00","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,11,5,"very_complex","98.52","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,11,6,"very_complex","95.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,11,7,"very_complex","100.45","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,11,8,"very_complex","96.07","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,11,9,"very_complex","98.31","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,11,10,"very_complex","118.70","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,11,1,"very_complex","43.98","20.00","227.39","44.29","7647.13","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","normal","steady",10,11,2,"very_complex","45.09","21.00","221.79","45.13","7647.02","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","normal","steady",10,11,3,"very_complex","43.96","18.00","227.48","45.13","7647.29","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 18, ""counters"": {}}"
"neo4j","normal","steady",10,11,4,"very_complex","44.58","20.00","224.34","45.71","7646.92","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","normal","steady",10,11,5,"very_complex","48.78","19.00","205.01","44.40","7647.04","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","normal","steady",10,11,6,"very_complex","47.97","22.00","208.45","41.31","7647.23","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","normal","steady",10,11,7,"very_complex","44.21","21.00","226.20","44.32","7647.01","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","normal","steady",10,11,8,"very_complex","43.62","20.00","229.26","43.39","7647.27","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","normal","steady",10,11,9,"very_complex","45.05","20.00","221.98","45.15","7647.15","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","normal","steady",10,11,10,"very_complex","61.77","23.00","161.89","45.72","7647.32","690.86","         MATCH (o:Order)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p1:Product)         MATCH (o)-[:HAS_ITEM]->(:OrderItem)-[:REFERS_TO]->(p2:Product)         WHERE  p1.id < p2.id                          // Duplikate & Selbstpaare vermeiden          WITH p1, p2, COUNT(DISTINCT o) AS co_orders   // ⇦ wie SQL: DISTINCT order_id         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 89, ""prodB"": 1237047, ""co_orders"": 1}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","normal","warmup",10,12,1,"very_complex","77.84","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,12,2,"very_complex","67.25","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,12,3,"very_complex","71.09","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,12,4,"very_complex","71.61","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,12,5,"very_complex","66.45","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,12,6,"very_complex","69.96","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,12,7,"very_complex","69.50","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,12,8,"very_complex","70.30","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,12,9,"very_complex","74.48","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,12,10,"very_complex","68.38","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,12,1,"very_complex","16.66","8.00","600.41","49.38","7647.08","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 8, ""counters"": {}}"
"neo4j","normal","steady",10,12,2,"very_complex","25.66","4.00","389.65","54.00","7647.04","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","normal","steady",10,12,3,"very_complex","33.28","29.00","300.48","74.86","7647.16","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 29, ""counters"": {}}"
"neo4j","normal","steady",10,12,4,"very_complex","29.07","23.00","343.98","90.31","7647.13","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","normal","steady",10,12,5,"very_complex","73.67","64.00","135.75","82.15","7647.10","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 64, ""counters"": {}}"
"neo4j","normal","steady",10,12,6,"very_complex","33.92","23.00","294.78","78.99","7647.09","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","normal","steady",10,12,7,"very_complex","32.27","20.00","309.85","120.52","7648.38","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","normal","steady",10,12,8,"very_complex","29.09","20.00","343.75","76.92","7647.12","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","normal","steady",10,12,9,"very_complex","27.43","19.00","364.61","75.09","7644.62","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","normal","steady",10,12,10,"very_complex","31.72","23.00","315.22","67.05","7644.67","690.86","         MATCH (:Order)-[:HAS_ITEM]->(oi:OrderItem)         WITH oi.product_id AS prod , COUNT(*) AS freq         ORDER BY freq DESC , prod LIMIT 1         WITH prod AS top_prod         MATCH (u:User)-[:PLACED]->(:Order)-[:HAS_ITEM]->(:OrderItem {product_id: top_prod})         WITH DISTINCT u , top_prod         MATCH (u)-[:PLACED]->(:Order)-[:HAS_ITEM]->(oi2:OrderItem)         WHERE oi2.product_id <> top_prod         RETURN oi2.product_id AS product_id ,         COUNT(*) AS freq         ORDER BY freq DESC , product_id         LIMIT 100;         ","{""rows"": 11, ""first"": {""product_id"": 332242, ""freq"": 1}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","normal","warmup",10,13,1,"create","97.20","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,13,2,"create","69.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,13,3,"create","64.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,13,4,"create","73.17","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,13,5,"create","91.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,13,6,"create","65.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,13,7,"create","65.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,13,8,"create","65.00","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,13,9,"create","66.17","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,13,10,"create","65.95","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,13,1,"create","14.88","2.00","671.89","57.82","7647.51","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1424}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",10,13,2,"create","14.51","10.00","689.00","75.79","7647.86","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1426}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",10,13,3,"create","16.41","2.00","609.40","47.56","7647.76","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1427}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",10,13,4,"create","16.18","2.00","617.96","79.63","7647.85","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1428}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",10,13,5,"create","14.11","1.00","708.66","65.26","7648.13","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1429}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",10,13,6,"create","17.43","1.00","573.71","39.35","7647.72","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1430}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",10,13,7,"create","14.98","2.00","667.59","41.32","7647.80","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1431}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",10,13,8,"create","20.98","8.00","476.58","36.15","7647.76","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1432}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",10,13,9,"create","15.17","2.00","659.27","38.47","7648.00","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1433}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","steady",10,13,10,"create","27.98","1.00","357.46","62.01","7649.61","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {         id: new_id ,         street: 'Foo' ,         city: 'Bar City' ,         zip: '12345' ,         country: 'DE' ,         is_primary:false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1434}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","normal","warmup",10,14,1,"create","69.87","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,14,2,"create","66.48","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,14,3,"create","65.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,14,4,"create","59.27","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,14,5,"create","65.36","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,14,6,"create","72.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,14,7,"create","67.49","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,14,8,"create","70.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,14,9,"create","66.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,14,10,"create","65.94","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,14,1,"create","15.10","2.00","662.20","42.83","7645.37","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2082}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,14,2,"create","11.55","2.00","865.61","53.84","7645.37","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2083}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,14,3,"create","17.76","1.00","563.04","46.87","7645.21","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2085}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,14,4,"create","18.62","2.00","536.92","36.07","7645.20","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2086}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,14,5,"create","15.54","2.00","643.67","38.34","7645.06","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2087}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,14,6,"create","18.18","6.00","549.95","48.45","7645.99","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2088}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,14,7,"create","15.33","2.00","652.35","43.53","7645.97","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2089}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,14,8,"create","15.89","3.00","629.51","36.86","7646.21","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2090}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,14,9,"create","15.32","7.00","652.87","49.83","7646.40","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2091}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,14,10,"create","16.33","2.00","612.44","36.37","7646.03","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {         id: new_id ,         status:'pending' ,         total: 0.0 ,         created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2092}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","warmup",10,15,1,"create","68.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,15,2,"create","65.16","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,15,3,"create","64.79","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,15,4,"create","64.83","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,15,5,"create","116.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,15,6,"create","65.32","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,15,7,"create","66.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,15,8,"create","66.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,15,9,"create","65.66","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,15,10,"create","64.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,15,1,"create","9.00","1.00","1111.52","67.47","7647.01","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1560}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",10,15,2,"create","14.65","1.00","682.40","68.84","7646.73","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1561}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",10,15,3,"create","18.82","2.00","531.43","69.95","7647.54","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1562}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",10,15,4,"create","15.42","4.00","648.43","37.69","7648.44","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1563}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",10,15,5,"create","16.09","1.00","621.47","34.37","7648.46","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1564}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",10,15,6,"create","10.21","2.00","979.36","67.95","7648.74","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1565}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",10,15,7,"create","12.03","5.00","831.50","64.23","7648.64","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1567}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",10,15,8,"create","16.63","1.00","601.17","33.41","7648.55","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1568}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",10,15,9,"create","20.29","1.00","492.89","45.07","7648.17","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1569}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","steady",10,15,10,"create","9.61","1.00","1040.84","59.79","7648.23","690.86","         OPTIONAL MATCH (ci:CartItem)         WITH coalesce(max(ci.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (ci:CartItem {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         quantity: 2 ,         added_at: datetime()         })         CREATE (u)-[:HAS_IN_CART]->(ci)         CREATE (ci)-[:CART_PRODUCT]->(p)         RETURN ci.id AS cart_item_id;         ","{""rows"": 1, ""first"": {""cart_item_id"": 1570}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 5}}"
"neo4j","normal","warmup",10,16,1,"create","88.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,16,2,"create","77.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,16,3,"create","64.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,16,4,"create","70.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,16,5,"create","73.50","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,16,6,"create","75.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,16,7,"create","101.83","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,16,8,"create","70.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,16,9,"create","66.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,16,10,"create","66.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,16,1,"create","11.66","6.00","857.98","60.88","7648.29","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10515}, ""server_ms"": 6, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,16,2,"create","15.13","3.00","661.03","41.16","7648.30","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10516}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,16,3,"create","11.56","3.00","864.98","55.88","7648.57","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10517}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,16,4,"create","15.61","9.00","640.50","50.93","7648.29","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10519}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,16,5,"create","115.90","3.00","86.28","14.88","7652.64","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10520}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,16,6,"create","15.52","3.00","644.16","43.22","7656.98","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10522}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,16,7,"create","15.11","3.00","662.03","48.06","7656.61","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10523}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,16,8,"create","14.27","3.00","700.80","43.69","7656.97","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10524}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,16,9,"create","14.45","4.00","692.19","45.82","7656.69","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10525}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","steady",10,16,10,"create","14.89","2.00","671.81","41.00","7656.87","690.86","         OPTIONAL MATCH (pv:ProductView)         WITH coalesce(max(pv.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (pv:ProductView {         id: new_id ,         user_id: u.id ,         product_id: p.id ,         viewed_at: datetime()         })         CREATE (u)-[:VIEWED]->(pv)         CREATE (pv)-[:VIEWED_PRODUCT]->(p)         RETURN pv.id AS product_view_id;         ","{""rows"": 1, ""first"": {""product_view_id"": 10526}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 2, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","normal","warmup",10,17,1,"update","2697.93","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,17,2,"update","2786.80","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,17,3,"update","2874.93","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,17,4,"update","1516.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,17,5,"update","811.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,17,6,"update","727.75","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,17,7,"update","559.22","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,17,8,"update","573.42","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,17,9,"update","648.57","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,17,10,"update","548.27","nan","nan","nan","nan","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,17,1,"update","1007.03","963.00","9.93","81.10","7657.15","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 302}, ""server_ms"": 963, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,17,2,"update","787.86","735.00","12.69","78.79","7657.16","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 310}, ""server_ms"": 735, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,17,3,"update","540.22","518.00","18.51","79.82","7657.04","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 323}, ""server_ms"": 518, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,17,4,"update","497.76","458.00","20.09","78.31","7657.15","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 330}, ""server_ms"": 458, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,17,5,"update","594.14","590.00","16.83","78.36","7656.80","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 346}, ""server_ms"": 590, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,17,6,"update","654.20","516.00","15.29","70.78","7657.02","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 353}, ""server_ms"": 516, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,17,7,"update","612.44","577.00","16.33","76.00","7657.00","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 365}, ""server_ms"": 577, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,17,8,"update","503.39","459.00","19.87","78.69","7657.11","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 372}, ""server_ms"": 459, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,17,9,"update","548.33","521.00","18.24","78.67","7656.92","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 385}, ""server_ms"": 521, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,17,10,"update","508.11","491.00","19.68","77.81","7656.84","690.86","         MATCH (p:Product)         WITH p ORDER BY p.id LIMIT 1         SET p.stock = coalesce(p.stock,0) + 1         RETURN p.id AS product_id,         p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 394}, ""server_ms"": 491, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",10,18,1,"update","68.03","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,18,2,"update","55.20","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,18,3,"update","55.30","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,18,4,"update","55.31","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,18,5,"update","55.39","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,18,6,"update","55.26","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,18,7,"update","55.16","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,18,8,"update","54.47","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,18,9,"update","55.00","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,18,10,"update","55.23","nan","nan","nan","nan","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,18,1,"update","4.81","1.00","2077.79","69.56","7656.92","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 62, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,18,2,"update","5.77","0.00","1731.90","157.71","7657.15","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 62, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,18,3,"update","5.34","1.00","1871.47","63.77","7656.88","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 62, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,18,4,"update","4.86","1.00","2058.71","85.16","7656.83","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 62, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,18,5,"update","4.92","1.00","2031.82","106.66","7657.02","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 62, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,18,6,"update","4.66","0.00","2145.69","72.22","7657.07","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 62, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,18,7,"update","4.76","0.00","2102.39","69.91","7656.83","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 62, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,18,8,"update","4.79","0.00","2089.86","69.00","7657.07","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 62, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,18,9,"update","4.69","0.00","2130.02","72.62","7657.30","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 62, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,18,10,"update","4.84","0.00","2065.26","71.46","7656.84","690.86","         MATCH (r:Review) WITH r LIMIT 1         SET   r.rating = CASE                             WHEN toInteger(r.rating) > 1                             THEN toInteger(r.rating) - 1                             ELSE 1                         END         RETURN r.id     AS review_id,             r.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_id"": 62, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",10,19,1,"update","80.06","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,19,2,"update","74.04","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,19,3,"update","74.21","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,19,4,"update","75.42","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,19,5,"update","73.61","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,19,6,"update","73.30","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,19,7,"update","73.81","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,19,8,"update","73.34","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,19,9,"update","81.06","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,19,10,"update","73.24","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,19,1,"update","21.64","7.00","462.10","18.59","7657.15","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 61, ""new_quantity"": 307}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,19,2,"update","22.86","9.00","437.37","20.33","7656.93","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 61, ""new_quantity"": 337}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,19,3,"update","23.41","1.00","427.22","18.11","7657.12","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 61, ""new_quantity"": 364}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,19,4,"update","22.86","0.00","437.45","21.87","7657.11","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 61, ""new_quantity"": 394}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,19,5,"update","25.12","11.00","398.07","20.12","7656.86","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 61, ""new_quantity"": 427}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,19,6,"update","24.15","1.00","414.06","37.16","7657.13","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 61, ""new_quantity"": 454}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,19,7,"update","22.88","10.00","437.09","17.51","7657.06","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 61, ""new_quantity"": 487}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,19,8,"update","15.10","0.00","662.09","26.37","7656.90","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 61, ""new_quantity"": 514}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,19,9,"update","23.10","1.00","432.88","18.22","7657.13","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 61, ""new_quantity"": 544}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,19,10,"update","26.22","0.00","381.41","24.02","7657.30","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id       /* deterministisch: kleinste id */         LIMIT 1         SET   ci.quantity = coalesce(toInteger(ci.quantity), 0) + 3         RETURN ci.id       AS cart_item_id,             ci.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_item_id"": 61, ""new_quantity"": 574}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",10,20,1,"update","94.47","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,20,2,"update","81.97","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,20,3,"update","79.33","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,20,4,"update","72.18","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,20,5,"update","73.19","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,20,6,"update","72.83","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,20,7,"update","74.28","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,20,8,"update","69.07","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,20,9,"update","66.89","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,20,10,"update","77.02","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,20,1,"update","16.80","0.00","595.18","24.29","7656.96","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,20,2,"update","22.71","0.00","440.24","16.91","7657.34","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,20,3,"update","23.16","9.00","431.75","21.16","7657.52","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,20,4,"update","27.59","9.00","362.49","15.73","7657.10","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,20,5,"update","22.64","0.00","441.79","17.15","7656.82","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,20,6,"update","24.80","0.00","403.31","16.59","7657.15","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,20,7,"update","16.77","0.00","596.36","22.82","7657.25","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,20,8,"update","22.99","0.00","434.91","16.41","7657.13","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,20,9,"update","27.09","0.00","369.11","15.30","7656.94","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","steady",10,20,10,"update","23.90","0.00","418.46","19.72","7657.44","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,             u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""nkostolzin@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","normal","warmup",10,21,1,"delete","79.92","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,21,2,"delete","63.53","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,21,3,"delete","74.25","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,21,4,"delete","62.87","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,21,5,"delete","63.68","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,21,6,"delete","63.26","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,21,7,"delete","63.20","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,21,8,"delete","63.43","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,21,9,"delete","63.08","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,21,10,"delete","63.39","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,21,1,"delete","12.68","1.00","788.78","31.81","7657.03","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 73}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",10,21,2,"delete","12.35","10.00","809.70","30.67","7657.15","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 74}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,21,3,"delete","12.62","1.00","792.49","32.29","7657.09","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 75}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",10,21,4,"delete","20.83","19.00","480.15","21.92","7657.22","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 76}, ""server_ms"": 19, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,21,5,"delete","5.76","2.00","1734.85","66.01","7657.15","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 77}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,21,6,"delete","11.96","1.00","835.90","31.56","7657.17","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 79}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","steady",10,21,7,"delete","13.84","11.00","722.35","30.83","7657.26","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 80}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,21,8,"delete","13.90","11.00","719.46","28.62","7657.16","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 81}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,21,9,"delete","12.69","9.00","788.07","32.98","7657.11","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 82}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,21,10,"delete","12.74","0.00","784.67","30.12","7657.42","690.86","         MATCH (a:Address)         WITH a ORDER BY a.id ASC         LIMIT 1         WITH a.id    AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 83}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","normal","warmup",10,22,1,"delete","66.18","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,22,2,"delete","63.47","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,22,3,"delete","57.15","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,22,4,"delete","63.71","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,22,5,"delete","63.92","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,22,6,"delete","63.25","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,22,7,"delete","64.94","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,22,8,"delete","64.70","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,22,9,"delete","57.12","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,22,10,"delete","56.68","nan","nan","nan","nan","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,22,1,"delete","12.31","1.00","812.64","29.76","7657.04","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 74}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,22,2,"delete","13.00","0.00","769.15","28.93","7657.45","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 75}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,22,3,"delete","6.31","0.00","1584.86","59.98","7657.17","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 76}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,22,4,"delete","13.45","10.00","743.25","27.26","7657.54","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 78}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,22,5,"delete","5.86","2.00","1706.89","83.41","7657.58","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 79}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,22,6,"delete","12.90","1.00","774.91","27.58","7657.46","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 81}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,22,7,"delete","11.91","0.00","839.71","29.80","7657.50","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 82}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,22,8,"delete","5.99","4.00","1669.31","61.05","7657.52","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 83}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,22,9,"delete","14.09","10.00","709.71","25.37","7657.38","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 85}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,22,10,"delete","13.12","0.00","762.21","27.10","7657.28","690.86","         MATCH (r:Review)         WITH r ORDER BY r.id ASC         LIMIT 1         WITH r.id AS deleted_review_id, r         DETACH DELETE r         RETURN deleted_review_id;         ","{""rows"": 1, ""first"": {""deleted_review_id"": 86}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","warmup",10,23,1,"delete","57.51","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,23,2,"delete","57.36","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,23,3,"delete","62.34","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,23,4,"delete","63.80","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,23,5,"delete","64.07","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,23,6,"delete","65.05","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,23,7,"delete","63.23","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,23,8,"delete","63.74","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,23,9,"delete","63.06","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,23,10,"delete","63.59","nan","nan","nan","nan","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,23,1,"delete","14.32","1.00","698.09","26.36","7657.50","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 73}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,23,2,"delete","13.33","1.00","750.20","28.76","7657.50","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 74}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,23,3,"delete","13.35","10.00","748.81","28.40","7657.60","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 75}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,23,4,"delete","6.17","0.00","1621.61","60.95","7657.47","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 76}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,23,5,"delete","12.52","10.00","798.90","29.97","7657.59","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 78}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,23,6,"delete","12.76","10.00","783.88","29.72","7657.41","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 79}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,23,7,"delete","13.30","1.00","751.87","29.16","7657.60","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 80}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,23,8,"delete","6.24","0.00","1602.38","59.92","7657.82","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 81}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,23,9,"delete","13.39","0.00","746.99","28.23","7657.66","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 83}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,23,10,"delete","6.82","4.00","1466.62","130.08","7657.54","690.86","         MATCH (ci:CartItem)         WITH ci ORDER BY ci.id ASC         LIMIT 1         WITH ci.id AS deleted_cart_item_id, ci         DETACH DELETE ci         RETURN deleted_cart_item_id;         ","{""rows"": 1, ""first"": {""deleted_cart_item_id"": 84}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","warmup",10,24,1,"delete","82.12","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,24,2,"delete","63.26","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,24,3,"delete","64.43","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,24,4,"delete","64.02","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,24,5,"delete","65.11","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,24,6,"delete","57.80","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,24,7,"delete","64.17","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,24,8,"delete","62.50","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,24,9,"delete","63.58","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","warmup",10,24,10,"delete","59.97","nan","nan","nan","nan","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""note"": ""warmup""}"
"neo4j","normal","steady",10,24,1,"delete","12.68","1.00","788.46","36.84","7657.68","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 72}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,24,2,"delete","12.88","1.00","776.33","34.10","7657.31","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 73}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,24,3,"delete","9.05","7.00","1104.50","47.66","7657.80","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 74}, ""server_ms"": 7, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,24,4,"delete","13.11","11.00","763.03","33.88","7657.76","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 75}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,24,5,"delete","12.84","11.00","778.67","40.81","7657.78","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 76}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,24,6,"delete","14.28","1.00","700.11","33.12","7657.85","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 77}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,24,7,"delete","6.31","3.00","1584.53","67.05","7657.45","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 78}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","normal","steady",10,24,8,"delete","13.47","1.00","742.17","32.31","7664.70","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 79}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,24,9,"delete","14.22","1.00","703.38","31.25","7654.83","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 80}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 2}}"
"neo4j","normal","steady",10,24,10,"delete","12.81","10.00","780.90","36.38","7655.07","690.86","         MATCH (pp:ProductPurchase)         WITH pp ORDER BY pp.id ASC         LIMIT 1         WITH pp.id AS deleted_purchase_id, pp         DETACH DELETE pp         RETURN deleted_purchase_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_id"": 81}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
