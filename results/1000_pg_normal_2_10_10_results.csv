"db","mode","phase","concurrency","query_no","repeat","complexity","duration_ms","server_ms","qps","avg_cpu","avg_mem","disk_mb","statement","result"
"postgres","normal","warmup",1,1,1,"simple","77.52","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,1,2,"simple","73.24","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,1,3,"simple","69.91","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,1,4,"simple","69.04","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,1,5,"simple","69.20","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,1,6,"simple","69.33","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,1,7,"simple","68.88","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,1,8,"simple","68.80","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,1,9,"simple","70.52","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,1,10,"simple","70.53","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","steady",1,1,1,"simple","18.97","2.24","52.71","25.22","2427.21","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,1,2,"simple","21.62","2.19","46.26","110.36","2437.86","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,1,3,"simple","21.35","2.21","46.83","109.09","2447.18","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,1,4,"simple","18.33","2.20","54.54","17.92","2444.01","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,1,5,"simple","19.55","2.17","51.16","17.44","2444.06","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,1,6,"simple","21.49","2.18","46.54","16.54","2444.22","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,1,7,"simple","19.41","2.23","51.52","17.41","2443.67","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,1,8,"simple","18.64","2.19","53.63","18.41","2443.67","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,1,9,"simple","21.31","2.22","46.92","16.78","2444.03","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,1,10,"simple","19.05","2.18","52.51","18.38","2444.05","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","warmup",1,2,1,"simple","51.34","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,2,2,"simple","50.95","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,2,3,"simple","51.19","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,2,4,"simple","51.35","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,2,5,"simple","51.21","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,2,6,"simple","51.28","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,2,7,"simple","51.44","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,2,8,"simple","51.30","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,2,9,"simple","51.24","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,2,10,"simple","51.40","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","steady",1,2,1,"simple","1.01","0.07","988.92","302.13","2443.95","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",1,2,2,"simple","0.96","0.07","1045.92","280.87","2444.02","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",1,2,3,"simple","0.94","0.07","1068.72","282.96","2444.08","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",1,2,4,"simple","1.02","0.07","984.35","256.94","2444.19","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",1,2,5,"simple","0.94","0.07","1062.25","287.87","2443.88","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",1,2,6,"simple","0.97","0.07","1030.61","272.88","2443.83","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",1,2,7,"simple","0.96","0.07","1040.15","280.79","2443.92","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",1,2,8,"simple","1.05","0.09","950.12","253.78","2443.61","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",1,2,9,"simple","0.94","0.07","1058.76","276.97","2443.79","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",1,2,10,"simple","0.93","0.07","1075.04","287.86","2444.14","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","warmup",1,3,1,"simple","52.43","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,3,2,"simple","52.02","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,3,3,"simple","52.49","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,3,4,"simple","52.25","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,3,5,"simple","51.79","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,3,6,"simple","52.16","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,3,7,"simple","52.05","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,3,8,"simple","52.17","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,3,9,"simple","52.02","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",1,3,10,"simple","52.26","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","steady",1,3,1,"simple","1.66","0.18","603.50","164.68","2444.16","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [1, 1, ""Jacobi Jäckelgasse 37"", ""Kemnath"", ""90900"", ""Deutschland"", true]}"
"postgres","normal","steady",1,3,2,"simple","1.75","0.20","571.36","155.59","2444.26","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [1, 1, ""Jacobi Jäckelgasse 37"", ""Kemnath"", ""90900"", ""Deutschland"", true]}"
"postgres","normal","steady",1,3,3,"simple","1.75","0.18","571.13","155.88","2444.00","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [1, 1, ""Jacobi Jäckelgasse 37"", ""Kemnath"", ""90900"", ""Deutschland"", true]}"
"postgres","normal","steady",1,3,4,"simple","1.76","0.18","567.44","151.45","2444.25","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [1, 1, ""Jacobi Jäckelgasse 37"", ""Kemnath"", ""90900"", ""Deutschland"", true]}"
"postgres","normal","steady",1,3,5,"simple","1.75","0.20","571.98","153.81","2444.01","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [1, 1, ""Jacobi Jäckelgasse 37"", ""Kemnath"", ""90900"", ""Deutschland"", true]}"
"postgres","normal","steady",1,3,6,"simple","1.79","0.19","558.88","154.60","2443.52","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [1, 1, ""Jacobi Jäckelgasse 37"", ""Kemnath"", ""90900"", ""Deutschland"", true]}"
"postgres","normal","steady",1,3,7,"simple","1.77","0.18","565.42","150.00","2443.92","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [1, 1, ""Jacobi Jäckelgasse 37"", ""Kemnath"", ""90900"", ""Deutschland"", true]}"
"postgres","normal","steady",1,3,8,"simple","1.69","0.18","590.11","158.85","2443.94","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [1, 1, ""Jacobi Jäckelgasse 37"", ""Kemnath"", ""90900"", ""Deutschland"", true]}"
"postgres","normal","steady",1,3,9,"simple","1.82","0.18","550.90","144.71","2444.11","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [1, 1, ""Jacobi Jäckelgasse 37"", ""Kemnath"", ""90900"", ""Deutschland"", true]}"
"postgres","normal","steady",1,3,10,"simple","1.75","0.19","571.53","154.48","2444.08","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [1, 1, ""Jacobi Jäckelgasse 37"", ""Kemnath"", ""90900"", ""Deutschland"", true]}"
"postgres","normal","warmup",1,4,1,"medium","55.03","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,4,2,"medium","53.72","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,4,3,"medium","53.97","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,4,4,"medium","53.76","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,4,5,"medium","53.42","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,4,6,"medium","53.51","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,4,7,"medium","53.46","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,4,8,"medium","53.62","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,4,9,"medium","53.40","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,4,10,"medium","53.43","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,4,1,"medium","3.36","0.47","297.78","83.30","2444.42","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,4,2,"medium","3.28","0.45","305.11","83.04","2444.40","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,4,3,"medium","3.37","0.45","296.68","83.05","2444.11","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,4,4,"medium","3.31","0.46","302.09","84.18","2443.99","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,4,5,"medium","3.48","0.45","287.51","84.11","2444.16","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,4,6,"medium","3.44","0.48","291.11","81.97","2444.23","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,4,7,"medium","3.20","0.45","312.08","86.03","2444.51","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,4,8,"medium","3.29","0.45","304.30","85.91","2444.61","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,4,9,"medium","3.31","0.47","302.39","83.68","2444.59","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",1,4,10,"medium","3.12","0.45","320.15","88.99","2444.04","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 14, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","warmup",1,5,1,"medium","91.15","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,5,2,"medium","69.68","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,5,3,"medium","67.78","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,5,4,"medium","67.81","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,5,5,"medium","66.79","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,5,6,"medium","67.59","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,5,7,"medium","66.99","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,5,8,"medium","67.72","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,5,9,"medium","67.89","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,5,10,"medium","67.39","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,5,1,"medium","17.28","15.65","57.88","23.03","2445.74","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",1,5,2,"medium","17.10","16.23","58.49","23.08","2445.83","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",1,5,3,"medium","17.13","16.15","58.39","22.84","2445.45","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",1,5,4,"medium","18.44","16.58","54.23","22.05","2445.50","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",1,5,5,"medium","17.33","16.13","57.69","22.67","2445.84","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",1,5,6,"medium","17.20","16.21","58.16","22.70","2445.97","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",1,5,7,"medium","17.74","15.98","56.36","22.41","2445.88","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",1,5,8,"medium","17.21","16.80","58.10","22.84","2445.88","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",1,5,9,"medium","17.50","15.75","57.13","22.97","2445.81","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",1,5,10,"medium","17.19","16.34","58.16","22.89","2445.75","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","warmup",1,6,1,"medium","51.55","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,6,2,"medium","51.44","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,6,3,"medium","51.35","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,6,4,"medium","51.44","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,6,5,"medium","51.38","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,6,6,"medium","51.28","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,6,7,"medium","51.26","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,6,8,"medium","51.05","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,6,9,"medium","51.31","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,6,10,"medium","51.38","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,6,1,"medium","0.99","0.11","1010.51","264.01","2445.85","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",1,6,2,"medium","0.98","0.09","1016.78","263.60","2446.11","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",1,6,3,"medium","0.98","0.09","1015.95","276.54","2446.14","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",1,6,4,"medium","0.95","0.14","1056.08","276.09","2445.87","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",1,6,5,"medium","0.97","0.09","1027.85","269.96","2445.88","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",1,6,6,"medium","0.99","0.09","1008.37","265.02","2445.97","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",1,6,7,"medium","0.95","0.09","1053.30","284.67","2445.84","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",1,6,8,"medium","0.99","0.09","1014.40","265.95","2445.80","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",1,6,9,"medium","0.96","0.09","1036.81","277.78","2445.94","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",1,6,10,"medium","0.98","0.09","1019.06","266.36","2445.59","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","warmup",1,7,1,"complex","55.97","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,7,2,"complex","54.64","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,7,3,"complex","54.16","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,7,4,"complex","54.27","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,7,5,"complex","54.26","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,7,6,"complex","54.46","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,7,7,"complex","54.37","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,7,8,"complex","54.25","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,7,9,"complex","54.42","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,7,10,"complex","54.29","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,7,1,"complex","3.94","3.32","253.68","73.35","2446.62","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",1,7,2,"complex","3.99","3.10","250.92","70.70","2446.62","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",1,7,3,"complex","3.98","3.12","251.22","71.79","2446.70","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",1,7,4,"complex","3.99","3.10","250.73","72.36","2446.80","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",1,7,5,"complex","4.01","3.12","249.26","70.92","2446.67","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",1,7,6,"complex","4.01","3.19","249.50","70.87","2446.48","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",1,7,7,"complex","3.97","3.14","251.94","72.53","2446.75","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",1,7,8,"complex","4.05","3.19","246.79","70.17","2446.76","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",1,7,9,"complex","4.11","3.20","243.04","71.18","2446.81","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",1,7,10,"complex","4.13","3.23","242.30","80.25","2446.92","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","warmup",1,8,1,"complex","52.94","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,8,2,"complex","52.30","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,8,3,"complex","52.01","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,8,4,"complex","52.41","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,8,5,"complex","52.54","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,8,6,"complex","52.49","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,8,7,"complex","52.16","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,8,8,"complex","52.26","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,8,9,"complex","52.25","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,8,10,"complex","52.27","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,8,1,"complex","1.99","1.00","503.22","140.59","2446.89","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 46, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",1,8,2,"complex","2.05","0.98","487.83","133.86","2446.82","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 46, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",1,8,3,"complex","1.97","0.95","507.46","136.71","2447.01","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 46, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",1,8,4,"complex","1.94","0.94","515.57","141.81","2446.92","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 46, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",1,8,5,"complex","1.90","0.95","526.90","145.34","2446.74","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 46, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",1,8,6,"complex","1.94","0.98","516.40","140.23","2447.02","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 46, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",1,8,7,"complex","1.89","1.02","528.09","144.42","2446.91","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 46, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",1,8,8,"complex","1.93","0.96","518.97","141.09","2446.89","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 46, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",1,8,9,"complex","1.92","0.93","519.83","142.47","2446.54","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 46, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",1,8,10,"complex","1.92","0.96","520.07","143.42","2446.97","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 46, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","warmup",1,9,1,"complex","53.14","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,9,2,"complex","51.67","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,9,3,"complex","51.79","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,9,4,"complex","51.83","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,9,5,"complex","52.03","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,9,6,"complex","51.59","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,9,7,"complex","51.78","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,9,8,"complex","51.67","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,9,9,"complex","51.86","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,9,10,"complex","51.69","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,9,1,"complex","1.51","0.59","660.37","175.46","2446.80","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 293, ""first"": [2, 2]}"
"postgres","normal","steady",1,9,2,"complex","1.53","0.55","655.57","176.77","2446.93","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 293, ""first"": [2, 2]}"
"postgres","normal","steady",1,9,3,"complex","1.52","0.57","658.24","174.28","2446.84","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 293, ""first"": [2, 2]}"
"postgres","normal","steady",1,9,4,"complex","1.56","0.56","640.25","170.05","2446.90","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 293, ""first"": [2, 2]}"
"postgres","normal","steady",1,9,5,"complex","1.51","0.57","663.04","177.30","2447.10","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 293, ""first"": [2, 2]}"
"postgres","normal","steady",1,9,6,"complex","1.50","0.55","667.42","179.08","2446.57","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 293, ""first"": [2, 2]}"
"postgres","normal","steady",1,9,7,"complex","1.50","0.60","667.16","178.20","2446.90","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 293, ""first"": [2, 2]}"
"postgres","normal","steady",1,9,8,"complex","1.57","0.60","636.38","196.70","2447.13","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 293, ""first"": [2, 2]}"
"postgres","normal","steady",1,9,9,"complex","1.53","0.56","653.81","173.07","2446.98","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 293, ""first"": [2, 2]}"
"postgres","normal","steady",1,9,10,"complex","1.54","0.55","649.39","171.52","2446.98","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 293, ""first"": [2, 2]}"
"postgres","normal","warmup",1,10,1,"very_complex","61.21","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,10,2,"very_complex","53.60","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,10,3,"very_complex","53.46","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,10,4,"very_complex","53.51","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,10,5,"very_complex","53.49","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,10,6,"very_complex","53.38","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,10,7,"very_complex","53.47","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,10,8,"very_complex","53.64","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,10,9,"very_complex","53.14","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,10,10,"very_complex","53.61","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,10,1,"very_complex","3.08","2.64","324.92","90.42","2447.44","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,10,2,"very_complex","3.29","2.56","303.74","87.89","2446.78","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,10,3,"very_complex","3.09","2.63","323.69","110.91","2447.14","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,10,4,"very_complex","3.01","2.56","332.33","93.76","2447.41","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,10,5,"very_complex","3.02","2.59","330.92","91.78","2447.05","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,10,6,"very_complex","3.00","2.63","333.64","97.34","2447.01","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,10,7,"very_complex","3.10","2.60","322.62","89.56","2447.37","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,10,8,"very_complex","2.99","2.61","334.52","93.29","2447.31","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,10,9,"very_complex","3.02","2.60","331.03","92.46","2447.00","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,10,10,"very_complex","3.03","2.58","329.74","92.91","2446.96","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","warmup",1,11,1,"very_complex","55.04","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,11,2,"very_complex","55.00","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,11,3,"very_complex","54.96","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,11,4,"very_complex","54.83","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,11,5,"very_complex","54.54","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,11,6,"very_complex","54.63","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,11,7,"very_complex","55.00","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,11,8,"very_complex","54.72","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,11,9,"very_complex","54.83","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,11,10,"very_complex","54.67","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,11,1,"very_complex","4.50","4.38","222.04","65.50","2447.16","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",1,11,2,"very_complex","4.44","4.54","225.35","66.77","2446.76","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",1,11,3,"very_complex","4.53","4.48","220.55","65.86","2447.12","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",1,11,4,"very_complex","4.54","4.50","220.06","65.96","2447.52","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",1,11,5,"very_complex","4.47","4.47","223.64","66.62","2447.31","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",1,11,6,"very_complex","4.52","4.47","221.28","65.69","2447.05","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",1,11,7,"very_complex","4.50","4.47","222.33","65.97","2447.32","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",1,11,8,"very_complex","4.56","4.44","219.43","66.83","2447.35","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",1,11,9,"very_complex","4.50","4.31","222.13","65.84","2447.42","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",1,11,10,"very_complex","4.47","4.50","223.83","65.65","2447.07","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","warmup",1,12,1,"very_complex","53.34","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,12,2,"very_complex","53.42","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,12,3,"very_complex","53.52","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,12,4,"very_complex","53.57","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,12,5,"very_complex","53.29","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,12,6,"very_complex","53.30","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,12,7,"very_complex","53.50","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,12,8,"very_complex","53.39","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,12,9,"very_complex","53.59","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,12,10,"very_complex","53.23","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,12,1,"very_complex","3.04","2.67","329.27","93.27","2447.56","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,12,2,"very_complex","3.06","2.59","326.74","91.64","2447.33","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,12,3,"very_complex","3.05","2.59","328.31","92.07","2447.07","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,12,4,"very_complex","3.22","2.60","310.37","89.32","2447.24","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,12,5,"very_complex","3.03","2.58","330.27","105.25","2447.13","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,12,6,"very_complex","3.02","2.64","331.36","92.01","2447.51","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,12,7,"very_complex","3.04","2.83","328.67","92.36","2447.18","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,12,8,"very_complex","3.10","2.65","322.66","94.61","2447.18","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,12,9,"very_complex","3.03","2.61","330.12","94.47","2447.08","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",1,12,10,"very_complex","3.13","2.61","319.60","88.81","2447.15","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","warmup",1,13,1,"create","52.84","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,13,2,"create","52.17","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,13,3,"create","52.18","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,13,4,"create","51.91","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,13,5,"create","52.23","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,13,6,"create","52.03","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,13,7,"create","52.00","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,13,8,"create","52.21","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,13,9,"create","51.85","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,13,10,"create","51.82","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,13,1,"create","1.79","0.21","559.19","146.29","2447.48","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1358]}"
"postgres","normal","steady",1,13,2,"create","1.69","0.10","592.56","159.38","2447.12","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1360]}"
"postgres","normal","steady",1,13,3,"create","1.66","0.10","601.25","157.14","2447.01","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1362]}"
"postgres","normal","steady",1,13,4,"create","1.64","0.11","608.87","159.68","2447.16","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1364]}"
"postgres","normal","steady",1,13,5,"create","1.65","0.09","607.50","163.48","2447.20","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1366]}"
"postgres","normal","steady",1,13,6,"create","1.68","0.09","595.13","156.67","2447.18","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1368]}"
"postgres","normal","steady",1,13,7,"create","1.70","0.09","588.48","156.91","2447.37","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1370]}"
"postgres","normal","steady",1,13,8,"create","1.82","0.09","548.31","150.25","2447.35","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1372]}"
"postgres","normal","steady",1,13,9,"create","3.69","0.09","270.95","71.31","2447.38","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1374]}"
"postgres","normal","steady",1,13,10,"create","1.84","0.10","543.66","149.50","2447.31","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1376]}"
"postgres","normal","warmup",1,14,1,"create","52.05","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,14,2,"create","52.00","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,14,3,"create","52.12","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,14,4,"create","52.23","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,14,5,"create","52.20","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,14,6,"create","52.14","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,14,7,"create","55.90","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,14,8,"create","51.72","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,14,9,"create","52.00","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,14,10,"create","52.20","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,14,1,"create","5.68","0.07","176.06","46.29","2447.12","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [1994]}"
"postgres","normal","steady",1,14,2,"create","9.00","0.08","111.13","30.32","2447.00","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [1996]}"
"postgres","normal","steady",1,14,3,"create","1.64","0.07","609.87","159.31","2447.52","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [1998]}"
"postgres","normal","steady",1,14,4,"create","1.92","0.07","520.51","137.40","2447.13","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2000]}"
"postgres","normal","steady",1,14,5,"create","5.21","0.07","191.92","50.18","2447.36","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2002]}"
"postgres","normal","steady",1,14,6,"create","1.68","0.07","596.37","156.15","2447.18","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2004]}"
"postgres","normal","steady",1,14,7,"create","1.61","0.07","622.01","165.04","2447.35","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2006]}"
"postgres","normal","steady",1,14,8,"create","1.66","0.08","600.89","158.78","2447.21","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2008]}"
"postgres","normal","steady",1,14,9,"create","1.61","0.08","619.23","163.39","2447.33","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2010]}"
"postgres","normal","steady",1,14,10,"create","9.06","0.07","110.41","29.77","2447.28","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2012]}"
"postgres","normal","warmup",1,15,1,"create","52.81","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,15,2,"create","51.89","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,15,3,"create","52.25","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,15,4,"create","52.12","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,15,5,"create","55.92","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,15,6,"create","52.22","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,15,7,"create","52.04","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,15,8,"create","51.76","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,15,9,"create","52.57","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,15,10,"create","51.92","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,15,1,"create","8.76","0.09","114.21","31.36","2447.39","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1534]}"
"postgres","normal","steady",1,15,2,"create","1.89","0.09","528.32","143.13","2447.53","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1536]}"
"postgres","normal","steady",1,15,3,"create","6.15","0.09","162.61","44.31","2447.23","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1538]}"
"postgres","normal","steady",1,15,4,"create","5.64","0.10","177.19","47.45","2447.34","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1540]}"
"postgres","normal","steady",1,15,5,"create","8.70","0.09","115.00","30.62","2447.34","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1542]}"
"postgres","normal","steady",1,15,6,"create","1.79","0.09","558.44","146.00","2447.34","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1544]}"
"postgres","normal","steady",1,15,7,"create","1.54","0.09","651.42","173.65","2447.63","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1546]}"
"postgres","normal","steady",1,15,8,"create","2.08","0.09","481.21","129.85","2447.47","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1548]}"
"postgres","normal","steady",1,15,9,"create","5.93","0.09","168.57","45.41","2447.18","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1550]}"
"postgres","normal","steady",1,15,10,"create","9.05","0.10","110.56","29.40","2447.28","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1552]}"
"postgres","normal","warmup",1,16,1,"create","51.97","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,16,2,"create","51.80","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,16,3,"create","51.97","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,16,4,"create","51.78","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,16,5,"create","51.77","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,16,6,"create","52.07","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,16,7,"create","51.99","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,16,8,"create","52.09","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,16,9,"create","52.33","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,16,10,"create","52.07","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,16,1,"create","1.65","0.09","606.24","160.40","2447.29","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10533]}"
"postgres","normal","steady",1,16,2,"create","3.99","0.09","250.33","67.72","2446.87","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10535]}"
"postgres","normal","steady",1,16,3,"create","1.61","0.09","620.73","161.41","2447.26","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10537]}"
"postgres","normal","steady",1,16,4,"create","1.98","0.09","505.48","134.89","2447.19","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10539]}"
"postgres","normal","steady",1,16,5,"create","5.65","0.09","176.97","46.29","2447.35","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10541]}"
"postgres","normal","steady",1,16,6,"create","1.76","0.09","568.25","188.55","2447.29","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10543]}"
"postgres","normal","steady",1,16,7,"create","2.16","0.09","462.36","128.05","2447.15","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10545]}"
"postgres","normal","steady",1,16,8,"create","3.89","0.10","257.18","68.96","2447.63","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10547]}"
"postgres","normal","steady",1,16,9,"create","1.63","0.09","614.33","162.06","2447.23","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10549]}"
"postgres","normal","steady",1,16,10,"create","5.41","0.09","184.68","48.78","2447.23","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10551]}"
"postgres","normal","warmup",1,17,1,"update","52.75","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,17,2,"update","59.19","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,17,3,"update","52.23","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,17,4,"update","52.08","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,17,5,"update","52.37","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,17,6,"update","52.04","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,17,7,"update","51.90","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,17,8,"update","51.88","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,17,9,"update","51.71","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,17,10,"update","51.69","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,17,1,"update","1.53","0.07","654.75","203.14","2447.61","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [11, 37]}"
"postgres","normal","steady",1,17,2,"update","5.40","0.07","185.17","48.68","2447.30","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [12, 19]}"
"postgres","normal","steady",1,17,3,"update","3.89","0.07","256.88","68.82","2447.31","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [13, 50]}"
"postgres","normal","steady",1,17,4,"update","1.51","0.07","660.11","176.91","2447.12","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [14, 79]}"
"postgres","normal","steady",1,17,5,"update","1.66","0.07","603.54","160.22","2447.26","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [15, 61]}"
"postgres","normal","steady",1,17,6,"update","5.41","0.07","184.92","49.20","2447.53","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [16, 53]}"
"postgres","normal","steady",1,17,7,"update","8.99","0.07","111.28","29.32","2447.17","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [17, 90]}"
"postgres","normal","steady",1,17,8,"update","1.88","0.07","530.98","137.50","2447.50","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [18, 4]}"
"postgres","normal","steady",1,17,9,"update","1.62","0.07","615.42","164.73","2447.26","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [19, 47]}"
"postgres","normal","steady",1,17,10,"update","7.08","0.07","141.19","36.97","2447.14","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [20, 61]}"
"postgres","normal","warmup",1,18,1,"update","51.91","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,18,2,"update","52.23","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,18,3,"update","53.86","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,18,4,"update","51.78","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,18,5,"update","51.91","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,18,6,"update","51.71","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,18,7,"update","55.74","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,18,8,"update","51.74","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,18,9,"update","51.65","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,18,10,"update","52.11","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,18,1,"update","8.62","0.10","116.02","31.21","2447.75","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [11, 3]}"
"postgres","normal","steady",1,18,2,"update","3.79","0.07","263.94","69.59","2447.31","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [12, 2]}"
"postgres","normal","steady",1,18,3,"update","2.70","0.07","370.14","98.68","2447.25","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [13, 4]}"
"postgres","normal","steady",1,18,4,"update","1.58","0.07","634.12","172.04","2447.31","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [14, 4]}"
"postgres","normal","steady",1,18,5,"update","2.44","0.07","409.85","111.20","2446.97","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [15, 1]}"
"postgres","normal","steady",1,18,6,"update","1.64","0.07","609.20","163.12","2447.40","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [16, 1]}"
"postgres","normal","steady",1,18,7,"update","1.61","0.07","619.73","165.42","2447.30","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [17, 2]}"
"postgres","normal","steady",1,18,8,"update","5.48","0.07","182.48","48.84","2447.09","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [18, 4]}"
"postgres","normal","steady",1,18,9,"update","1.62","0.07","618.05","164.48","2447.05","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [19, 3]}"
"postgres","normal","steady",1,18,10,"update","1.76","0.07","569.54","151.95","2447.43","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [20, 1]}"
"postgres","normal","warmup",1,19,1,"update","52.10","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,19,2,"update","51.77","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,19,3,"update","52.05","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,19,4,"update","51.85","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,19,5,"update","52.26","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,19,6,"update","51.73","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,19,7,"update","51.89","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,19,8,"update","53.22","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,19,9,"update","55.22","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,19,10,"update","51.83","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,19,1,"update","3.82","0.07","261.77","69.86","2447.41","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [11, 4]}"
"postgres","normal","steady",1,19,2,"update","1.54","0.07","647.37","172.04","2447.69","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [12, 5]}"
"postgres","normal","steady",1,19,3,"update","1.67","0.07","597.23","154.82","2447.48","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [13, 5]}"
"postgres","normal","steady",1,19,4,"update","8.68","0.06","115.23","30.37","2447.43","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [14, 5]}"
"postgres","normal","steady",1,19,5,"update","6.27","0.07","159.61","41.86","2447.45","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [15, 5]}"
"postgres","normal","steady",1,19,6,"update","1.54","0.06","650.70","176.41","2447.34","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [16, 5]}"
"postgres","normal","steady",1,19,7,"update","1.71","0.07","585.89","157.69","2447.69","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [17, 5]}"
"postgres","normal","steady",1,19,8,"update","1.93","0.07","519.37","136.22","2447.15","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [18, 5]}"
"postgres","normal","steady",1,19,9,"update","1.63","0.07","613.16","160.50","2446.92","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [19, 4]}"
"postgres","normal","steady",1,19,10,"update","1.63","0.06","611.92","165.59","2447.67","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [20, 4]}"
"postgres","normal","warmup",1,20,1,"update","51.83","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,20,2,"update","51.97","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,20,3,"update","51.87","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,20,4,"update","51.59","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,20,5,"update","52.09","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,20,6,"update","51.80","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,20,7,"update","51.82","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,20,8,"update","52.23","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,20,9,"update","53.70","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,20,10,"update","55.56","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,20,1,"update","1.61","0.08","619.92","163.51","2447.32","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [11, ""wagnerstilla@example.net.tmp""]}"
"postgres","normal","steady",1,20,2,"update","1.68","0.08","594.64","159.48","2447.03","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [12, ""heserjoanna@example.com.tmp""]}"
"postgres","normal","steady",1,20,3,"update","5.30","0.08","188.66","49.65","2446.98","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [13, ""gotthardbeyer@example.net.tmp""]}"
"postgres","normal","steady",1,20,4,"update","6.06","0.08","165.12","43.88","2447.32","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [14, ""helmutwulff@example.net.tmp""]}"
"postgres","normal","steady",1,20,5,"update","1.70","0.08","588.62","157.85","2447.24","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [15, ""kreuselstefano@example.org.tmp""]}"
"postgres","normal","steady",1,20,6,"update","5.35","0.08","186.76","48.41","2447.18","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [16, ""lotti66@example.org.tmp""]}"
"postgres","normal","steady",1,20,7,"update","5.35","0.08","187.03","49.26","2447.29","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [17, ""domenico36@example.net.tmp""]}"
"postgres","normal","steady",1,20,8,"update","1.63","0.08","614.97","162.42","2447.22","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [18, ""tschentscherben@example.com.tmp""]}"
"postgres","normal","steady",1,20,9,"update","1.63","0.08","612.93","161.21","2447.29","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [19, ""gisbertkambs@example.net.tmp""]}"
"postgres","normal","steady",1,20,10,"update","1.61","0.08","621.70","164.12","2447.39","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [20, ""hoerlehannah@example.com.tmp""]}"
"postgres","normal","warmup",1,21,1,"delete","51.80","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,21,2,"delete","51.71","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,21,3,"delete","51.88","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,21,4,"delete","52.06","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,21,5,"delete","51.93","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,21,6,"delete","52.08","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,21,7,"delete","52.34","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,21,8,"delete","52.22","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,21,9,"delete","56.44","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,21,10,"delete","52.29","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,21,1,"delete","1.97","0.06","507.72","133.66","2447.23","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [11]}"
"postgres","normal","steady",1,21,2,"delete","1.64","0.04","608.53","161.60","2447.29","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [12]}"
"postgres","normal","steady",1,21,3,"delete","1.79","0.04","559.63","152.55","2447.24","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [13]}"
"postgres","normal","steady",1,21,4,"delete","1.68","0.04","594.49","156.57","2447.20","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [14]}"
"postgres","normal","steady",1,21,5,"delete","1.74","0.04","575.51","151.75","2447.39","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [15]}"
"postgres","normal","steady",1,21,6,"delete","1.66","0.04","603.54","158.50","2446.83","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [16]}"
"postgres","normal","steady",1,21,7,"delete","2.68","0.04","373.30","99.61","2447.36","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [17]}"
"postgres","normal","steady",1,21,8,"delete","5.54","0.04","180.38","47.63","2447.23","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [18]}"
"postgres","normal","steady",1,21,9,"delete","1.62","0.04","618.77","162.54","2447.24","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [19]}"
"postgres","normal","steady",1,21,10,"delete","6.18","0.04","161.90","43.33","2447.08","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [20]}"
"postgres","normal","warmup",1,22,1,"delete","51.73","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,22,2,"delete","52.25","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,22,3,"delete","51.72","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,22,4,"delete","51.77","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,22,5,"delete","55.59","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,22,6,"delete","52.22","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,22,7,"delete","51.98","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,22,8,"delete","52.00","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,22,9,"delete","51.83","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,22,10,"delete","51.90","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,22,1,"delete","5.38","0.07","185.84","49.50","2447.22","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [11]}"
"postgres","normal","steady",1,22,2,"delete","1.76","0.07","568.34","158.91","2447.21","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [12]}"
"postgres","normal","steady",1,22,3,"delete","1.77","0.07","564.27","151.97","2447.25","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [13]}"
"postgres","normal","steady",1,22,4,"delete","1.71","0.07","584.73","154.94","2447.31","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [14]}"
"postgres","normal","steady",1,22,5,"delete","5.44","0.07","183.73","49.23","2447.04","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [15]}"
"postgres","normal","steady",1,22,6,"delete","1.65","0.07","605.95","163.45","2447.47","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [16]}"
"postgres","normal","steady",1,22,7,"delete","9.00","0.10","111.13","29.82","2447.50","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [17]}"
"postgres","normal","steady",1,22,8,"delete","1.69","0.07","591.89","160.61","2447.18","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [18]}"
"postgres","normal","steady",1,22,9,"delete","1.74","0.07","575.74","178.57","2447.28","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [19]}"
"postgres","normal","steady",1,22,10,"delete","9.15","0.07","109.30","29.40","2446.96","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [20]}"
"postgres","normal","warmup",1,23,1,"delete","51.84","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,23,2,"delete","52.03","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,23,3,"delete","52.18","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,23,4,"delete","52.25","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,23,5,"delete","51.73","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,23,6,"delete","51.93","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,23,7,"delete","51.73","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,23,8,"delete","51.77","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,23,9,"delete","51.85","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,23,10,"delete","51.85","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,23,1,"delete","1.64","0.04","608.57","159.00","2447.36","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [11]}"
"postgres","normal","steady",1,23,2,"delete","1.70","0.04","588.37","158.09","2447.39","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [12]}"
"postgres","normal","steady",1,23,3,"delete","1.68","0.04","595.45","157.54","2447.20","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [13]}"
"postgres","normal","steady",1,23,4,"delete","1.71","0.04","583.43","154.48","2447.49","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [14]}"
"postgres","normal","steady",1,23,5,"delete","1.65","0.04","605.95","159.98","2447.17","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [15]}"
"postgres","normal","steady",1,23,6,"delete","1.67","0.04","599.41","157.71","2447.46","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [16]}"
"postgres","normal","steady",1,23,7,"delete","5.48","0.04","182.61","48.22","2447.50","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [17]}"
"postgres","normal","steady",1,23,8,"delete","1.63","0.04","613.91","161.61","2447.11","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [18]}"
"postgres","normal","steady",1,23,9,"delete","8.64","0.04","115.73","30.40","2447.29","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [19]}"
"postgres","normal","steady",1,23,10,"delete","8.97","0.04","111.44","29.71","2447.13","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [20]}"
"postgres","normal","warmup",1,24,1,"delete","52.28","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,24,2,"delete","51.95","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,24,3,"delete","51.78","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,24,4,"delete","52.13","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,24,5,"delete","52.35","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,24,6,"delete","52.10","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,24,7,"delete","51.84","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,24,8,"delete","51.83","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,24,9,"delete","52.45","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",1,24,10,"delete","52.05","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",1,24,1,"delete","1.79","0.09","559.63","149.28","2447.43","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [11]}"
"postgres","normal","steady",1,24,2,"delete","5.46","0.04","182.99","48.23","2447.18","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [12]}"
"postgres","normal","steady",1,24,3,"delete","6.05","0.04","165.35","45.13","2447.14","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [13]}"
"postgres","normal","steady",1,24,4,"delete","5.74","0.04","174.16","46.14","2447.13","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [14]}"
"postgres","normal","steady",1,24,5,"delete","1.77","0.04","565.20","149.56","2447.35","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [15]}"
"postgres","normal","steady",1,24,6,"delete","1.64","0.04","610.76","161.35","2447.31","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [16]}"
"postgres","normal","steady",1,24,7,"delete","5.90","0.04","169.35","44.98","2447.19","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [17]}"
"postgres","normal","steady",1,24,8,"delete","8.70","0.04","114.90","30.26","2447.27","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [18]}"
"postgres","normal","steady",1,24,9,"delete","1.95","0.04","514.01","135.98","2447.36","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [19]}"
"postgres","normal","steady",1,24,10,"delete","5.29","0.05","188.95","50.18","2447.31","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [20]}"
"postgres","normal","warmup",3,1,1,"simple","113.46","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,1,2,"simple","106.99","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,1,3,"simple","105.83","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,1,4,"simple","113.28","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,1,5,"simple","113.52","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,1,6,"simple","105.29","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,1,7,"simple","106.99","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,1,8,"simple","103.35","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,1,9,"simple","114.97","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,1,10,"simple","114.05","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","steady",3,1,1,"simple","52.65","2.21","56.98","11.40","2447.58","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,1,2,"simple","53.11","2.22","56.49","11.15","2447.24","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,1,3,"simple","54.48","2.22","55.07","11.36","2447.60","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,1,4,"simple","53.26","2.19","56.32","11.18","2447.37","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,1,5,"simple","64.03","2.22","46.85","9.73","2447.11","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,1,6,"simple","53.90","2.24","55.66","12.27","2447.20","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,1,7,"simple","54.19","2.23","55.36","11.40","2447.25","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,1,8,"simple","54.36","2.19","55.19","11.34","2447.08","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,1,9,"simple","61.93","2.19","48.44","9.81","2447.38","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,1,10,"simple","58.43","2.23","51.34","10.49","2447.24","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","warmup",3,2,1,"simple","75.14","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,2,2,"simple","71.69","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,2,3,"simple","74.48","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,2,4,"simple","74.35","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,2,5,"simple","73.54","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,2,6,"simple","74.84","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,2,7,"simple","73.75","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,2,8,"simple","73.50","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,2,9,"simple","74.31","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,2,10,"simple","74.97","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","steady",3,2,1,"simple","23.21","0.07","129.27","15.55","2447.41","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",3,2,2,"simple","23.78","0.07","126.17","15.18","2447.46","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",3,2,3,"simple","21.61","0.07","138.82","17.24","2447.33","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",3,2,4,"simple","23.82","0.07","125.96","17.00","2447.82","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",3,2,5,"simple","22.94","0.07","130.76","15.47","2447.03","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",3,2,6,"simple","26.46","0.07","113.37","13.71","2447.28","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",3,2,7,"simple","23.10","0.07","129.87","15.66","2447.46","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",3,2,8,"simple","23.32","0.07","128.67","15.20","2447.09","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",3,2,9,"simple","23.23","0.07","129.14","15.32","2447.56","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",3,2,10,"simple","23.92","0.07","125.44","15.50","2447.30","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","warmup",3,3,1,"simple","75.68","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,3,2,"simple","74.61","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,3,3,"simple","74.21","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,3,4,"simple","75.01","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,3,5,"simple","74.70","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,3,6,"simple","76.06","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,3,7,"simple","74.28","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,3,8,"simple","74.07","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,3,9,"simple","75.87","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",3,3,10,"simple","74.06","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","steady",3,3,1,"simple","24.17","0.19","124.13","15.49","2447.43","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [21, 18, ""Preißweg 76"", ""Kyritz"", ""09434"", ""Deutschland"", true]}"
"postgres","normal","steady",3,3,2,"simple","25.05","0.19","119.75","15.30","2447.01","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [21, 18, ""Preißweg 76"", ""Kyritz"", ""09434"", ""Deutschland"", true]}"
"postgres","normal","steady",3,3,3,"simple","24.04","0.19","124.78","17.62","2447.39","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [21, 18, ""Preißweg 76"", ""Kyritz"", ""09434"", ""Deutschland"", true]}"
"postgres","normal","steady",3,3,4,"simple","24.87","0.19","120.63","15.06","2447.89","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [21, 18, ""Preißweg 76"", ""Kyritz"", ""09434"", ""Deutschland"", true]}"
"postgres","normal","steady",3,3,5,"simple","24.25","0.19","123.71","15.22","2447.27","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [21, 18, ""Preißweg 76"", ""Kyritz"", ""09434"", ""Deutschland"", true]}"
"postgres","normal","steady",3,3,6,"simple","24.60","0.21","121.97","15.49","2447.36","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [21, 18, ""Preißweg 76"", ""Kyritz"", ""09434"", ""Deutschland"", true]}"
"postgres","normal","steady",3,3,7,"simple","47.91","0.19","62.61","7.75","2447.32","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [21, 18, ""Preißweg 76"", ""Kyritz"", ""09434"", ""Deutschland"", true]}"
"postgres","normal","steady",3,3,8,"simple","25.45","0.19","117.88","14.73","2447.28","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [21, 18, ""Preißweg 76"", ""Kyritz"", ""09434"", ""Deutschland"", true]}"
"postgres","normal","steady",3,3,9,"simple","23.92","0.19","125.40","15.91","2447.35","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [21, 18, ""Preißweg 76"", ""Kyritz"", ""09434"", ""Deutschland"", true]}"
"postgres","normal","steady",3,3,10,"simple","24.56","0.19","122.17","15.15","2447.43","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [21, 18, ""Preißweg 76"", ""Kyritz"", ""09434"", ""Deutschland"", true]}"
"postgres","normal","warmup",3,4,1,"medium","77.01","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,4,2,"medium","77.32","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,4,3,"medium","76.47","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,4,4,"medium","74.36","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,4,5,"medium","77.03","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,4,6,"medium","76.99","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,4,7,"medium","76.60","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,4,8,"medium","76.56","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,4,9,"medium","77.58","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,4,10,"medium","79.69","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,4,1,"medium","28.60","0.48","104.89","14.07","2447.41","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,4,2,"medium","26.46","0.47","113.38","15.26","2447.16","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,4,3,"medium","26.91","0.45","111.48","15.33","2447.47","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,4,4,"medium","26.51","0.46","113.16","15.06","2447.07","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,4,5,"medium","26.35","0.45","113.87","15.17","2447.37","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,4,6,"medium","25.97","0.45","115.50","15.73","2447.41","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,4,7,"medium","26.39","0.48","113.70","15.07","2447.25","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,4,8,"medium","26.40","0.45","113.64","15.29","2447.47","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,4,9,"medium","26.01","0.48","115.36","15.42","2447.18","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",3,4,10,"medium","26.24","0.47","114.35","15.25","2447.12","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","warmup",3,5,1,"medium","103.29","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,5,2,"medium","101.78","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,5,3,"medium","102.64","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,5,4,"medium","102.76","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,5,5,"medium","103.77","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,5,6,"medium","103.21","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,5,7,"medium","100.96","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,5,8,"medium","104.58","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,5,9,"medium","103.82","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,5,10,"medium","104.23","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,5,1,"medium","52.31","16.54","57.35","21.12","2447.34","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",3,5,2,"medium","55.57","16.91","53.99","19.50","2447.22","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",3,5,3,"medium","55.72","16.36","53.84","19.33","2447.22","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",3,5,4,"medium","56.53","16.25","53.07","19.43","2447.15","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",3,5,5,"medium","53.00","16.61","56.60","20.40","2446.75","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",3,5,6,"medium","52.66","16.40","56.97","20.53","2447.39","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",3,5,7,"medium","53.49","16.19","56.08","20.43","2447.37","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",3,5,8,"medium","48.06","15.94","62.43","21.34","2447.60","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",3,5,9,"medium","51.64","16.08","58.09","20.86","2447.28","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",3,5,10,"medium","52.05","17.01","57.64","20.37","2447.55","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","warmup",3,6,1,"medium","74.13","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,6,2,"medium","73.83","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,6,3,"medium","74.03","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,6,4,"medium","72.55","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,6,5,"medium","74.70","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,6,6,"medium","73.60","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,6,7,"medium","74.46","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,6,8,"medium","74.13","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,6,9,"medium","73.43","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,6,10,"medium","73.45","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,6,1,"medium","23.55","0.09","127.38","15.29","2447.16","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",3,6,2,"medium","23.56","0.08","127.33","15.44","2447.53","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",3,6,3,"medium","23.68","0.09","126.67","15.17","2447.38","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",3,6,4,"medium","23.71","0.09","126.53","15.38","2447.21","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",3,6,5,"medium","23.62","0.09","126.99","15.30","2447.28","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",3,6,6,"medium","23.35","0.08","128.45","15.52","2447.38","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",3,6,7,"medium","23.53","0.08","127.49","15.42","2447.62","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",3,6,8,"medium","21.22","0.08","141.35","17.04","2447.06","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",3,6,9,"medium","23.66","0.09","126.79","15.20","2447.50","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",3,6,10,"medium","23.56","0.09","127.35","15.32","2447.28","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","warmup",3,7,1,"complex","79.07","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,7,2,"complex","76.72","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,7,3,"complex","78.32","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,7,4,"complex","79.62","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,7,5,"complex","81.37","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,7,6,"complex","81.50","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,7,7,"complex","81.19","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,7,8,"complex","81.23","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,7,9,"complex","78.09","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,7,10,"complex","82.35","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,7,1,"complex","27.41","3.16","109.45","16.40","2447.61","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",3,7,2,"complex","27.94","3.15","107.37","16.20","2447.43","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",3,7,3,"complex","27.68","3.14","108.40","16.54","2447.56","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",3,7,4,"complex","27.82","3.46","107.83","16.43","2447.22","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",3,7,5,"complex","28.16","3.25","106.55","16.30","2447.44","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",3,7,6,"complex","27.85","3.19","107.72","16.32","2447.30","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",3,7,7,"complex","27.71","3.13","108.26","16.49","2447.21","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",3,7,8,"complex","28.05","3.14","106.95","16.09","2447.36","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",3,7,9,"complex","27.72","3.13","108.22","16.24","2447.30","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",3,7,10,"complex","31.24","3.20","96.04","15.06","2447.68","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","warmup",3,8,1,"complex","77.14","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,8,2,"complex","75.99","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,8,3,"complex","76.54","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,8,4,"complex","76.99","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,8,5,"complex","76.72","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,8,6,"complex","95.06","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,8,7,"complex","76.72","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,8,8,"complex","76.91","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,8,9,"complex","76.75","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,8,10,"complex","80.14","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,8,1,"complex","26.20","0.89","114.51","16.18","2447.52","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 41, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",3,8,2,"complex","26.17","0.89","114.65","16.30","2447.37","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 41, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",3,8,3,"complex","26.36","0.93","113.81","16.26","2447.44","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 41, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",3,8,4,"complex","26.03","0.91","115.24","16.30","2447.34","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 41, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",3,8,5,"complex","26.14","0.92","114.79","16.58","2447.33","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 41, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",3,8,6,"complex","26.48","0.89","113.30","16.40","2447.53","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 41, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",3,8,7,"complex","27.40","0.89","109.49","16.20","2447.72","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 41, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",3,8,8,"complex","26.70","0.88","112.38","16.40","2447.41","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 41, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",3,8,9,"complex","26.75","0.92","112.14","16.27","2447.55","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 41, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","steady",3,8,10,"complex","29.68","0.88","101.09","14.89","2447.38","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 41, ""first"": [50804, ""Gas fireplace Electric Fireplace Electric Stove Fireplaces Log Burner Electric Fire Stove Freestanding Electrical Fireplace Indoor Heater Stove Log Wood Electric Stove Fire (white)"", ""5.0000000000000000""]}"
"postgres","normal","warmup",3,9,1,"complex","76.39","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,9,2,"complex","74.86","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,9,3,"complex","74.83","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,9,4,"complex","76.37","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,9,5,"complex","74.42","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,9,6,"complex","75.86","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,9,7,"complex","75.09","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,9,8,"complex","74.38","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,9,9,"complex","75.53","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,9,10,"complex","75.09","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,9,1,"complex","24.62","0.58","121.87","15.74","2447.39","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 294, ""first"": [1, 20]}"
"postgres","normal","steady",3,9,2,"complex","24.72","0.62","121.36","15.77","2447.60","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 294, ""first"": [1, 20]}"
"postgres","normal","steady",3,9,3,"complex","24.51","0.58","122.40","15.64","2447.64","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 294, ""first"": [1, 20]}"
"postgres","normal","steady",3,9,4,"complex","24.52","0.56","122.35","15.87","2447.33","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 294, ""first"": [1, 20]}"
"postgres","normal","steady",3,9,5,"complex","24.57","0.58","122.10","15.63","2447.49","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 294, ""first"": [1, 20]}"
"postgres","normal","steady",3,9,6,"complex","24.27","0.61","123.63","15.78","2447.59","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 294, ""first"": [1, 20]}"
"postgres","normal","steady",3,9,7,"complex","24.22","0.61","123.86","17.32","2447.37","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 294, ""first"": [1, 20]}"
"postgres","normal","steady",3,9,8,"complex","40.70","0.59","73.71","10.55","2447.33","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 294, ""first"": [1, 20]}"
"postgres","normal","steady",3,9,9,"complex","24.23","0.57","123.82","15.74","2447.50","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 294, ""first"": [1, 20]}"
"postgres","normal","steady",3,9,10,"complex","24.50","0.63","122.44","15.55","2447.58","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 294, ""first"": [1, 20]}"
"postgres","normal","warmup",3,10,1,"very_complex","76.67","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,10,2,"very_complex","77.23","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,10,3,"very_complex","76.90","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,10,4,"very_complex","77.14","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,10,5,"very_complex","77.62","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,10,6,"very_complex","76.85","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,10,7,"very_complex","77.59","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,10,8,"very_complex","76.00","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,10,9,"very_complex","76.93","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,10,10,"very_complex","76.94","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,10,1,"very_complex","26.86","2.57","111.68","16.14","2447.55","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,10,2,"very_complex","26.16","2.59","114.68","16.39","2447.38","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,10,3,"very_complex","26.77","2.61","112.05","16.22","2448.00","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,10,4,"very_complex","26.37","2.58","113.75","16.54","2447.49","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,10,5,"very_complex","27.25","2.57","110.09","16.06","2447.46","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,10,6,"very_complex","31.23","2.63","96.07","14.83","2447.57","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,10,7,"very_complex","26.71","2.65","112.31","17.74","2447.65","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,10,8,"very_complex","26.30","2.57","114.08","16.36","2447.40","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,10,9,"very_complex","24.28","2.58","123.55","18.09","2447.65","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,10,10,"very_complex","26.37","2.57","113.78","16.56","2447.41","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","warmup",3,11,1,"very_complex","78.20","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,11,2,"very_complex","78.16","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,11,3,"very_complex","78.20","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,11,4,"very_complex","78.66","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,11,5,"very_complex","79.59","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,11,6,"very_complex","78.28","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,11,7,"very_complex","77.75","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,11,8,"very_complex","78.64","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,11,9,"very_complex","79.22","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,11,10,"very_complex","77.91","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,11,1,"very_complex","27.68","4.46","108.38","16.77","2447.86","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",3,11,2,"very_complex","27.95","4.45","107.33","16.81","2447.88","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",3,11,3,"very_complex","27.63","4.44","108.58","16.97","2447.38","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",3,11,4,"very_complex","28.13","4.46","106.65","16.51","2447.75","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",3,11,5,"very_complex","26.93","4.45","111.38","17.94","2447.61","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",3,11,6,"very_complex","28.65","4.44","104.72","16.63","2447.65","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",3,11,7,"very_complex","27.79","4.51","107.94","16.68","2447.44","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",3,11,8,"very_complex","28.38","4.41","105.71","16.96","2447.34","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",3,11,9,"very_complex","27.73","4.47","108.17","16.70","2447.52","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",3,11,10,"very_complex","27.90","4.45","107.53","16.75","2447.86","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","warmup",3,12,1,"very_complex","77.51","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,12,2,"very_complex","77.12","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,12,3,"very_complex","79.27","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,12,4,"very_complex","76.80","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,12,5,"very_complex","77.46","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,12,6,"very_complex","77.38","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,12,7,"very_complex","77.39","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,12,8,"very_complex","76.32","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,12,9,"very_complex","77.19","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,12,10,"very_complex","77.01","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,12,1,"very_complex","26.72","2.58","112.29","16.35","2447.28","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,12,2,"very_complex","27.21","2.61","110.23","16.22","2447.29","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,12,3,"very_complex","25.53","2.65","117.49","17.24","2447.62","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,12,4,"very_complex","27.15","2.60","110.50","18.43","2449.15","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,12,5,"very_complex","26.34","2.65","113.90","16.96","2449.04","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,12,6,"very_complex","27.31","2.58","109.84","16.73","2449.25","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,12,7,"very_complex","26.27","2.59","114.20","16.93","2449.37","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,12,8,"very_complex","26.76","2.62","112.12","16.39","2449.08","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,12,9,"very_complex","26.40","2.63","113.62","17.48","2449.34","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",3,12,10,"very_complex","26.69","2.60","112.40","16.78","2449.32","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","warmup",3,13,1,"create","74.62","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,13,2,"create","74.90","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,13,3,"create","75.30","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,13,4,"create","75.26","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,13,5,"create","74.55","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,13,6,"create","75.76","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,13,7,"create","75.15","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,13,8,"create","76.49","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,13,9,"create","75.14","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,13,10,"create","74.84","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,13,1,"create","24.51","0.09","122.39","15.69","2449.16","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1408]}"
"postgres","normal","steady",3,13,2,"create","22.59","0.09","132.79","17.69","2449.06","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1412]}"
"postgres","normal","steady",3,13,3,"create","24.75","0.10","121.20","15.95","2449.37","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1416]}"
"postgres","normal","steady",3,13,4,"create","24.72","0.09","121.35","15.20","2449.40","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1420]}"
"postgres","normal","steady",3,13,5,"create","24.04","0.10","124.79","15.67","2449.03","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1424]}"
"postgres","normal","steady",3,13,6,"create","24.50","0.10","122.43","15.07","2449.24","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1428]}"
"postgres","normal","steady",3,13,7,"create","24.70","0.10","121.47","16.05","2449.14","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1432]}"
"postgres","normal","steady",3,13,8,"create","23.38","0.09","128.30","17.25","2449.19","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1436]}"
"postgres","normal","steady",3,13,9,"create","24.55","0.09","122.20","15.37","2449.14","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1440]}"
"postgres","normal","steady",3,13,10,"create","24.13","0.09","124.31","15.42","2449.28","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1444]}"
"postgres","normal","warmup",3,14,1,"create","75.46","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,14,2,"create","74.36","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,14,3,"create","88.83","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,14,4,"create","74.92","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,14,5,"create","75.07","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,14,6,"create","74.81","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,14,7,"create","74.63","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,14,8,"create","72.78","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,14,9,"create","75.09","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,14,10,"create","74.90","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,14,1,"create","24.17","0.11","124.14","15.63","2449.26","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2044]}"
"postgres","normal","steady",3,14,2,"create","24.67","0.07","121.58","15.49","2449.15","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2048]}"
"postgres","normal","steady",3,14,3,"create","24.18","0.07","124.07","15.36","2448.71","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2052]}"
"postgres","normal","steady",3,14,4,"create","24.40","0.07","122.97","15.39","2449.09","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2056]}"
"postgres","normal","steady",3,14,5,"create","23.76","0.07","126.28","16.15","2449.38","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2060]}"
"postgres","normal","steady",3,14,6,"create","23.21","0.07","129.28","16.14","2449.10","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2064]}"
"postgres","normal","steady",3,14,7,"create","23.51","0.07","127.60","16.76","2449.12","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2068]}"
"postgres","normal","steady",3,14,8,"create","24.28","0.15","123.54","15.98","2449.14","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2072]}"
"postgres","normal","steady",3,14,9,"create","24.17","0.07","124.10","15.40","2449.25","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2076]}"
"postgres","normal","steady",3,14,10,"create","24.55","0.08","122.19","15.54","2449.26","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2080]}"
"postgres","normal","warmup",3,15,1,"create","74.78","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,15,2,"create","74.65","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,15,3,"create","74.66","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,15,4,"create","74.75","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,15,5,"create","75.44","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,15,6,"create","75.58","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,15,7,"create","75.02","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,15,8,"create","72.28","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,15,9,"create","74.54","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,15,10,"create","72.63","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,15,1,"create","24.57","0.10","122.10","15.22","2449.52","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1584]}"
"postgres","normal","steady",3,15,2,"create","24.85","0.09","120.71","15.77","2449.21","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1588]}"
"postgres","normal","steady",3,15,3,"create","25.50","0.09","117.63","15.08","2449.33","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1592]}"
"postgres","normal","steady",3,15,4,"create","24.30","0.09","123.46","15.77","2448.85","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1596]}"
"postgres","normal","steady",3,15,5,"create","24.98","0.09","120.11","16.02","2449.04","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1600]}"
"postgres","normal","steady",3,15,6,"create","25.01","0.09","119.96","15.22","2449.37","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1604]}"
"postgres","normal","steady",3,15,7,"create","24.93","0.09","120.33","15.63","2449.48","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1608]}"
"postgres","normal","steady",3,15,8,"create","24.60","0.09","121.96","15.79","2449.09","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1612]}"
"postgres","normal","steady",3,15,9,"create","24.52","0.09","122.35","15.87","2449.05","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1616]}"
"postgres","normal","steady",3,15,10,"create","44.35","0.10","67.64","8.97","2449.25","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1620]}"
"postgres","normal","warmup",3,16,1,"create","75.52","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,16,2,"create","75.78","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,16,3,"create","72.72","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,16,4,"create","75.31","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,16,5,"create","75.13","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,16,6,"create","74.88","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,16,7,"create","74.48","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,16,8,"create","72.48","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,16,9,"create","74.84","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,16,10,"create","74.17","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,16,1,"create","24.92","0.09","120.41","15.24","2449.42","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10583]}"
"postgres","normal","steady",3,16,2,"create","24.09","0.09","124.56","16.07","2449.21","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10587]}"
"postgres","normal","steady",3,16,3,"create","24.43","0.09","122.78","15.78","2449.47","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10591]}"
"postgres","normal","steady",3,16,4,"create","24.26","0.10","123.68","16.44","2449.33","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10595]}"
"postgres","normal","steady",3,16,5,"create","24.52","0.10","122.36","15.66","2449.41","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10599]}"
"postgres","normal","steady",3,16,6,"create","24.18","0.09","124.07","15.88","2449.21","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10603]}"
"postgres","normal","steady",3,16,7,"create","24.60","0.09","121.96","15.21","2449.61","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10607]}"
"postgres","normal","steady",3,16,8,"create","24.11","0.09","124.42","15.59","2449.36","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10611]}"
"postgres","normal","steady",3,16,9,"create","24.52","0.09","122.35","15.30","2449.39","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10615]}"
"postgres","normal","steady",3,16,10,"create","24.37","0.09","123.12","15.96","2449.20","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10619]}"
"postgres","normal","warmup",3,17,1,"update","75.55","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,17,2,"update","96.64","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,17,3,"update","74.83","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,17,4,"update","75.09","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,17,5,"update","75.07","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,17,6,"update","73.45","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,17,7,"update","74.28","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,17,8,"update","74.59","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,17,9,"update","75.32","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,17,10,"update","74.18","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,17,1,"update","23.75","0.07","126.30","15.47","2449.01","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 11]}"
"postgres","normal","steady",3,17,2,"update","24.20","0.07","123.94","15.25","2449.66","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 14]}"
"postgres","normal","steady",3,17,3,"update","23.25","0.07","129.04","16.79","2449.39","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 17]}"
"postgres","normal","steady",3,17,4,"update","24.11","0.07","124.45","15.15","2449.44","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 20]}"
"postgres","normal","steady",3,17,5,"update","23.94","0.07","125.31","15.42","2449.47","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 23]}"
"postgres","normal","steady",3,17,6,"update","24.61","0.07","121.88","15.71","2449.41","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 26]}"
"postgres","normal","steady",3,17,7,"update","23.83","0.07","125.90","16.00","2449.27","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 29]}"
"postgres","normal","steady",3,17,8,"update","24.27","0.07","123.63","15.18","2449.19","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 32]}"
"postgres","normal","steady",3,17,9,"update","24.30","0.07","123.47","15.21","2449.31","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 35]}"
"postgres","normal","steady",3,17,10,"update","24.20","0.07","123.96","15.24","2449.39","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 38]}"
"postgres","normal","warmup",3,18,1,"update","74.63","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,18,2,"update","74.22","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,18,3,"update","74.92","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,18,4,"update","74.96","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,18,5,"update","74.87","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,18,6,"update","74.24","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,18,7,"update","74.50","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,18,8,"update","74.93","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,18,9,"update","74.78","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,18,10,"update","74.22","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,18,1,"update","24.34","0.07","123.27","15.23","2449.50","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [51, 3]}"
"postgres","normal","steady",3,18,2,"update","23.42","0.07","128.08","16.18","2449.53","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [54, 1]}"
"postgres","normal","steady",3,18,3,"update","24.31","0.09","123.43","15.95","2449.49","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [57, 4]}"
"postgres","normal","steady",3,18,4,"update","23.85","0.07","125.80","15.59","2449.72","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [60, 1]}"
"postgres","normal","steady",3,18,5,"update","24.08","0.07","124.56","15.32","2449.59","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [63, 4]}"
"postgres","normal","steady",3,18,6,"update","23.74","0.07","126.38","15.55","2449.93","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [66, 2]}"
"postgres","normal","steady",3,18,7,"update","24.46","0.07","122.65","15.31","2449.45","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [69, 3]}"
"postgres","normal","steady",3,18,8,"update","21.68","0.07","138.40","17.92","2449.76","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [72, 4]}"
"postgres","normal","steady",3,18,9,"update","24.15","0.07","124.24","15.70","2449.47","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [75, 2]}"
"postgres","normal","steady",3,18,10,"update","45.21","0.07","66.35","8.37","2449.42","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [78, 2]}"
"postgres","normal","warmup",3,19,1,"update","73.51","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,19,2,"update","74.79","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,19,3,"update","74.41","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,19,4,"update","75.42","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,19,5,"update","74.44","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,19,6,"update","74.36","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,19,7,"update","75.49","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,19,8,"update","74.89","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,19,9,"update","74.49","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,19,10,"update","74.62","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,19,1,"update","24.08","0.07","124.59","16.05","2449.21","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [51, 5]}"
"postgres","normal","steady",3,19,2,"update","25.96","0.07","115.57","14.90","2449.20","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [54, 5]}"
"postgres","normal","steady",3,19,3,"update","24.10","0.07","124.49","16.06","2449.14","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [57, 4]}"
"postgres","normal","steady",3,19,4,"update","24.80","0.07","120.97","15.51","2449.59","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [60, 5]}"
"postgres","normal","steady",3,19,5,"update","24.31","0.07","123.41","15.40","2449.57","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [63, 4]}"
"postgres","normal","steady",3,19,6,"update","23.32","0.07","128.64","16.69","2449.80","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [66, 5]}"
"postgres","normal","steady",3,19,7,"update","24.15","0.07","124.21","15.55","2449.54","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [69, 5]}"
"postgres","normal","steady",3,19,8,"update","23.96","0.10","125.18","15.80","2449.45","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [72, 4]}"
"postgres","normal","steady",3,19,9,"update","24.13","0.07","124.32","15.28","2449.34","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [75, 5]}"
"postgres","normal","steady",3,19,10,"update","23.88","0.07","125.65","15.54","2449.36","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [78, 5]}"
"postgres","normal","warmup",3,20,1,"update","75.15","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,20,2,"update","74.38","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,20,3,"update","74.46","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,20,4,"update","74.80","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,20,5,"update","74.50","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,20,6,"update","74.59","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,20,7,"update","74.17","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,20,8,"update","74.76","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,20,9,"update","74.95","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,20,10,"update","74.54","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,20,1,"update","24.50","0.09","122.46","15.74","2449.36","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [51, ""upaertzelt@example.org.tmp""]}"
"postgres","normal","steady",3,20,2,"update","24.58","0.08","122.05","15.24","2449.56","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [54, ""herminetrub@example.com.tmp""]}"
"postgres","normal","steady",3,20,3,"update","24.13","0.09","124.35","15.80","2449.11","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [57, ""kaestergrazyna@example.org.tmp""]}"
"postgres","normal","steady",3,20,4,"update","24.60","0.08","121.95","15.76","2449.36","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [60, ""horst36@example.org.tmp""]}"
"postgres","normal","steady",3,20,5,"update","23.92","0.10","125.40","15.87","2449.72","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [63, ""adrewes@example.com.tmp""]}"
"postgres","normal","steady",3,20,6,"update","24.42","0.08","122.84","15.38","2449.41","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [66, ""leokadiagotthard@example.org.tmp""]}"
"postgres","normal","steady",3,20,7,"update","23.82","0.08","125.96","15.95","2449.19","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [69, ""lisbeth31@example.org.tmp""]}"
"postgres","normal","steady",3,20,8,"update","24.30","0.11","123.43","16.07","2449.37","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [72, ""haeringbirgid@example.net.tmp""]}"
"postgres","normal","steady",3,20,9,"update","24.11","0.08","124.45","16.00","2449.40","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [75, ""elifloos@example.org.tmp""]}"
"postgres","normal","steady",3,20,10,"update","24.39","0.08","123.01","15.88","2449.47","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [78, ""gustavniemeier@example.com.tmp""]}"
"postgres","normal","warmup",3,21,1,"delete","74.82","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,21,2,"delete","74.38","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,21,3,"delete","74.92","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,21,4,"delete","74.06","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,21,5,"delete","74.47","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,21,6,"delete","73.86","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,21,7,"delete","75.00","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,21,8,"delete","74.95","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,21,9,"delete","74.64","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,21,10,"delete","74.80","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,21,1,"delete","24.26","0.04","123.65","15.22","2449.44","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [51]}"
"postgres","normal","steady",3,21,2,"delete","23.77","0.04","126.23","15.63","2449.34","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [54]}"
"postgres","normal","steady",3,21,3,"delete","24.27","0.04","123.60","15.23","2449.49","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [57]}"
"postgres","normal","steady",3,21,4,"delete","23.86","0.04","125.71","16.08","2449.31","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [60]}"
"postgres","normal","steady",3,21,5,"delete","24.65","0.04","121.70","15.67","2449.53","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [63]}"
"postgres","normal","steady",3,21,6,"delete","24.04","0.04","124.77","15.54","2449.85","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [66]}"
"postgres","normal","steady",3,21,7,"delete","21.98","0.04","136.46","17.86","2449.86","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [69]}"
"postgres","normal","steady",3,21,8,"delete","23.91","0.04","125.49","16.00","2449.49","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [72]}"
"postgres","normal","steady",3,21,9,"delete","24.40","0.04","122.97","15.78","2449.44","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [75]}"
"postgres","normal","steady",3,21,10,"delete","23.89","0.05","125.56","15.64","2449.90","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [78]}"
"postgres","normal","warmup",3,22,1,"delete","75.30","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,22,2,"delete","74.74","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,22,3,"delete","74.31","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,22,4,"delete","74.44","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,22,5,"delete","75.31","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,22,6,"delete","75.13","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,22,7,"delete","75.48","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,22,8,"delete","74.59","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,22,9,"delete","74.29","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,22,10,"delete","74.70","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,22,1,"delete","24.05","0.07","124.76","15.64","2449.59","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [51]}"
"postgres","normal","steady",3,22,2,"delete","24.76","0.07","121.16","15.02","2449.43","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [54]}"
"postgres","normal","steady",3,22,3,"delete","23.35","0.07","128.47","16.30","2449.64","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [57]}"
"postgres","normal","steady",3,22,4,"delete","24.57","0.07","122.08","17.25","2449.57","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [60]}"
"postgres","normal","steady",3,22,5,"delete","24.31","0.07","123.43","16.04","2449.55","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [63]}"
"postgres","normal","steady",3,22,6,"delete","24.67","0.07","121.59","15.14","2449.41","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [66]}"
"postgres","normal","steady",3,22,7,"delete","24.36","0.07","123.14","16.19","2449.45","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [69]}"
"postgres","normal","steady",3,22,8,"delete","24.90","0.07","120.48","16.00","2449.58","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [72]}"
"postgres","normal","steady",3,22,9,"delete","24.02","0.10","124.88","16.93","2449.59","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [75]}"
"postgres","normal","steady",3,22,10,"delete","24.80","0.07","120.98","15.96","2449.54","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [78]}"
"postgres","normal","warmup",3,23,1,"delete","74.90","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,23,2,"delete","75.90","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,23,3,"delete","75.04","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,23,4,"delete","74.77","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,23,5,"delete","73.55","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,23,6,"delete","74.61","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,23,7,"delete","74.55","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,23,8,"delete","74.59","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,23,9,"delete","74.62","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,23,10,"delete","73.82","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,23,1,"delete","24.43","0.04","122.81","15.12","2449.64","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [51]}"
"postgres","normal","steady",3,23,2,"delete","23.95","0.04","125.25","15.66","2449.96","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [54]}"
"postgres","normal","steady",3,23,3,"delete","24.20","0.04","123.98","15.26","2449.88","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [57]}"
"postgres","normal","steady",3,23,4,"delete","23.98","0.04","125.09","15.95","2449.57","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [60]}"
"postgres","normal","steady",3,23,5,"delete","24.29","0.04","123.50","15.73","2449.47","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [63]}"
"postgres","normal","steady",3,23,6,"delete","24.21","0.05","123.90","15.36","2449.71","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [66]}"
"postgres","normal","steady",3,23,7,"delete","23.81","0.04","125.99","16.28","2449.61","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [69]}"
"postgres","normal","steady",3,23,8,"delete","24.00","0.04","125.02","15.82","2449.43","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [72]}"
"postgres","normal","steady",3,23,9,"delete","24.35","0.04","123.19","15.29","2449.14","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [75]}"
"postgres","normal","steady",3,23,10,"delete","24.06","0.04","124.69","15.43","2449.71","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [78]}"
"postgres","normal","warmup",3,24,1,"delete","75.33","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,24,2,"delete","75.29","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,24,3,"delete","74.36","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,24,4,"delete","74.80","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,24,5,"delete","75.52","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,24,6,"delete","73.08","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,24,7,"delete","75.15","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,24,8,"delete","74.15","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,24,9,"delete","74.76","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",3,24,10,"delete","75.42","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",3,24,1,"delete","24.04","0.06","124.79","17.94","2449.68","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [51]}"
"postgres","normal","steady",3,24,2,"delete","24.84","0.04","120.79","15.20","2449.65","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [54]}"
"postgres","normal","steady",3,24,3,"delete","23.79","0.04","126.09","15.80","2449.63","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [57]}"
"postgres","normal","steady",3,24,4,"delete","24.34","0.04","123.24","15.41","2449.49","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [60]}"
"postgres","normal","steady",3,24,5,"delete","43.53","0.04","68.91","8.67","2449.70","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [63]}"
"postgres","normal","steady",3,24,6,"delete","23.38","0.04","128.29","16.13","2449.44","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [66]}"
"postgres","normal","steady",3,24,7,"delete","24.01","0.04","124.94","15.41","2449.62","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [69]}"
"postgres","normal","steady",3,24,8,"delete","24.33","0.07","123.30","15.32","2449.55","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [72]}"
"postgres","normal","steady",3,24,9,"delete","24.37","0.04","123.10","15.20","2449.86","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [75]}"
"postgres","normal","steady",3,24,10,"delete","23.97","0.07","125.14","15.56","2449.67","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [78]}"
"postgres","normal","warmup",5,1,1,"simple","147.92","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,1,2,"simple","147.08","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,1,3,"simple","143.35","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,1,4,"simple","146.99","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,1,5,"simple","139.46","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,1,6,"simple","146.91","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,1,7,"simple","137.33","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,1,8,"simple","135.00","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,1,9,"simple","143.64","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,1,10,"simple","134.55","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","steady",5,1,1,"simple","96.05","2.21","52.06","9.16","2449.28","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,1,2,"simple","94.49","2.20","52.92","9.50","2449.67","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,1,3,"simple","95.99","2.20","52.09","9.53","2449.79","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,1,4,"simple","84.45","2.22","59.20","10.50","2449.66","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,1,5,"simple","92.05","2.23","54.32","10.90","2449.72","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,1,6,"simple","92.05","2.25","54.32","10.27","2449.40","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,1,7,"simple","75.70","2.21","66.05","11.93","2449.70","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,1,8,"simple","97.87","2.32","51.09","9.43","2450.07","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,1,9,"simple","86.92","2.23","57.53","10.35","2449.45","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,1,10,"simple","98.41","2.22","50.81","9.27","2449.77","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","warmup",5,2,1,"simple","96.92","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,2,2,"simple","92.98","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,2,3,"simple","96.12","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,2,4,"simple","96.00","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,2,5,"simple","94.40","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,2,6,"simple","95.15","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,2,7,"simple","96.07","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,2,8,"simple","91.99","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,2,9,"simple","95.47","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,2,10,"simple","96.91","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","steady",5,2,1,"simple","43.95","0.07","113.75","10.66","2449.64","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",5,2,2,"simple","43.46","0.07","115.05","11.32","2449.90","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",5,2,3,"simple","44.08","0.07","113.43","10.65","2449.70","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",5,2,4,"simple","44.84","0.09","111.52","10.30","2449.59","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",5,2,5,"simple","44.58","0.07","112.16","10.60","2449.90","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",5,2,6,"simple","44.96","0.07","111.21","10.30","2449.46","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",5,2,7,"simple","44.34","0.07","112.78","10.68","2449.57","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",5,2,8,"simple","45.19","0.07","110.63","10.15","2449.71","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",5,2,9,"simple","42.53","0.07","117.58","11.00","2449.66","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",5,2,10,"simple","44.99","0.08","111.13","10.06","2449.70","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","warmup",5,3,1,"simple","96.87","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,3,2,"simple","107.70","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,3,3,"simple","95.04","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,3,4,"simple","92.30","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,3,5,"simple","114.48","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,3,6,"simple","97.46","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,3,7,"simple","97.55","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,3,8,"simple","95.73","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,3,9,"simple","96.40","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",5,3,10,"simple","94.94","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","steady",5,3,1,"simple","45.86","0.20","109.04","11.10","2449.83","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [81, 66, ""Balthasar-Kranz-Ring 60"", ""Schwabmünchen"", ""97443"", ""Deutschland"", false]}"
"postgres","normal","steady",5,3,2,"simple","42.95","0.20","116.42","11.55","2449.72","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [81, 66, ""Balthasar-Kranz-Ring 60"", ""Schwabmünchen"", ""97443"", ""Deutschland"", false]}"
"postgres","normal","steady",5,3,3,"simple","45.84","0.19","109.08","10.59","2449.57","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [81, 66, ""Balthasar-Kranz-Ring 60"", ""Schwabmünchen"", ""97443"", ""Deutschland"", false]}"
"postgres","normal","steady",5,3,4,"simple","45.20","0.22","110.62","10.83","2449.55","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [81, 66, ""Balthasar-Kranz-Ring 60"", ""Schwabmünchen"", ""97443"", ""Deutschland"", false]}"
"postgres","normal","steady",5,3,5,"simple","46.76","0.19","106.93","10.53","2449.67","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [81, 66, ""Balthasar-Kranz-Ring 60"", ""Schwabmünchen"", ""97443"", ""Deutschland"", false]}"
"postgres","normal","steady",5,3,6,"simple","45.85","0.20","109.05","10.70","2449.45","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [81, 66, ""Balthasar-Kranz-Ring 60"", ""Schwabmünchen"", ""97443"", ""Deutschland"", false]}"
"postgres","normal","steady",5,3,7,"simple","46.15","0.19","108.35","10.58","2449.82","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [81, 66, ""Balthasar-Kranz-Ring 60"", ""Schwabmünchen"", ""97443"", ""Deutschland"", false]}"
"postgres","normal","steady",5,3,8,"simple","45.39","0.19","110.16","10.72","2449.62","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [81, 66, ""Balthasar-Kranz-Ring 60"", ""Schwabmünchen"", ""97443"", ""Deutschland"", false]}"
"postgres","normal","steady",5,3,9,"simple","46.76","0.19","106.94","10.48","2449.51","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [81, 66, ""Balthasar-Kranz-Ring 60"", ""Schwabmünchen"", ""97443"", ""Deutschland"", false]}"
"postgres","normal","steady",5,3,10,"simple","45.24","0.19","110.52","10.97","2450.04","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [81, 66, ""Balthasar-Kranz-Ring 60"", ""Schwabmünchen"", ""97443"", ""Deutschland"", false]}"
"postgres","normal","warmup",5,4,1,"medium","100.35","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,4,2,"medium","111.33","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,4,3,"medium","101.19","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,4,4,"medium","100.67","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,4,5,"medium","100.50","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,4,6,"medium","99.24","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,4,7,"medium","99.29","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,4,8,"medium","98.13","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,4,9,"medium","96.97","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,4,10,"medium","99.87","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,4,1,"medium","48.13","0.49","103.88","11.29","2449.87","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,4,2,"medium","48.82","0.46","102.42","10.98","2449.81","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,4,3,"medium","47.98","0.47","104.21","11.08","2449.97","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,4,4,"medium","47.90","0.47","104.38","11.27","2449.63","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,4,5,"medium","47.82","0.48","104.56","11.48","2449.47","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,4,6,"medium","49.98","0.51","100.04","11.04","2449.51","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,4,7,"medium","49.62","0.48","100.77","11.50","2449.52","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,4,8,"medium","48.84","0.47","102.37","11.06","2449.70","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,4,9,"medium","50.41","0.47","99.19","10.70","2449.76","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",5,4,10,"medium","48.53","0.47","103.04","11.07","2449.65","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","warmup",5,5,1,"medium","121.42","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,5,2,"medium","144.94","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,5,3,"medium","129.46","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,5,4,"medium","122.53","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,5,5,"medium","133.76","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,5,6,"medium","124.55","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,5,7,"medium","140.22","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,5,8,"medium","129.35","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,5,9,"medium","143.97","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,5,10,"medium","123.98","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,5,1,"medium","72.87","16.52","68.61","24.20","2449.79","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",5,5,2,"medium","72.52","17.02","68.94","23.88","2449.85","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",5,5,3,"medium","69.97","16.37","71.46","25.34","2449.82","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",5,5,4,"medium","102.10","16.52","48.97","17.47","2449.67","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",5,5,5,"medium","71.27","16.63","70.16","24.44","2449.84","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",5,5,6,"medium","72.19","16.43","69.27","24.36","2449.66","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",5,5,7,"medium","76.35","16.61","65.49","22.71","2449.68","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",5,5,8,"medium","69.25","16.12","72.20","24.98","2449.58","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",5,5,9,"medium","74.40","16.66","67.21","22.83","2449.64","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",5,5,10,"medium","76.08","16.10","65.72","22.13","2449.80","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","warmup",5,6,1,"medium","91.52","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,6,2,"medium","97.76","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,6,3,"medium","95.86","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,6,4,"medium","95.38","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,6,5,"medium","95.28","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,6,6,"medium","96.46","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,6,7,"medium","95.84","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,6,8,"medium","92.51","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,6,9,"medium","95.37","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,6,10,"medium","94.92","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,6,1,"medium","45.15","0.07","110.74","10.55","2449.83","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",5,6,2,"medium","44.38","0.07","112.66","10.49","2449.90","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",5,6,3,"medium","45.45","0.07","110.00","10.34","2449.84","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",5,6,4,"medium","45.17","0.07","110.68","10.47","2449.50","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",5,6,5,"medium","44.63","0.07","112.03","10.54","2449.99","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",5,6,6,"medium","45.17","0.07","110.70","10.27","2449.64","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",5,6,7,"medium","44.18","0.07","113.18","10.90","2450.00","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",5,6,8,"medium","45.20","0.07","110.62","10.59","2450.17","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",5,6,9,"medium","44.42","0.07","112.55","10.48","2449.96","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","steady",5,6,10,"medium","44.90","0.07","111.37","10.47","2449.96","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 100, ""first"": [107, 456, 1191971, 4, ""2025-07-10 21:47:45""]}"
"postgres","normal","warmup",5,7,1,"complex","119.78","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,7,2,"complex","101.73","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,7,3,"complex","105.68","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,7,4,"complex","103.39","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,7,5,"complex","96.16","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,7,6,"complex","105.20","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,7,7,"complex","104.05","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,7,8,"complex","100.71","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,7,9,"complex","102.14","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,7,10,"complex","99.80","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,7,1,"complex","49.80","3.20","100.39","12.78","2449.82","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",5,7,2,"complex","53.15","3.17","94.07","11.78","2449.93","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",5,7,3,"complex","49.36","3.16","101.29","12.72","2449.69","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",5,7,4,"complex","49.18","3.15","101.67","12.97","2449.62","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",5,7,5,"complex","49.73","2.94","100.53","12.69","2449.73","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",5,7,6,"complex","48.74","3.21","102.58","12.93","2449.53","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",5,7,7,"complex","49.45","3.22","101.12","13.08","2449.66","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",5,7,8,"complex","52.98","3.25","94.37","11.89","2449.75","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",5,7,9,"complex","48.75","3.17","102.55","13.03","2449.95","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",5,7,10,"complex","52.27","3.23","95.66","12.33","2449.97","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","warmup",5,8,1,"complex","106.70","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,8,2,"complex","94.29","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,8,3,"complex","97.83","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,8,4,"complex","97.43","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,8,5,"complex","97.67","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,8,6,"complex","98.03","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,8,7,"complex","98.41","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,8,8,"complex","97.04","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,8,9,"complex","95.69","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,8,10,"complex","97.38","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,8,1,"complex","46.96","0.70","106.48","12.44","2449.91","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 28, ""first"": [285479, ""5200PCS Beads for Jewelry Making,3800pcs 4mm Glass Seed Beads 24 Colors and 1200 pcs Letter Beads，Expression Beads and Number Beads DIY Bracelet Making kit，with Cord and Pendant"", ""5.0000000000000000""]}"
"postgres","normal","steady",5,8,2,"complex","46.82","0.72","106.79","12.42","2449.93","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 28, ""first"": [285479, ""5200PCS Beads for Jewelry Making,3800pcs 4mm Glass Seed Beads 24 Colors and 1200 pcs Letter Beads，Expression Beads and Number Beads DIY Bracelet Making kit，with Cord and Pendant"", ""5.0000000000000000""]}"
"postgres","normal","steady",5,8,3,"complex","49.69","0.66","100.63","11.46","2449.97","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 28, ""first"": [285479, ""5200PCS Beads for Jewelry Making,3800pcs 4mm Glass Seed Beads 24 Colors and 1200 pcs Letter Beads，Expression Beads and Number Beads DIY Bracelet Making kit，with Cord and Pendant"", ""5.0000000000000000""]}"
"postgres","normal","steady",5,8,4,"complex","46.09","0.70","108.49","12.83","2450.08","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 28, ""first"": [285479, ""5200PCS Beads for Jewelry Making,3800pcs 4mm Glass Seed Beads 24 Colors and 1200 pcs Letter Beads，Expression Beads and Number Beads DIY Bracelet Making kit，with Cord and Pendant"", ""5.0000000000000000""]}"
"postgres","normal","steady",5,8,5,"complex","50.02","0.68","99.96","11.53","2449.97","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 28, ""first"": [285479, ""5200PCS Beads for Jewelry Making,3800pcs 4mm Glass Seed Beads 24 Colors and 1200 pcs Letter Beads，Expression Beads and Number Beads DIY Bracelet Making kit，with Cord and Pendant"", ""5.0000000000000000""]}"
"postgres","normal","steady",5,8,6,"complex","47.25","0.67","105.82","12.41","2449.57","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 28, ""first"": [285479, ""5200PCS Beads for Jewelry Making,3800pcs 4mm Glass Seed Beads 24 Colors and 1200 pcs Letter Beads，Expression Beads and Number Beads DIY Bracelet Making kit，with Cord and Pendant"", ""5.0000000000000000""]}"
"postgres","normal","steady",5,8,7,"complex","47.83","0.67","104.54","12.04","2450.21","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 28, ""first"": [285479, ""5200PCS Beads for Jewelry Making,3800pcs 4mm Glass Seed Beads 24 Colors and 1200 pcs Letter Beads，Expression Beads and Number Beads DIY Bracelet Making kit，with Cord and Pendant"", ""5.0000000000000000""]}"
"postgres","normal","steady",5,8,8,"complex","47.68","0.68","104.86","12.26","2450.09","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 28, ""first"": [285479, ""5200PCS Beads for Jewelry Making,3800pcs 4mm Glass Seed Beads 24 Colors and 1200 pcs Letter Beads，Expression Beads and Number Beads DIY Bracelet Making kit，with Cord and Pendant"", ""5.0000000000000000""]}"
"postgres","normal","steady",5,8,9,"complex","47.89","0.68","104.40","12.31","2449.90","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 28, ""first"": [285479, ""5200PCS Beads for Jewelry Making,3800pcs 4mm Glass Seed Beads 24 Colors and 1200 pcs Letter Beads，Expression Beads and Number Beads DIY Bracelet Making kit，with Cord and Pendant"", ""5.0000000000000000""]}"
"postgres","normal","steady",5,8,10,"complex","48.26","0.67","103.61","12.23","2449.76","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 28, ""first"": [285479, ""5200PCS Beads for Jewelry Making,3800pcs 4mm Glass Seed Beads 24 Colors and 1200 pcs Letter Beads，Expression Beads and Number Beads DIY Bracelet Making kit，with Cord and Pendant"", ""5.0000000000000000""]}"
"postgres","normal","warmup",5,9,1,"complex","98.02","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,9,2,"complex","117.03","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,9,3,"complex","97.81","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,9,4,"complex","99.36","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,9,5,"complex","97.17","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,9,6,"complex","96.99","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,9,7,"complex","94.45","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,9,8,"complex","115.78","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,9,9,"complex","98.24","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,9,10,"complex","97.16","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,9,1,"complex","46.17","0.60","108.30","11.03","2449.81","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",5,9,2,"complex","45.53","0.60","109.82","11.13","2449.76","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",5,9,3,"complex","44.59","0.59","112.14","11.72","2450.12","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",5,9,4,"complex","44.41","0.63","112.59","11.78","2450.17","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",5,9,5,"complex","45.78","0.58","109.22","10.95","2449.56","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",5,9,6,"complex","46.83","0.59","106.76","10.81","2449.64","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",5,9,7,"complex","47.49","0.61","105.29","10.72","2450.07","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",5,9,8,"complex","45.30","0.59","110.37","11.20","2450.26","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",5,9,9,"complex","47.72","0.59","104.78","10.72","2450.06","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",5,9,10,"complex","45.36","0.60","110.22","12.05","2449.75","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","warmup",5,10,1,"very_complex","105.98","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,10,2,"very_complex","98.97","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,10,3,"very_complex","103.88","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,10,4,"very_complex","97.85","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,10,5,"very_complex","99.94","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,10,6,"very_complex","98.82","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,10,7,"very_complex","100.59","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,10,8,"very_complex","96.04","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,10,9,"very_complex","98.83","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,10,10,"very_complex","98.61","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,10,1,"very_complex","47.49","2.61","105.28","12.73","2449.74","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,10,2,"very_complex","48.11","2.63","103.92","12.25","2449.71","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,10,3,"very_complex","47.81","2.66","104.59","12.38","2449.73","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,10,4,"very_complex","48.27","2.57","103.59","12.30","2450.20","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,10,5,"very_complex","47.06","2.66","106.24","12.45","2450.04","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,10,6,"very_complex","48.22","2.63","103.68","12.78","2449.83","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,10,7,"very_complex","47.60","2.63","105.04","12.56","2450.23","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,10,8,"very_complex","56.18","2.65","89.00","11.20","2449.96","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,10,9,"very_complex","45.86","2.63","109.02","13.11","2449.94","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,10,10,"very_complex","55.59","2.62","89.95","10.61","2449.90","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","warmup",5,11,1,"very_complex","99.42","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,11,2,"very_complex","100.45","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,11,3,"very_complex","99.84","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,11,4,"very_complex","96.92","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,11,5,"very_complex","100.11","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,11,6,"very_complex","99.55","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,11,7,"very_complex","100.42","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,11,8,"very_complex","99.86","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,11,9,"very_complex","104.85","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,11,10,"very_complex","101.94","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,11,1,"very_complex","48.81","4.53","102.44","13.09","2449.66","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",5,11,2,"very_complex","50.37","4.43","99.27","13.02","2450.17","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",5,11,3,"very_complex","48.61","4.45","102.86","13.47","2449.71","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",5,11,4,"very_complex","52.18","4.44","95.82","12.42","2450.12","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",5,11,5,"very_complex","48.87","4.48","102.31","13.12","2450.18","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",5,11,6,"very_complex","49.28","4.43","101.47","13.00","2450.21","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",5,11,7,"very_complex","48.55","4.44","102.99","13.29","2450.06","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",5,11,8,"very_complex","49.33","4.50","101.36","13.13","2449.83","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",5,11,9,"very_complex","48.58","4.53","102.93","13.76","2449.96","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",5,11,10,"very_complex","49.29","4.42","101.45","13.08","2449.89","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","warmup",5,12,1,"very_complex","99.74","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,12,2,"very_complex","120.64","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,12,3,"very_complex","95.53","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,12,4,"very_complex","100.30","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,12,5,"very_complex","96.41","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,12,6,"very_complex","99.42","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,12,7,"very_complex","99.73","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,12,8,"very_complex","100.39","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,12,9,"very_complex","122.20","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,12,10,"very_complex","99.63","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,12,1,"very_complex","48.26","2.66","103.60","12.45","2449.81","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,12,2,"very_complex","47.60","2.64","105.05","12.94","2450.10","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,12,3,"very_complex","52.39","2.85","95.44","11.65","2450.03","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,12,4,"very_complex","50.09","2.65","99.82","12.86","2449.85","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,12,5,"very_complex","47.15","2.62","106.04","12.98","2450.26","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,12,6,"very_complex","50.92","2.62","98.19","11.76","2449.91","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,12,7,"very_complex","48.23","2.58","103.68","12.30","2449.93","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,12,8,"very_complex","47.21","2.61","105.92","12.57","2449.91","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,12,9,"very_complex","48.60","2.57","102.88","12.15","2449.84","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",5,12,10,"very_complex","47.52","2.65","105.23","12.45","2449.95","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","warmup",5,13,1,"create","98.03","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,13,2,"create","96.04","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,13,3,"create","107.54","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,13,4,"create","95.58","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,13,5,"create","94.89","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,13,6,"create","96.22","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,13,7,"create","95.87","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,13,8,"create","96.17","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,13,9,"create","96.92","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,13,10,"create","95.97","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,13,1,"create","44.95","0.09","111.23","10.82","2450.09","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1498]}"
"postgres","normal","steady",5,13,2,"create","46.51","0.10","107.49","10.40","2450.17","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1504]}"
"postgres","normal","steady",5,13,3,"create","44.93","0.12","111.29","10.74","2450.14","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1510]}"
"postgres","normal","steady",5,13,4,"create","43.86","0.24","114.00","11.18","2449.98","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1516]}"
"postgres","normal","steady",5,13,5,"create","44.99","0.10","111.13","10.74","2449.90","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1522]}"
"postgres","normal","steady",5,13,6,"create","45.78","0.10","109.23","10.63","2450.03","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1528]}"
"postgres","normal","steady",5,13,7,"create","45.16","0.10","110.72","10.65","2449.88","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1534]}"
"postgres","normal","steady",5,13,8,"create","45.91","0.09","108.91","10.61","2450.18","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1540]}"
"postgres","normal","steady",5,13,9,"create","46.44","0.09","107.65","11.25","2450.38","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1546]}"
"postgres","normal","steady",5,13,10,"create","48.57","0.09","102.94","10.22","2450.04","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1552]}"
"postgres","normal","warmup",5,14,1,"create","96.98","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,14,2,"create","93.88","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,14,3,"create","97.02","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,14,4,"create","95.54","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,14,5,"create","96.54","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,14,6,"create","95.19","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,14,7,"create","97.22","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,14,8,"create","96.44","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,14,9,"create","93.23","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,14,10,"create","96.95","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,14,1,"create","45.97","0.07","108.77","10.59","2450.10","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2134]}"
"postgres","normal","steady",5,14,2,"create","45.03","0.11","111.03","11.68","2450.13","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2140]}"
"postgres","normal","steady",5,14,3,"create","45.87","0.07","109.00","10.59","2450.29","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2146]}"
"postgres","normal","steady",5,14,4,"create","44.92","0.10","111.30","10.67","2450.18","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2152]}"
"postgres","normal","steady",5,14,5,"create","46.35","0.07","107.87","10.27","2449.91","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2158]}"
"postgres","normal","steady",5,14,6,"create","45.45","0.07","110.01","10.81","2450.21","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2164]}"
"postgres","normal","steady",5,14,7,"create","43.12","0.07","115.96","11.24","2450.04","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2170]}"
"postgres","normal","steady",5,14,8,"create","45.89","0.08","108.95","10.47","2450.05","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2176]}"
"postgres","normal","steady",5,14,9,"create","46.43","0.07","107.70","10.32","2450.32","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2182]}"
"postgres","normal","steady",5,14,10,"create","45.07","0.07","110.93","10.70","2450.12","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2188]}"
"postgres","normal","warmup",5,15,1,"create","97.39","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,15,2,"create","97.59","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,15,3,"create","96.05","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,15,4,"create","107.45","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,15,5,"create","97.20","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,15,6,"create","95.95","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,15,7,"create","95.99","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,15,8,"create","95.92","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,15,9,"create","99.68","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,15,10,"create","96.98","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,15,1,"create","44.44","0.10","112.51","11.40","2449.97","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1674]}"
"postgres","normal","steady",5,15,2,"create","46.64","0.09","107.21","10.60","2450.15","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1680]}"
"postgres","normal","steady",5,15,3,"create","46.59","0.10","107.32","10.87","2450.18","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1686]}"
"postgres","normal","steady",5,15,4,"create","47.16","0.09","106.02","10.64","2449.93","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1692]}"
"postgres","normal","steady",5,15,5,"create","62.84","0.09","79.56","7.95","2449.92","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1698]}"
"postgres","normal","steady",5,15,6,"create","46.29","0.10","108.01","10.60","2450.19","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1704]}"
"postgres","normal","steady",5,15,7,"create","45.75","0.10","109.28","10.83","2450.37","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1710]}"
"postgres","normal","steady",5,15,8,"create","46.59","0.09","107.33","10.58","2450.32","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1716]}"
"postgres","normal","steady",5,15,9,"create","46.01","0.09","108.67","10.78","2450.36","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1722]}"
"postgres","normal","steady",5,15,10,"create","45.69","0.10","109.42","10.87","2449.87","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1728]}"
"postgres","normal","warmup",5,16,1,"create","96.64","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,16,2,"create","96.03","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,16,3,"create","97.11","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,16,4,"create","118.73","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,16,5,"create","96.11","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,16,6,"create","96.65","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,16,7,"create","94.07","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,16,8,"create","96.83","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,16,9,"create","96.21","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,16,10,"create","96.65","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,16,1,"create","46.71","0.14","107.03","10.50","2450.16","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10673]}"
"postgres","normal","steady",5,16,2,"create","45.56","0.09","109.75","10.67","2450.06","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10679]}"
"postgres","normal","steady",5,16,3,"create","46.02","0.10","108.65","10.61","2450.19","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10685]}"
"postgres","normal","steady",5,16,4,"create","45.09","0.10","110.88","10.69","2450.36","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10691]}"
"postgres","normal","steady",5,16,5,"create","46.10","0.10","108.46","10.46","2450.20","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10697]}"
"postgres","normal","steady",5,16,6,"create","64.43","0.09","77.61","7.83","2450.24","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10703]}"
"postgres","normal","steady",5,16,7,"create","46.20","0.09","108.22","10.52","2450.47","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10709]}"
"postgres","normal","steady",5,16,8,"create","45.44","0.11","110.04","10.73","2450.48","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10715]}"
"postgres","normal","steady",5,16,9,"create","45.83","0.09","109.10","10.43","2450.12","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10721]}"
"postgres","normal","steady",5,16,10,"create","45.94","0.09","108.83","10.78","2450.15","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10727]}"
"postgres","normal","warmup",5,17,1,"update","95.70","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,17,2,"update","95.79","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,17,3,"update","96.72","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,17,4,"update","95.87","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,17,5,"update","96.48","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,17,6,"update","95.88","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,17,7,"update","95.84","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,17,8,"update","95.71","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,17,9,"update","95.94","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,17,10,"update","95.38","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,17,1,"update","45.43","0.07","110.06","10.39","2450.08","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 91]}"
"postgres","normal","steady",5,17,2,"update","45.00","0.07","111.12","10.57","2450.41","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 96]}"
"postgres","normal","steady",5,17,3,"update","45.94","0.07","108.83","10.23","2450.07","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 101]}"
"postgres","normal","steady",5,17,4,"update","45.59","0.07","109.67","10.25","2450.26","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 106]}"
"postgres","normal","steady",5,17,5,"update","45.23","0.09","110.55","10.48","2449.97","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 111]}"
"postgres","normal","steady",5,17,6,"update","45.55","0.07","109.76","10.40","2450.19","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 116]}"
"postgres","normal","steady",5,17,7,"update","45.01","0.07","111.09","10.46","2450.28","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 121]}"
"postgres","normal","steady",5,17,8,"update","45.56","0.07","109.73","10.35","2450.19","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 126]}"
"postgres","normal","steady",5,17,9,"update","46.04","0.07","108.60","11.39","2450.17","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 131]}"
"postgres","normal","steady",5,17,10,"update","45.47","0.07","109.95","10.52","2449.86","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 136]}"
"postgres","normal","warmup",5,18,1,"update","95.78","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,18,2,"update","95.63","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,18,3,"update","96.61","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,18,4,"update","95.22","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,18,5,"update","95.53","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,18,6,"update","95.58","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,18,7,"update","97.17","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,18,8,"update","95.57","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,18,9,"update","95.70","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,18,10,"update","93.53","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,18,1,"update","45.69","0.06","109.43","10.39","2450.42","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [131, 3]}"
"postgres","normal","steady",5,18,2,"update","44.92","0.09","111.31","10.64","2450.36","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [136, 2]}"
"postgres","normal","steady",5,18,3,"update","45.71","0.06","109.39","10.49","2450.18","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [141, 2]}"
"postgres","normal","steady",5,18,4,"update","45.17","0.06","110.68","10.48","2450.07","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [146, 1]}"
"postgres","normal","steady",5,18,5,"update","43.56","0.06","114.77","11.36","2450.29","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [151, 4]}"
"postgres","normal","steady",5,18,6,"update","45.39","0.06","110.16","10.55","2450.34","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [156, 1]}"
"postgres","normal","steady",5,18,7,"update","43.40","0.06","115.22","12.41","2449.99","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [84, 3]}"
"postgres","normal","steady",5,18,8,"update","45.67","0.06","109.48","10.60","2450.40","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [89, 1]}"
"postgres","normal","steady",5,18,9,"update","45.65","0.06","109.52","10.61","2450.29","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [89, 1]}"
"postgres","normal","steady",5,18,10,"update","43.29","0.07","115.50","11.26","2450.27","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [89, 1]}"
"postgres","normal","warmup",5,19,1,"update","96.29","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,19,2,"update","96.17","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,19,3,"update","95.34","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,19,4,"update","93.46","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,19,5,"update","91.73","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,19,6,"update","96.52","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,19,7,"update","97.33","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,19,8,"update","96.41","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,19,9,"update","95.50","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,19,10,"update","95.88","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,19,1,"update","44.90","0.06","111.35","10.42","2450.32","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [131, 5]}"
"postgres","normal","steady",5,19,2,"update","45.66","0.06","109.50","10.43","2450.62","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [136, 4]}"
"postgres","normal","steady",5,19,3,"update","45.02","0.06","111.06","10.38","2450.42","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [141, 4]}"
"postgres","normal","steady",5,19,4,"update","42.30","0.06","118.19","11.23","2450.37","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [146, 4]}"
"postgres","normal","steady",5,19,5,"update","44.97","0.09","111.19","10.45","2450.30","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [151, 5]}"
"postgres","normal","steady",5,19,6,"update","45.94","0.06","108.83","10.30","2450.09","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [156, 4]}"
"postgres","normal","steady",5,19,7,"update","44.66","0.06","111.97","10.47","2450.86","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [84, 8]}"
"postgres","normal","steady",5,19,8,"update","45.91","0.06","108.90","10.18","2450.40","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [89, 8]}"
"postgres","normal","steady",5,19,9,"update","39.83","0.06","125.54","11.95","2450.43","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [94, 7]}"
"postgres","normal","steady",5,19,10,"update","46.06","0.07","108.56","10.24","2450.06","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [99, 8]}"
"postgres","normal","warmup",5,20,1,"update","96.68","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,20,2,"update","96.53","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,20,3,"update","96.03","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,20,4,"update","95.55","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,20,5,"update","96.17","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,20,6,"update","94.07","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,20,7,"update","93.35","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,20,8,"update","96.03","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,20,9,"update","95.84","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,20,10,"update","96.22","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,20,1,"update","45.71","0.08","109.39","10.43","2450.44","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [41, ""pzahn@example.net.tmp.tmp""]}"
"postgres","normal","steady",5,20,2,"update","43.54","0.08","114.83","11.06","2450.67","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [47, ""ilonkascholtz@example.net.tmp.tmp""]}"
"postgres","normal","steady",5,20,3,"update","45.08","0.08","110.91","10.51","2450.42","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [53, ""monika96@example.org.tmp.tmp""]}"
"postgres","normal","steady",5,20,4,"update","46.79","0.08","106.87","10.26","2450.23","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [58, ""wreichmann@example.net.tmp.tmp""]}"
"postgres","normal","steady",5,20,5,"update","46.55","0.08","107.42","10.59","2450.50","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [64, ""fedorzirme@example.org.tmp.tmp""]}"
"postgres","normal","steady",5,20,6,"update","44.23","0.08","113.05","10.68","2450.40","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [69, ""lisbeth31@example.org.tmp.tmp""]}"
"postgres","normal","steady",5,20,7,"update","45.56","0.08","109.75","10.37","2450.82","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [75, ""elifloos@example.org.tmp.tmp""]}"
"postgres","normal","steady",5,20,8,"update","44.76","0.08","111.71","10.53","2450.54","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [80, ""erdmutehande@example.org.tmp.tmp""]}"
"postgres","normal","steady",5,20,9,"update","46.37","0.08","107.82","10.35","2450.63","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [86, ""ahaenel@example.org.tmp.tmp""]}"
"postgres","normal","steady",5,20,10,"update","45.12","0.08","110.80","10.51","2450.58","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [91, ""babettehamann@example.net.tmp.tmp""]}"
"postgres","normal","warmup",5,21,1,"delete","98.33","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,21,2,"delete","95.76","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,21,3,"delete","95.31","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,21,4,"delete","95.48","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,21,5,"delete","96.79","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,21,6,"delete","95.76","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,21,7,"delete","111.87","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,21,8,"delete","96.21","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,21,9,"delete","96.27","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,21,10,"delete","95.36","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,21,1,"delete","45.93","0.04","108.86","10.61","2450.58","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [131]}"
"postgres","normal","steady",5,21,2,"delete","45.81","0.04","109.15","10.39","2450.42","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [136]}"
"postgres","normal","steady",5,21,3,"delete","45.18","0.04","110.67","10.61","2450.56","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [141]}"
"postgres","normal","steady",5,21,4,"delete","46.29","0.04","108.01","10.20","2450.29","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [146]}"
"postgres","normal","steady",5,21,5,"delete","46.38","0.04","107.82","10.25","2450.50","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [151]}"
"postgres","normal","steady",5,21,6,"delete","43.72","0.04","114.36","11.05","2450.48","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [156]}"
"postgres","normal","steady",5,21,7,"delete","46.39","0.04","107.78","10.53","2450.49","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [161]}"
"postgres","normal","steady",5,21,8,"delete","45.88","0.04","108.99","10.33","2450.48","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [166]}"
"postgres","normal","steady",5,21,9,"delete","44.91","0.04","111.33","10.70","2450.29","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [171]}"
"postgres","normal","steady",5,21,10,"delete","45.83","0.04","109.10","10.59","2450.14","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [176]}"
"postgres","normal","warmup",5,22,1,"delete","97.52","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,22,2,"delete","97.43","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,22,3,"delete","94.77","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,22,4,"delete","96.45","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,22,5,"delete","96.39","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,22,6,"delete","97.31","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,22,7,"delete","95.97","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,22,8,"delete","95.55","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,22,9,"delete","97.20","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,22,10,"delete","96.77","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,22,1,"delete","46.25","0.06","108.12","10.47","2450.60","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [131]}"
"postgres","normal","steady",5,22,2,"delete","45.96","0.06","108.80","10.64","2450.37","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [136]}"
"postgres","normal","steady",5,22,3,"delete","45.09","0.06","110.90","10.55","2450.61","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [141]}"
"postgres","normal","steady",5,22,4,"delete","45.95","0.06","108.82","10.30","2450.45","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [146]}"
"postgres","normal","steady",5,22,5,"delete","43.34","0.06","115.38","11.12","2450.59","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [151]}"
"postgres","normal","steady",5,22,6,"delete","45.73","0.07","109.34","10.56","2450.59","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [156]}"
"postgres","normal","steady",5,22,7,"delete","45.93","0.06","108.86","10.43","2450.46","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [161]}"
"postgres","normal","steady",5,22,8,"delete","45.51","0.05","109.86","10.53","2450.25","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [166]}"
"postgres","normal","steady",5,22,9,"delete","45.79","0.05","109.18","10.42","2450.63","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [171]}"
"postgres","normal","steady",5,22,10,"delete","46.27","0.05","108.07","10.66","2450.52","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 1, ""first"": [176]}"
"postgres","normal","warmup",5,23,1,"delete","98.18","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,23,2,"delete","100.11","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,23,3,"delete","95.47","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,23,4,"delete","93.72","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,23,5,"delete","95.62","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,23,6,"delete","98.80","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,23,7,"delete","95.53","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,23,8,"delete","95.87","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,23,9,"delete","95.70","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,23,10,"delete","95.28","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,23,1,"delete","44.71","0.04","111.83","10.65","2450.71","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [131]}"
"postgres","normal","steady",5,23,2,"delete","45.99","0.04","108.73","10.43","2450.40","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [136]}"
"postgres","normal","steady",5,23,3,"delete","47.01","0.04","106.37","10.72","2450.50","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [141]}"
"postgres","normal","steady",5,23,4,"delete","44.16","0.04","113.22","11.22","2450.51","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [146]}"
"postgres","normal","steady",5,23,5,"delete","46.10","0.04","108.45","10.50","2450.68","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [151]}"
"postgres","normal","steady",5,23,6,"delete","45.16","0.04","110.71","10.60","2450.20","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [156]}"
"postgres","normal","steady",5,23,7,"delete","46.01","0.04","108.68","10.35","2450.74","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [161]}"
"postgres","normal","steady",5,23,8,"delete","44.97","0.04","111.18","10.47","2450.52","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [166]}"
"postgres","normal","steady",5,23,9,"delete","43.76","0.04","114.26","11.21","2450.66","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [171]}"
"postgres","normal","steady",5,23,10,"delete","44.94","0.04","111.27","11.76","2450.50","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [176]}"
"postgres","normal","warmup",5,24,1,"delete","96.63","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,24,2,"delete","95.21","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,24,3,"delete","95.64","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,24,4,"delete","95.82","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,24,5,"delete","96.94","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,24,6,"delete","95.78","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,24,7,"delete","95.49","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,24,8,"delete","93.34","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,24,9,"delete","96.16","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",5,24,10,"delete","95.10","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",5,24,1,"delete","45.16","0.04","110.71","10.48","2450.60","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [131]}"
"postgres","normal","steady",5,24,2,"delete","43.79","0.08","114.17","11.22","2450.55","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [136]}"
"postgres","normal","steady",5,24,3,"delete","49.48","0.04","101.05","9.38","2450.81","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [141]}"
"postgres","normal","steady",5,24,4,"delete","47.66","0.04","104.92","9.81","2450.46","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [146]}"
"postgres","normal","steady",5,24,5,"delete","49.63","0.04","100.75","9.57","2450.68","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [151]}"
"postgres","normal","steady",5,24,6,"delete","46.16","0.04","108.32","10.19","2450.58","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [156]}"
"postgres","normal","steady",5,24,7,"delete","45.04","0.04","111.01","10.41","2450.65","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [161]}"
"postgres","normal","steady",5,24,8,"delete","45.73","0.04","109.33","10.16","2450.47","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [166]}"
"postgres","normal","steady",5,24,9,"delete","44.78","0.04","111.65","10.61","2450.58","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [171]}"
"postgres","normal","steady",5,24,10,"delete","46.44","0.04","107.67","10.11","2450.33","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [176]}"
"postgres","normal","warmup",10,1,1,"simple","241.05","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,1,2,"simple","216.34","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,1,3,"simple","210.61","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,1,4,"simple","206.70","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,1,5,"simple","221.14","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,1,6,"simple","206.30","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,1,7,"simple","232.05","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,1,8,"simple","226.09","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,1,9,"simple","232.90","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,1,10,"simple","238.56","nan","nan","nan","nan","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""note"": ""warmup""}"
"postgres","normal","steady",10,1,1,"simple","196.06","2.20","51.01","8.11","2450.35","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,1,2,"simple","162.82","2.20","61.42","10.40","2450.32","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,1,3,"simple","189.26","2.20","52.84","8.49","2450.63","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,1,4,"simple","171.43","2.15","58.33","9.25","2450.72","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,1,5,"simple","162.84","2.22","61.41","9.91","2450.37","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,1,6,"simple","176.43","2.20","56.68","9.99","2450.29","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,1,7,"simple","205.79","2.23","48.59","7.90","2450.47","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,1,8,"simple","177.89","2.24","56.21","9.22","2450.44","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,1,9,"simple","173.80","2.24","57.54","8.87","2450.72","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,1,10,"simple","172.77","2.26","57.88","9.11","2450.14","443.00","SELECT id, name, price, stock, created_at, updated_at FROM products ORDER BY id LIMIT 10000;","{""rows"": 10000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","warmup",10,2,1,"simple","138.26","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,2,2,"simple","137.62","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,2,3,"simple","138.50","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,2,4,"simple","139.52","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,2,5,"simple","139.08","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,2,6,"simple","137.30","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,2,7,"simple","130.01","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,2,8,"simple","136.93","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,2,9,"simple","157.29","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,2,10,"simple","133.49","nan","nan","nan","nan","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""note"": ""warmup""}"
"postgres","normal","steady",10,2,1,"simple","86.31","0.07","115.86","7.47","2447.28","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",10,2,2,"simple","87.83","0.08","113.85","7.83","2447.29","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",10,2,3,"simple","82.53","0.07","121.17","8.02","2447.37","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",10,2,4,"simple","86.07","0.07","116.18","7.49","2446.98","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",10,2,5,"simple","86.53","0.07","115.56","7.46","2447.31","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",10,2,6,"simple","85.43","0.07","117.05","7.52","2447.31","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",10,2,7,"simple","87.69","0.07","114.03","7.40","2447.17","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",10,2,8,"simple","94.56","0.12","105.76","6.77","2447.32","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",10,2,9,"simple","87.54","0.07","114.23","7.39","2447.32","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","steady",10,2,10,"simple","86.40","0.07","115.74","7.57","2447.36","443.00","SELECT id, name FROM categories ORDER BY id LIMIT 5000;","{""rows"": 321, ""first"": [1, ""Hi-Fi Speakers""]}"
"postgres","normal","warmup",10,3,1,"simple","153.35","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,3,2,"simple","148.91","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,3,3,"simple","169.32","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,3,4,"simple","148.82","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,3,5,"simple","147.82","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,3,6,"simple","148.36","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,3,7,"simple","151.73","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,3,8,"simple","150.68","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,3,9,"simple","150.29","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","warmup",10,3,10,"simple","149.25","nan","nan","nan","nan","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""note"": ""warmup""}"
"postgres","normal","steady",10,3,1,"simple","91.14","0.20","109.72","8.52","2447.56","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [181, 144, ""Birnbaumgasse 9/8"", ""Ebermannstadt"", ""88107"", ""Deutschland"", true]}"
"postgres","normal","steady",10,3,2,"simple","99.43","0.19","100.58","7.51","2447.66","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [181, 144, ""Birnbaumgasse 9/8"", ""Ebermannstadt"", ""88107"", ""Deutschland"", true]}"
"postgres","normal","steady",10,3,3,"simple","96.89","0.19","103.21","7.72","2447.65","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [181, 144, ""Birnbaumgasse 9/8"", ""Ebermannstadt"", ""88107"", ""Deutschland"", true]}"
"postgres","normal","steady",10,3,4,"simple","99.96","0.19","100.04","7.60","2447.43","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [181, 144, ""Birnbaumgasse 9/8"", ""Ebermannstadt"", ""88107"", ""Deutschland"", true]}"
"postgres","normal","steady",10,3,5,"simple","97.24","0.22","102.83","7.83","2447.36","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [181, 144, ""Birnbaumgasse 9/8"", ""Ebermannstadt"", ""88107"", ""Deutschland"", true]}"
"postgres","normal","steady",10,3,6,"simple","100.54","0.22","99.47","7.46","2447.31","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [181, 144, ""Birnbaumgasse 9/8"", ""Ebermannstadt"", ""88107"", ""Deutschland"", true]}"
"postgres","normal","steady",10,3,7,"simple","106.94","0.20","93.51","7.56","2447.38","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [181, 144, ""Birnbaumgasse 9/8"", ""Ebermannstadt"", ""88107"", ""Deutschland"", true]}"
"postgres","normal","steady",10,3,8,"simple","100.89","0.19","99.12","7.54","2447.41","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [181, 144, ""Birnbaumgasse 9/8"", ""Ebermannstadt"", ""88107"", ""Deutschland"", true]}"
"postgres","normal","steady",10,3,9,"simple","98.60","0.19","101.42","7.72","2447.26","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [181, 144, ""Birnbaumgasse 9/8"", ""Ebermannstadt"", ""88107"", ""Deutschland"", true]}"
"postgres","normal","steady",10,3,10,"simple","99.29","0.19","100.71","7.55","2447.37","443.00","SELECT * FROM addresses ORDER BY id LIMIT 1000;","{""rows"": 1000, ""first"": [181, 144, ""Birnbaumgasse 9/8"", ""Ebermannstadt"", ""88107"", ""Deutschland"", true]}"
"postgres","normal","warmup",10,4,1,"medium","155.16","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,4,2,"medium","151.86","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,4,3,"medium","149.14","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,4,4,"medium","152.35","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,4,5,"medium","152.60","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,4,6,"medium","156.53","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,4,7,"medium","153.50","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,4,8,"medium","161.58","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,4,9,"medium","152.73","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,4,10,"medium","152.91","nan","nan","nan","nan","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,4,1,"medium","107.25","0.47","93.24","8.10","2447.51","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,4,2,"medium","101.68","0.45","98.35","8.54","2447.59","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,4,3,"medium","105.38","0.45","94.89","8.28","2447.66","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,4,4,"medium","104.55","0.46","95.65","8.48","2447.49","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,4,5,"medium","103.52","0.45","96.60","8.64","2447.69","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,4,6,"medium","106.62","0.47","93.79","8.61","2447.52","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,4,7,"medium","103.58","0.45","96.55","8.30","2447.74","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,4,8,"medium","115.53","0.46","86.56","7.96","2447.79","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,4,9,"medium","104.82","0.45","95.40","8.55","2447.60","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","steady",10,4,10,"medium","102.78","0.46","97.29","8.45","2447.91","443.00","         SELECT p.id, p.name, p.price, p.stock, p.created_at, p.updated_at           FROM products p          WHERE EXISTS ( SELECT 1                           FROM product_categories pc                          WHERE pc.product_id = p.id )          ORDER BY p.id          LIMIT 1000;         ","{""rows"": 1000, ""first"": [1, ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""21.99"", 15, ""2016-07-15 22:24:44"", ""2018-12-18 21:21:26""]}"
"postgres","normal","warmup",10,5,1,"medium","184.44","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,5,2,"medium","188.48","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,5,3,"medium","184.80","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,5,4,"medium","186.01","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,5,5,"medium","193.23","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,5,6,"medium","178.83","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,5,7,"medium","176.26","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,5,8,"medium","185.61","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,5,9,"medium","183.53","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,5,10,"medium","177.19","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,5,1,"medium","131.48","16.66","76.06","25.01","2449.00","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",10,5,2,"medium","128.16","15.89","78.03","25.89","2448.93","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",10,5,3,"medium","136.87","15.87","73.06","24.09","2449.26","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",10,5,4,"medium","136.55","15.81","73.23","24.37","2448.95","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",10,5,5,"medium","139.06","16.95","71.91","23.96","2449.04","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",10,5,6,"medium","150.58","15.96","66.41","22.30","2449.26","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",10,5,7,"medium","133.54","16.37","74.88","24.88","2448.99","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",10,5,8,"medium","133.08","15.86","75.14","24.34","2449.00","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",10,5,9,"medium","132.61","15.92","75.41","24.95","2448.96","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","steady",10,5,10,"medium","145.79","16.14","68.59","23.75","2448.97","443.00","         SELECT p.id,                p.name,                p.price,                p.stock,                p.created_at,                p.updated_at,                oi.quantity           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id           JOIN products     p  ON p.id        = oi.product_id          ORDER BY o.created_at DESC, o.id DESC, p.id          LIMIT 500;         ","{""rows"": 500, ""first"": [205686, ""Dreamies Cat Treats Chicken 350g (pack of 2)"", ""10.0"", 43, ""2017-02-20 08:41:19"", ""2019-05-10 11:30:33"", 3]}"
"postgres","normal","warmup",10,6,1,"medium","139.22","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,6,2,"medium","137.62","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,6,3,"medium","140.99","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,6,4,"medium","139.34","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,6,5,"medium","133.70","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,6,6,"medium","138.24","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,6,7,"medium","137.33","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,6,8,"medium","137.32","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,6,9,"medium","128.15","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,6,10,"medium","138.36","nan","nan","nan","nan","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,6,1,"medium","86.30","0.05","115.88","7.48","2447.72","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 58, ""first"": [183, 773, 2104697, 4, ""2025-07-07 23:02:39""]}"
"postgres","normal","steady",10,6,2,"medium","87.73","0.05","113.98","7.48","2447.31","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 58, ""first"": [183, 773, 2104697, 4, ""2025-07-07 23:02:39""]}"
"postgres","normal","steady",10,6,3,"medium","81.82","0.05","122.21","8.30","2447.27","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 58, ""first"": [183, 773, 2104697, 4, ""2025-07-07 23:02:39""]}"
"postgres","normal","steady",10,6,4,"medium","87.61","0.05","114.15","7.46","2447.16","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 58, ""first"": [183, 773, 2104697, 4, ""2025-07-07 23:02:39""]}"
"postgres","normal","steady",10,6,5,"medium","86.39","0.05","115.75","7.71","2447.23","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 58, ""first"": [183, 773, 2104697, 4, ""2025-07-07 23:02:39""]}"
"postgres","normal","steady",10,6,6,"medium","88.78","0.05","112.64","7.38","2447.26","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 58, ""first"": [183, 773, 2104697, 4, ""2025-07-07 23:02:39""]}"
"postgres","normal","steady",10,6,7,"medium","85.77","0.05","116.60","7.51","2447.56","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 58, ""first"": [183, 773, 2104697, 4, ""2025-07-07 23:02:39""]}"
"postgres","normal","steady",10,6,8,"medium","80.12","0.05","124.81","8.09","2447.51","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 58, ""first"": [183, 773, 2104697, 4, ""2025-07-07 23:02:39""]}"
"postgres","normal","steady",10,6,9,"medium","86.29","0.05","115.89","7.74","2447.54","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 58, ""first"": [183, 773, 2104697, 4, ""2025-07-07 23:02:39""]}"
"postgres","normal","steady",10,6,10,"medium","87.67","0.05","114.07","7.39","2447.40","443.00","         SELECT id,                user_id,                product_id,                rating,                created_at           FROM reviews          ORDER BY created_at DESC, id DESC          LIMIT 100;         ","{""rows"": 58, ""first"": [183, 773, 2104697, 4, ""2025-07-07 23:02:39""]}"
"postgres","normal","warmup",10,7,1,"complex","169.40","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,7,2,"complex","175.97","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,7,3,"complex","150.80","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,7,4,"complex","143.43","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,7,5,"complex","151.54","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,7,6,"complex","153.73","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,7,7,"complex","153.39","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,7,8,"complex","152.44","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,7,9,"complex","163.05","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,7,10,"complex","151.98","nan","nan","nan","nan","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,7,1,"complex","111.96","3.65","89.32","9.41","2448.22","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",10,7,2,"complex","104.75","3.25","95.47","10.14","2448.94","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",10,7,3,"complex","101.26","3.25","98.76","10.77","2448.68","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",10,7,4,"complex","105.56","3.27","94.73","10.12","2448.66","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",10,7,5,"complex","107.45","3.29","93.07","9.90","2448.72","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",10,7,6,"complex","107.45","3.23","93.06","9.93","2448.88","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",10,7,7,"complex","104.80","3.26","95.42","10.30","2448.74","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",10,7,8,"complex","116.00","3.22","86.21","9.23","2448.45","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",10,7,9,"complex","115.37","3.24","86.68","9.50","2448.66","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","steady",10,7,10,"complex","113.56","3.26","88.06","9.54","2448.54","443.00","         SELECT o.id,                o.created_at,                SUM(oi.quantity * oi.price) AS total           FROM orders       o           JOIN order_items  oi ON oi.order_id = o.id          GROUP BY o.id, o.created_at          ORDER BY o.id          LIMIT 500;         ","{""rows"": 500, ""first"": [1, ""2025-03-30 17:25:30"", ""372.08""]}"
"postgres","normal","warmup",10,8,1,"complex","154.95","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,8,2,"complex","154.20","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,8,3,"complex","140.46","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,8,4,"complex","142.82","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,8,5,"complex","150.14","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,8,6,"complex","149.79","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,8,7,"complex","151.22","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,8,8,"complex","147.69","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,8,9,"complex","148.47","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,8,10,"complex","149.83","nan","nan","nan","nan","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,8,1,"complex","98.63","0.31","101.39","8.42","2449.04","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 12, ""first"": [426435, ""Reebok Boys' Training Athletic Short"", ""5.0000000000000000""]}"
"postgres","normal","steady",10,8,2,"complex","98.02","0.32","102.02","8.43","2449.24","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 12, ""first"": [426435, ""Reebok Boys' Training Athletic Short"", ""5.0000000000000000""]}"
"postgres","normal","steady",10,8,3,"complex","101.13","0.31","98.88","8.34","2449.02","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 12, ""first"": [426435, ""Reebok Boys' Training Athletic Short"", ""5.0000000000000000""]}"
"postgres","normal","steady",10,8,4,"complex","92.82","0.32","107.74","9.22","2449.11","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 12, ""first"": [426435, ""Reebok Boys' Training Athletic Short"", ""5.0000000000000000""]}"
"postgres","normal","steady",10,8,5,"complex","97.15","0.31","102.93","8.90","2448.77","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 12, ""first"": [426435, ""Reebok Boys' Training Athletic Short"", ""5.0000000000000000""]}"
"postgres","normal","steady",10,8,6,"complex","101.28","0.30","98.73","8.22","2448.98","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 12, ""first"": [426435, ""Reebok Boys' Training Athletic Short"", ""5.0000000000000000""]}"
"postgres","normal","steady",10,8,7,"complex","98.41","0.31","101.62","8.46","2449.35","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 12, ""first"": [426435, ""Reebok Boys' Training Athletic Short"", ""5.0000000000000000""]}"
"postgres","normal","steady",10,8,8,"complex","96.00","0.33","104.16","8.87","2449.02","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 12, ""first"": [426435, ""Reebok Boys' Training Athletic Short"", ""5.0000000000000000""]}"
"postgres","normal","steady",10,8,9,"complex","101.53","0.33","98.50","8.28","2448.80","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 12, ""first"": [426435, ""Reebok Boys' Training Athletic Short"", ""5.0000000000000000""]}"
"postgres","normal","steady",10,8,10,"complex","101.27","0.33","98.75","8.64","2449.12","443.00","         SELECT p.id,                p.name,                AVG(r.rating) AS avg_rating           FROM products p           JOIN reviews  r ON r.product_id = p.id          GROUP BY p.id, p.name         HAVING AVG(r.rating) > 4          ORDER BY avg_rating DESC, p.id LIMIT 1000;         ","{""rows"": 12, ""first"": [426435, ""Reebok Boys' Training Athletic Short"", ""5.0000000000000000""]}"
"postgres","normal","warmup",10,9,1,"complex","146.68","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,9,2,"complex","150.28","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,9,3,"complex","151.46","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,9,4,"complex","149.15","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,9,5,"complex","150.99","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,9,6,"complex","153.55","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,9,7,"complex","150.74","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,9,8,"complex","151.68","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,9,9,"complex","151.82","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,9,10,"complex","148.34","nan","nan","nan","nan","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,9,1,"complex","96.69","0.62","103.43","8.07","2449.16","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",10,9,2,"complex","99.23","0.65","100.77","8.12","2448.93","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",10,9,3,"complex","99.61","0.64","100.39","8.13","2448.90","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",10,9,4,"complex","98.51","0.64","101.52","7.92","2448.94","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",10,9,5,"complex","118.90","0.63","84.10","6.67","2449.04","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",10,9,6,"complex","99.56","0.61","100.44","8.01","2449.04","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",10,9,7,"complex","97.82","0.62","102.23","8.04","2448.77","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",10,9,8,"complex","99.90","0.66","100.10","8.36","2448.88","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",10,9,9,"complex","99.66","0.62","100.34","8.11","2449.09","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","steady",10,9,10,"complex","97.28","0.63","102.79","8.33","2449.02","443.00","         SELECT u.id,                COUNT(*) AS orders_last_30d           FROM users  u           JOIN orders o ON o.user_id = u.id          WHERE o.created_at >= CURRENT_DATE - INTERVAL '30 days'          GROUP BY u.id        HAVING COUNT(*) > 0          ORDER BY u.id          LIMIT 500;         ","{""rows"": 295, ""first"": [1, 20]}"
"postgres","normal","warmup",10,10,1,"very_complex","161.67","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,10,2,"very_complex","150.03","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,10,3,"very_complex","149.97","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,10,4,"very_complex","149.49","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,10,5,"very_complex","156.76","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,10,6,"very_complex","156.34","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,10,7,"very_complex","148.21","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,10,8,"very_complex","153.52","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,10,9,"very_complex","162.30","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,10,10,"very_complex","145.41","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,10,1,"very_complex","98.20","2.65","101.83","10.18","2449.47","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,10,2,"very_complex","100.43","2.65","99.57","9.66","2449.78","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,10,3,"very_complex","107.29","2.63","93.20","9.09","2449.60","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,10,4,"very_complex","100.89","2.58","99.11","9.85","2449.90","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,10,5,"very_complex","101.65","2.65","98.38","10.74","2449.53","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,10,6,"very_complex","105.25","2.63","95.01","9.43","2449.86","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,10,7,"very_complex","107.59","2.65","92.95","9.19","2449.55","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,10,8,"very_complex","105.18","2.68","95.07","9.30","2449.68","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,10,9,"very_complex","104.75","2.65","95.47","9.36","2449.68","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,10,10,"very_complex","108.58","2.67","92.10","9.03","2449.79","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT o.user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id AS rec_id,                COUNT(*)       AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","warmup",10,11,1,"very_complex","152.16","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,11,2,"very_complex","147.13","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,11,3,"very_complex","154.49","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,11,4,"very_complex","146.15","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,11,5,"very_complex","150.70","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,11,6,"very_complex","153.46","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,11,7,"very_complex","158.63","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,11,8,"very_complex","163.48","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,11,9,"very_complex","153.14","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,11,10,"very_complex","158.13","nan","nan","nan","nan","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,11,1,"very_complex","108.24","4.40","92.39","9.99","2449.73","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",10,11,2,"very_complex","101.43","4.63","98.59","10.82","2449.84","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",10,11,3,"very_complex","111.65","4.47","89.57","9.57","2449.58","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",10,11,4,"very_complex","104.16","4.49","96.01","10.27","2449.81","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",10,11,5,"very_complex","111.17","4.43","89.95","9.62","2449.66","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",10,11,6,"very_complex","110.42","4.45","90.57","9.76","2449.82","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",10,11,7,"very_complex","112.28","4.47","89.07","9.50","2450.10","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",10,11,8,"very_complex","106.02","4.43","94.32","10.09","2449.86","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",10,11,9,"very_complex","108.78","4.43","91.93","9.82","2449.81","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","steady",10,11,10,"very_complex","107.13","4.44","93.34","9.99","2449.84","443.00","         WITH pairs AS (             SELECT                 LEAST(oi1.product_id, oi2.product_id)      AS prodA,                 GREATEST(oi1.product_id, oi2.product_id)   AS prodB,                 oi1.order_id                               AS order_id             FROM   order_items  oi1             JOIN   order_items  oi2                 ON  oi2.order_id   = oi1.order_id                 AND oi2.product_id > oi1.product_id     -- Duplikate + Selbstpaare raus         )         SELECT  prodA,                 prodB,                 COUNT(DISTINCT order_id) AS co_orders      -- ⇦ jede Bestellung nur 1-mal         FROM    pairs         GROUP  BY prodA, prodB         -- HAVING COUNT(DISTINCT order_id) >= 2          -- (falls Mindest-Support gewünscht)         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": [316, 622339, 1]}"
"postgres","normal","warmup",10,12,1,"very_complex","153.07","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,12,2,"very_complex","157.90","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,12,3,"very_complex","156.90","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,12,4,"very_complex","157.72","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,12,5,"very_complex","149.40","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,12,6,"very_complex","160.84","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,12,7,"very_complex","150.34","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,12,8,"very_complex","149.64","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,12,9,"very_complex","151.73","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,12,10,"very_complex","153.48","nan","nan","nan","nan","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,12,1,"very_complex","95.38","2.59","104.85","10.32","2449.50","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,12,2,"very_complex","100.67","2.60","99.34","9.54","2449.50","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,12,3,"very_complex","106.77","2.60","93.66","9.23","2449.81","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,12,4,"very_complex","100.22","2.61","99.78","9.70","2449.73","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,12,5,"very_complex","99.53","2.71","100.48","10.04","2449.25","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,12,6,"very_complex","116.35","2.60","85.95","8.41","2449.69","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,12,7,"very_complex","107.46","2.58","93.06","9.25","2449.67","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,12,8,"very_complex","102.11","2.59","97.94","9.49","2449.42","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,12,9,"very_complex","105.07","2.59","95.17","9.43","2449.63","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","steady",10,12,10,"very_complex","103.28","2.61","96.83","9.45","2449.89","443.00","         WITH top_prod AS (                 SELECT product_id                   FROM order_items                  GROUP BY product_id                  ORDER BY COUNT(*) DESC, product_id                  LIMIT 1         ),         buyers AS (                 SELECT DISTINCT user_id                   FROM orders       o                   JOIN order_items oi ON oi.order_id = o.id                  WHERE oi.product_id = (SELECT product_id FROM top_prod)         )         SELECT oi2.product_id,                COUNT(*) AS freq           FROM orders       o           JOIN order_items  oi2 ON oi2.order_id = o.id          WHERE o.user_id IN (SELECT user_id FROM buyers)            AND oi2.product_id <> (SELECT product_id FROM top_prod)          GROUP BY oi2.product_id          ORDER BY freq DESC, oi2.product_id          LIMIT 100;         ","{""rows"": 12, ""first"": [211343, 1]}"
"postgres","normal","warmup",10,13,1,"create","150.22","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,13,2,"create","149.09","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,13,3,"create","141.98","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,13,4,"create","152.00","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,13,5,"create","148.47","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,13,6,"create","148.50","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,13,7,"create","151.46","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,13,8,"create","158.68","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,13,9,"create","148.95","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,13,10,"create","150.81","nan","nan","nan","nan","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,13,1,"create","98.86","0.12","101.16","7.57","2449.79","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1658]}"
"postgres","normal","steady",10,13,2,"create","99.28","0.09","100.73","7.46","2450.02","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1669]}"
"postgres","normal","steady",10,13,3,"create","92.56","0.11","108.04","8.23","2449.72","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1680]}"
"postgres","normal","steady",10,13,4,"create","100.77","0.15","99.24","7.48","2450.05","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1691]}"
"postgres","normal","steady",10,13,5,"create","97.68","0.09","102.38","7.58","2450.08","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1702]}"
"postgres","normal","steady",10,13,6,"create","98.70","0.10","101.32","7.48","2449.77","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1713]}"
"postgres","normal","steady",10,13,7,"create","99.00","0.10","101.01","7.61","2450.01","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1724]}"
"postgres","normal","steady",10,13,8,"create","103.14","0.10","96.96","7.40","2450.11","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1735]}"
"postgres","normal","steady",10,13,9,"create","97.55","0.12","102.51","8.31","2449.99","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1746]}"
"postgres","normal","steady",10,13,10,"create","98.32","0.10","101.71","7.66","2449.60","443.00","         INSERT INTO addresses (user_id, street, city, zip, country, is_primary)         VALUES (             (SELECT id FROM users LIMIT 1),             'Foo-' || gen_random_uuid()::text,             'Bar City',             '12345',             'DE',             FALSE         )         RETURNING id AS address_id;         ","{""rows"": 1, ""first"": [1757]}"
"postgres","normal","warmup",10,14,1,"create","153.84","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,14,2,"create","143.38","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,14,3,"create","144.82","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,14,4,"create","146.80","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,14,5,"create","143.75","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,14,6,"create","146.57","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,14,7,"create","147.67","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,14,8,"create","144.17","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,14,9,"create","149.48","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,14,10,"create","145.09","nan","nan","nan","nan","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,14,1,"create","97.05","0.08","103.04","7.99","2450.24","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2294]}"
"postgres","normal","steady",10,14,2,"create","97.18","0.08","102.90","7.52","2450.01","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2305]}"
"postgres","normal","steady",10,14,3,"create","100.06","0.07","99.94","7.38","2449.84","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2316]}"
"postgres","normal","steady",10,14,4,"create","100.19","0.08","99.81","7.30","2449.93","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2327]}"
"postgres","normal","steady",10,14,5,"create","87.46","0.08","114.34","8.64","2450.10","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2338]}"
"postgres","normal","steady",10,14,6,"create","100.30","0.12","99.70","8.36","2449.94","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2349]}"
"postgres","normal","steady",10,14,7,"create","97.76","0.08","102.29","7.63","2449.89","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2360]}"
"postgres","normal","steady",10,14,8,"create","99.94","0.07","100.06","7.26","2449.81","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2371]}"
"postgres","normal","steady",10,14,9,"create","90.25","0.08","110.81","8.17","2449.93","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2382]}"
"postgres","normal","steady",10,14,10,"create","99.23","0.07","100.77","7.43","2450.07","443.00","         INSERT INTO orders (user_id, status, total, created_at)         VALUES (             (SELECT id FROM users LIMIT 1),             'pending',             0.0,             CURRENT_TIMESTAMP         )         RETURNING id AS order_id;         ","{""rows"": 1, ""first"": [2393]}"
"postgres","normal","warmup",10,15,1,"create","150.08","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,15,2,"create","149.28","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,15,3,"create","147.57","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,15,4,"create","149.07","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,15,5,"create","149.72","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,15,6,"create","149.98","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,15,7,"create","148.91","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,15,8,"create","149.56","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,15,9,"create","149.51","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,15,10,"create","150.72","nan","nan","nan","nan","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,15,1,"create","99.04","0.09","100.97","7.61","2449.76","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1834]}"
"postgres","normal","steady",10,15,2,"create","101.52","0.09","98.51","7.34","2449.81","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1845]}"
"postgres","normal","steady",10,15,3,"create","100.82","0.10","99.19","7.43","2450.08","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1856]}"
"postgres","normal","steady",10,15,4,"create","98.55","0.09","101.47","8.05","2449.91","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1867]}"
"postgres","normal","steady",10,15,5,"create","99.24","0.09","100.77","7.48","2450.13","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1878]}"
"postgres","normal","steady",10,15,6,"create","101.86","0.09","98.17","7.29","2450.06","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1889]}"
"postgres","normal","steady",10,15,7,"create","99.35","0.15","100.65","7.69","2449.97","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1900]}"
"postgres","normal","steady",10,15,8,"create","98.24","0.12","101.80","7.73","2450.10","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1911]}"
"postgres","normal","steady",10,15,9,"create","96.93","0.11","103.17","7.55","2450.13","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1922]}"
"postgres","normal","steady",10,15,10,"create","100.83","0.09","99.17","7.53","2449.88","443.00","         INSERT INTO cart_items (user_id, product_id, quantity, added_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             2,             CURRENT_TIMESTAMP         )         RETURNING id AS cart_item_id;         ","{""rows"": 1, ""first"": [1933]}"
"postgres","normal","warmup",10,16,1,"create","145.58","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,16,2,"create","149.04","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,16,3,"create","149.25","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,16,4,"create","150.69","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,16,5,"create","143.85","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,16,6,"create","151.71","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,16,7,"create","148.85","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,16,8,"create","148.09","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,16,9,"create","150.39","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,16,10,"create","148.56","nan","nan","nan","nan","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,16,1,"create","98.29","0.17","101.74","7.66","2450.14","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10833]}"
"postgres","normal","steady",10,16,2,"create","91.16","0.09","109.70","8.23","2449.85","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10844]}"
"postgres","normal","steady",10,16,3,"create","117.24","0.09","85.30","6.39","2450.15","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10855]}"
"postgres","normal","steady",10,16,4,"create","107.61","0.09","92.93","6.92","2449.77","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10866]}"
"postgres","normal","steady",10,16,5,"create","99.57","0.09","100.43","7.36","2449.94","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10877]}"
"postgres","normal","steady",10,16,6,"create","95.73","0.09","104.46","8.22","2450.39","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10888]}"
"postgres","normal","steady",10,16,7,"create","98.44","0.10","101.59","7.69","2450.10","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10899]}"
"postgres","normal","steady",10,16,8,"create","119.18","0.09","83.91","6.34","2449.98","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10910]}"
"postgres","normal","steady",10,16,9,"create","98.06","0.10","101.97","7.75","2449.90","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10921]}"
"postgres","normal","steady",10,16,10,"create","103.18","0.09","96.92","7.28","2450.39","443.00","         INSERT INTO product_views (user_id, product_id, viewed_at)         VALUES (             (SELECT id FROM users    LIMIT 1),             (SELECT id FROM products LIMIT 1),             CURRENT_TIMESTAMP         )         RETURNING id AS product_view_id;         ","{""rows"": 1, ""first"": [10932]}"
"postgres","normal","warmup",10,17,1,"update","152.50","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,17,2,"update","150.32","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,17,3,"update","146.00","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,17,4,"update","145.81","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,17,5,"update","142.19","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,17,6,"update","144.49","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,17,7,"update","145.74","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,17,8,"update","144.10","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,17,9,"update","147.29","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,17,10,"update","143.80","nan","nan","nan","nan","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,17,1,"update","100.32","0.07","99.68","7.28","2450.15","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 241]}"
"postgres","normal","steady",10,17,2,"update","100.18","0.07","99.82","7.26","2449.96","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 251]}"
"postgres","normal","steady",10,17,3,"update","94.18","0.07","106.18","7.86","2450.23","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 261]}"
"postgres","normal","steady",10,17,4,"update","102.26","0.07","97.79","7.37","2450.23","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 271]}"
"postgres","normal","steady",10,17,5,"update","98.63","0.07","101.39","7.17","2450.00","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 281]}"
"postgres","normal","steady",10,17,6,"update","98.08","0.07","101.95","7.30","2450.17","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 291]}"
"postgres","normal","steady",10,17,7,"update","100.46","0.07","99.54","7.30","2449.96","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 301]}"
"postgres","normal","steady",10,17,8,"update","99.58","0.07","100.43","7.06","2449.94","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 311]}"
"postgres","normal","steady",10,17,9,"update","96.88","0.07","103.22","7.23","2450.12","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 321]}"
"postgres","normal","steady",10,17,10,"update","99.68","0.07","100.32","7.56","2450.09","443.00","         UPDATE products         SET stock = stock + 1         WHERE id = (SELECT id FROM products LIMIT 1)         RETURNING id AS product_id, stock AS new_stock;         ","{""rows"": 1, ""first"": [4, 331]}"
"postgres","normal","warmup",10,18,1,"update","147.67","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,18,2,"update","148.18","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,18,3,"update","150.27","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,18,4,"update","149.33","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,18,5,"update","150.59","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,18,6,"update","157.06","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,18,7,"update","148.28","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,18,8,"update","147.80","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,18,9,"update","151.02","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,18,10,"update","147.33","nan","nan","nan","nan","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,18,1,"update","96.97","0.06","103.12","7.32","2449.80","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [184, 1]}"
"postgres","normal","steady",10,18,2,"update","99.21","0.06","100.80","7.18","2450.12","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [184, 1]}"
"postgres","normal","steady",10,18,3,"update","99.80","0.06","100.20","7.30","2450.11","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [194, 2]}"
"postgres","normal","steady",10,18,4,"update","98.50","0.06","101.52","7.40","2450.09","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [204, 1]}"
"postgres","normal","steady",10,18,5,"update","100.38","0.06","99.62","7.13","2450.16","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [214, 2]}"
"postgres","normal","steady",10,18,6,"update","97.55","0.06","102.51","7.28","2450.12","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [224, 1]}"
"postgres","normal","steady",10,18,7,"update","99.56","0.06","100.45","7.32","2450.04","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [232, 1]}"
"postgres","normal","steady",10,18,8,"update","97.82","0.09","102.23","7.75","2450.01","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [232, 1]}"
"postgres","normal","steady",10,18,9,"update","102.47","0.06","97.59","7.33","2449.97","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [232, 1]}"
"postgres","normal","steady",10,18,10,"update","97.56","0.06","102.50","7.33","2449.96","443.00","         UPDATE reviews         SET rating = GREATEST(rating - 1, 1)         WHERE id = (SELECT id FROM reviews LIMIT 1)         RETURNING id AS review_id, rating AS new_rating;         ","{""rows"": 1, ""first"": [232, 1]}"
"postgres","normal","warmup",10,19,1,"update","149.21","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,19,2,"update","143.79","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,19,3,"update","147.92","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,19,4,"update","149.09","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,19,5,"update","149.31","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,19,6,"update","147.92","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,19,7,"update","148.63","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,19,8,"update","147.38","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,19,9,"update","149.12","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,19,10,"update","149.81","nan","nan","nan","nan","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,19,1,"update","90.35","0.07","110.68","8.14","2450.32","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [281, 4]}"
"postgres","normal","steady",10,19,2,"update","99.19","0.07","100.82","7.27","2450.29","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [291, 4]}"
"postgres","normal","steady",10,19,3,"update","97.03","0.07","103.06","7.24","2449.79","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [301, 5]}"
"postgres","normal","steady",10,19,4,"update","118.20","0.07","84.60","6.05","2450.32","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [311, 4]}"
"postgres","normal","steady",10,19,5,"update","96.07","0.07","104.09","7.95","2449.79","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [182, 23]}"
"postgres","normal","steady",10,19,6,"update","100.04","0.07","99.96","7.17","2450.27","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [182, 53]}"
"postgres","normal","steady",10,19,7,"update","96.56","0.07","103.56","7.36","2450.12","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [182, 83]}"
"postgres","normal","steady",10,19,8,"update","98.84","0.07","101.18","7.19","2449.96","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [182, 113]}"
"postgres","normal","steady",10,19,9,"update","94.81","0.07","105.48","7.75","2449.69","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [182, 143]}"
"postgres","normal","steady",10,19,10,"update","98.78","0.07","101.24","7.21","2449.96","443.00","         UPDATE cart_items         SET quantity = quantity + 3         WHERE id = (SELECT id FROM cart_items LIMIT 1)         RETURNING id AS cart_item_id, quantity AS new_quantity;         ","{""rows"": 1, ""first"": [182, 173]}"
"postgres","normal","warmup",10,20,1,"update","150.01","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,20,2,"update","142.39","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,20,3,"update","151.46","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,20,4,"update","147.31","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,20,5,"update","154.70","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,20,6,"update","148.54","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,20,7,"update","143.44","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,20,8,"update","142.39","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,20,9,"update","144.50","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,20,10,"update","145.76","nan","nan","nan","nan","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,20,1,"update","101.91","0.13","98.12","7.34","2450.12","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [110, ""faustmaya@example.net.tmp""]}"
"postgres","normal","steady",10,20,2,"update","98.35","0.09","101.67","7.91","2449.75","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [120, ""johannanthony@example.com.tmp""]}"
"postgres","normal","steady",10,20,3,"update","100.54","0.09","99.46","7.34","2449.84","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [130, ""lrosenow@example.org.tmp""]}"
"postgres","normal","steady",10,20,4,"update","98.41","0.08","101.62","7.58","2450.01","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [140, ""lilija98@example.org.tmp""]}"
"postgres","normal","steady",10,20,5,"update","99.63","0.09","100.37","7.40","2450.34","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [150, ""reutermagrit@example.org.tmp""]}"
"postgres","normal","steady",10,20,6,"update","92.93","0.08","107.61","7.91","2449.99","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [160, ""loechelclaire@example.org.tmp""]}"
"postgres","normal","steady",10,20,7,"update","100.94","0.09","99.07","7.24","2450.34","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [170, ""hans-wilhelmortmann@example.net.tmp""]}"
"postgres","normal","steady",10,20,8,"update","99.08","0.08","100.93","7.35","2450.35","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [180, ""khahn@example.org.tmp""]}"
"postgres","normal","steady",10,20,9,"update","97.21","0.08","102.87","7.46","2449.75","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [97, ""karl-ottohesse@example.com.tmp.tmp""]}"
"postgres","normal","steady",10,20,10,"update","97.03","0.08","103.06","7.62","2449.89","443.00","         UPDATE users         SET email = email || '.tmp'         WHERE id = (SELECT id FROM users LIMIT 1)         RETURNING id AS user_id, email AS new_email;         ","{""rows"": 1, ""first"": [108, ""mariola97@example.net.tmp.tmp""]}"
"postgres","normal","warmup",10,21,1,"delete","149.00","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,21,2,"delete","149.54","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,21,3,"delete","150.22","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,21,4,"delete","149.05","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,21,5,"delete","149.00","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,21,6,"delete","151.31","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,21,7,"delete","144.59","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,21,8,"delete","145.58","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,21,9,"delete","167.29","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,21,10,"delete","148.27","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,21,1,"delete","101.25","0.04","98.76","7.39","2450.11","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [281]}"
"postgres","normal","steady",10,21,2,"delete","100.70","0.04","99.31","7.23","2450.23","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [291]}"
"postgres","normal","steady",10,21,3,"delete","98.25","0.04","101.78","7.30","2450.35","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [301]}"
"postgres","normal","steady",10,21,4,"delete","97.84","0.04","102.21","7.54","2449.99","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [311]}"
"postgres","normal","steady",10,21,5,"delete","93.94","0.05","106.46","7.67","2450.24","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [321]}"
"postgres","normal","steady",10,21,6,"delete","98.90","0.04","101.11","7.31","2450.28","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [331]}"
"postgres","normal","steady",10,21,7,"delete","98.26","0.04","101.77","7.47","2449.91","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [341]}"
"postgres","normal","steady",10,21,8,"delete","97.99","0.04","102.05","7.43","2450.28","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [351]}"
"postgres","normal","steady",10,21,9,"delete","90.22","0.04","110.83","8.25","2449.98","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [361]}"
"postgres","normal","steady",10,21,10,"delete","96.51","0.04","103.62","7.45","2450.03","443.00","         WITH victim AS (             SELECT id             FROM   addresses             ORDER  BY id             LIMIT  1         )         DELETE FROM addresses a         USING victim         WHERE a.id = victim.id         RETURNING a.id AS deleted_address_id;         ","{""rows"": 1, ""first"": [371]}"
"postgres","normal","warmup",10,22,1,"delete","149.74","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,22,2,"delete","150.03","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,22,3,"delete","142.96","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,22,4,"delete","149.21","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,22,5,"delete","151.01","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,22,6,"delete","152.02","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,22,7,"delete","136.37","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,22,8,"delete","137.27","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,22,9,"delete","138.25","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,22,10,"delete","137.00","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,22,1,"delete","86.01","0.03","116.27","7.64","2447.76","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 0, ""first"": null}"
"postgres","normal","steady",10,22,2,"delete","87.63","0.04","114.11","7.47","2447.71","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 0, ""first"": null}"
"postgres","normal","steady",10,22,3,"delete","88.38","0.03","113.15","7.95","2447.82","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 0, ""first"": null}"
"postgres","normal","steady",10,22,4,"delete","87.24","0.03","114.62","7.66","2448.01","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 0, ""first"": null}"
"postgres","normal","steady",10,22,5,"delete","87.58","0.04","114.18","7.59","2448.05","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 0, ""first"": null}"
"postgres","normal","steady",10,22,6,"delete","87.26","0.03","114.60","7.56","2448.10","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 0, ""first"": null}"
"postgres","normal","steady",10,22,7,"delete","87.67","0.04","114.06","7.53","2447.77","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 0, ""first"": null}"
"postgres","normal","steady",10,22,8,"delete","87.73","0.03","113.98","7.51","2447.87","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 0, ""first"": null}"
"postgres","normal","steady",10,22,9,"delete","86.40","0.03","115.74","8.18","2447.90","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 0, ""first"": null}"
"postgres","normal","steady",10,22,10,"delete","87.37","0.04","114.46","7.73","2447.87","443.00","         WITH victim AS (             SELECT id             FROM   reviews             ORDER  BY id             LIMIT  1         )         DELETE FROM reviews r         USING victim         WHERE r.id = victim.id         RETURNING r.id AS deleted_review_id;         ","{""rows"": 0, ""first"": null}"
"postgres","normal","warmup",10,23,1,"delete","148.72","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,23,2,"delete","148.59","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,23,3,"delete","149.96","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,23,4,"delete","148.50","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,23,5,"delete","148.62","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,23,6,"delete","150.33","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,23,7,"delete","148.97","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,23,8,"delete","147.18","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,23,9,"delete","146.30","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,23,10,"delete","145.53","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,23,1,"delete","100.72","0.06","99.28","7.40","2447.60","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [281]}"
"postgres","normal","steady",10,23,2,"delete","98.91","0.04","101.11","7.37","2447.91","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [291]}"
"postgres","normal","steady",10,23,3,"delete","94.03","0.04","106.35","7.79","2447.88","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [301]}"
"postgres","normal","steady",10,23,4,"delete","94.13","0.04","106.23","7.85","2447.68","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [311]}"
"postgres","normal","steady",10,23,5,"delete","111.48","0.04","89.70","6.78","2447.66","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [321]}"
"postgres","normal","steady",10,23,6,"delete","98.24","0.04","101.79","7.88","2447.96","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [331]}"
"postgres","normal","steady",10,23,7,"delete","99.11","0.04","100.89","7.25","2448.03","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [341]}"
"postgres","normal","steady",10,23,8,"delete","99.01","0.04","101.00","7.61","2448.18","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [351]}"
"postgres","normal","steady",10,23,9,"delete","98.79","0.05","101.22","7.33","2447.97","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [361]}"
"postgres","normal","steady",10,23,10,"delete","97.44","0.04","102.62","7.31","2448.33","443.00","         WITH victim AS (             SELECT id             FROM   cart_items             ORDER  BY id             LIMIT  1         )         DELETE FROM cart_items c         USING victim         WHERE c.id = victim.id         RETURNING c.id AS deleted_cart_item_id;         ","{""rows"": 1, ""first"": [371]}"
"postgres","normal","warmup",10,24,1,"delete","150.36","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,24,2,"delete","149.23","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,24,3,"delete","147.50","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,24,4,"delete","145.19","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,24,5,"delete","150.36","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,24,6,"delete","147.45","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,24,7,"delete","150.52","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,24,8,"delete","148.20","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,24,9,"delete","148.52","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","warmup",10,24,10,"delete","140.87","nan","nan","nan","nan","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""note"": ""warmup""}"
"postgres","normal","steady",10,24,1,"delete","96.80","0.04","103.30","7.34","2447.82","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [281]}"
"postgres","normal","steady",10,24,2,"delete","98.79","0.04","101.23","7.29","2448.18","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [291]}"
"postgres","normal","steady",10,24,3,"delete","90.65","0.04","110.31","8.02","2447.83","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [301]}"
"postgres","normal","steady",10,24,4,"delete","101.18","0.04","98.83","8.07","2447.87","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [311]}"
"postgres","normal","steady",10,24,5,"delete","99.51","0.04","100.50","7.36","2448.25","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [321]}"
"postgres","normal","steady",10,24,6,"delete","99.95","0.04","100.05","7.13","2448.12","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [331]}"
"postgres","normal","steady",10,24,7,"delete","91.84","0.04","108.88","7.97","2447.91","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [341]}"
"postgres","normal","steady",10,24,8,"delete","98.51","0.04","101.51","7.36","2447.75","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [351]}"
"postgres","normal","steady",10,24,9,"delete","99.49","0.06","100.51","7.30","2448.37","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [361]}"
"postgres","normal","steady",10,24,10,"delete","98.17","0.05","101.86","7.38","2447.74","443.00","         WITH victim AS (             SELECT id             FROM   product_purchases             ORDER  BY id             LIMIT  1         )         DELETE FROM product_purchases pp         USING victim         WHERE pp.id = victim.id         RETURNING pp.id AS deleted_purchase_id;         ","{""rows"": 1, ""first"": [371]}"
