"db","mode","phase","concurrency","query_no","repeat","complexity","duration_ms","server_ms","qps","avg_cpu","avg_mem","disk_mb","statement","result"
"neo4j","optimized","warmup",1,1,1,"simple","9686.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,2,"simple","4780.30","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,3,"simple","4501.50","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,4,"simple","4452.66","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,5,"simple","4733.57","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,6,"simple","4744.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,7,"simple","4711.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,8,"simple","4757.96","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,9,"simple","4713.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,10,"simple","4742.08","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,1,1,"simple","4690.03","781.00","0.21","1.75","4071.04","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 781, ""counters"": {}}"
"neo4j","optimized","steady",1,1,2,"simple","4693.52","781.00","0.21","1.81","4409.41","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 781, ""counters"": {}}"
"neo4j","optimized","steady",1,1,3,"simple","4693.58","623.00","0.21","1.51","4685.55","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 623, ""counters"": {}}"
"neo4j","optimized","steady",1,1,4,"simple","4417.68","437.00","0.23","1.17","4791.99","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 437, ""counters"": {}}"
"neo4j","optimized","steady",1,1,5,"simple","4417.14","444.00","0.23","1.11","4793.32","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 444, ""counters"": {}}"
"neo4j","optimized","steady",1,1,6,"simple","4429.79","444.00","0.23","1.12","4798.00","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 444, ""counters"": {}}"
"neo4j","optimized","steady",1,1,7,"simple","4389.66","442.00","0.23","1.15","4801.31","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 442, ""counters"": {}}"
"neo4j","optimized","steady",1,1,8,"simple","4417.49","440.00","0.23","1.10","4801.52","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 440, ""counters"": {}}"
"neo4j","optimized","steady",1,1,9,"simple","4418.27","440.00","0.23","1.09","4801.39","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 440, ""counters"": {}}"
"neo4j","optimized","steady",1,1,10,"simple","4415.13","441.00","0.23","1.09","4801.39","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 441, ""counters"": {}}"
"neo4j","optimized","warmup",1,2,1,"simple","101.87","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,2,"simple","60.03","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,3,"simple","60.75","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,4,"simple","59.49","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,5,"simple","59.41","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,6,"simple","59.33","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,7,"simple","59.21","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,8,"simple","59.85","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,9,"simple","59.51","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,10,"simple","59.60","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,2,1,"simple","13.28","0.00","75.28","34.11","4803.37","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,2,"simple","9.25","0.00","108.07","33.65","4803.22","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,3,"simple","9.00","1.00","111.10","34.06","4803.55","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,4,"simple","9.03","0.00","110.76","34.93","4803.31","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,5,"simple","9.12","1.00","109.60","45.03","4803.26","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,6,"simple","9.11","0.00","109.79","33.40","4803.33","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,7,"simple","9.04","0.00","110.57","35.11","4803.25","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,8,"simple","9.29","0.00","107.62","33.37","4803.33","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,9,"simple","9.28","1.00","107.81","33.64","4803.51","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,10,"simple","9.37","1.00","106.68","34.66","4803.25","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",1,3,1,"simple","134.43","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,2,"simple","74.62","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,3,"simple","74.87","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,4,"simple","74.59","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,5,"simple","74.60","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,6,"simple","74.55","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,7,"simple","74.90","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,8,"simple","74.83","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,9,"simple","74.45","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,10,"simple","74.14","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,3,1,"simple","28.46","3.00","35.13","16.87","4812.54","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Alex-Kade-Platz 0/8"", ""city"": ""Burglengenfeld"", ""zip"": ""08549"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,2,"simple","23.28","3.00","42.95","14.72","4813.03","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Alex-Kade-Platz 0/8"", ""city"": ""Burglengenfeld"", ""zip"": ""08549"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,3,"simple","23.24","3.00","43.03","14.62","4812.79","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Alex-Kade-Platz 0/8"", ""city"": ""Burglengenfeld"", ""zip"": ""08549"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,4,"simple","24.04","3.00","41.60","17.09","4812.94","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Alex-Kade-Platz 0/8"", ""city"": ""Burglengenfeld"", ""zip"": ""08549"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,5,"simple","23.93","3.00","41.79","14.16","4812.99","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Alex-Kade-Platz 0/8"", ""city"": ""Burglengenfeld"", ""zip"": ""08549"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,6,"simple","23.66","3.00","42.26","14.26","4812.76","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Alex-Kade-Platz 0/8"", ""city"": ""Burglengenfeld"", ""zip"": ""08549"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,7,"simple","23.42","3.00","42.70","14.73","4812.76","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Alex-Kade-Platz 0/8"", ""city"": ""Burglengenfeld"", ""zip"": ""08549"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,8,"simple","23.64","3.00","42.30","14.39","4812.94","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Alex-Kade-Platz 0/8"", ""city"": ""Burglengenfeld"", ""zip"": ""08549"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,9,"simple","23.29","3.00","42.94","14.29","4812.89","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Alex-Kade-Platz 0/8"", ""city"": ""Burglengenfeld"", ""zip"": ""08549"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,3,10,"simple","23.29","3.00","42.94","15.42","4812.92","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Alex-Kade-Platz 0/8"", ""city"": ""Burglengenfeld"", ""zip"": ""08549"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",1,4,1,"medium","752.11","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,2,"medium","838.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,3,"medium","597.29","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,4,"medium","573.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,5,"medium","1037.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,6,"medium","640.41","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,7,"medium","655.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,8,"medium","616.91","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,9,"medium","596.20","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,10,"medium","623.96","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,4,1,"medium","505.55","419.00","1.98","8.90","7194.30","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 419, ""counters"": {}}"
"neo4j","optimized","steady",1,4,2,"medium","540.31","460.00","1.85","19.06","7206.69","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 460, ""counters"": {}}"
"neo4j","optimized","steady",1,4,3,"medium","565.13","483.00","1.77","15.57","7218.94","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 483, ""counters"": {}}"
"neo4j","optimized","steady",1,4,4,"medium","557.42","475.00","1.79","13.73","7220.90","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 475, ""counters"": {}}"
"neo4j","optimized","steady",1,4,5,"medium","575.25","492.00","1.74","17.41","7226.57","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 492, ""counters"": {}}"
"neo4j","optimized","steady",1,4,6,"medium","508.05","420.00","1.97","8.08","7234.46","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 420, ""counters"": {}}"
"neo4j","optimized","steady",1,4,7,"medium","585.51","504.00","1.71","18.74","7250.87","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 504, ""counters"": {}}"
"neo4j","optimized","steady",1,4,8,"medium","499.39","418.00","2.00","8.23","7263.57","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 418, ""counters"": {}}"
"neo4j","optimized","steady",1,4,9,"medium","502.62","422.00","1.99","8.19","7263.47","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 422, ""counters"": {}}"
"neo4j","optimized","steady",1,4,10,"medium","889.43","561.00","1.12","20.68","7267.32","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 45, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 561, ""counters"": {}}"
"neo4j","optimized","warmup",1,5,1,"medium","173.77","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,2,"medium","60.28","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,3,"medium","59.78","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,4,"medium","59.50","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,5,"medium","59.84","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,6,"medium","59.06","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,7,"medium","59.20","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,8,"medium","59.42","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,9,"medium","58.84","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,10,"medium","59.25","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,5,1,"medium","15.36","2.00","65.10","30.23","7274.27","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 51, ""first"": {""id"": 244084, ""name"": ""Mutool Fruit Basket, 2-Tier Fruit Bowl with Banana Hanger, Kitchen Countertop Rack, Metal Bowls Perfect for Holding Fruit, Vegetables, Snacks, Cupcakes (Bronze)"", ""price"": 15.989999771118164, ""stock"": 5, ""created_at"": ""2023-06-22T19:17:23.000000000+00:00"", ""updated_at"": ""2024-12-24T19:11:12.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,2,"medium","9.13","1.00","109.50","33.94","7274.73","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 51, ""first"": {""id"": 244084, ""name"": ""Mutool Fruit Basket, 2-Tier Fruit Bowl with Banana Hanger, Kitchen Countertop Rack, Metal Bowls Perfect for Holding Fruit, Vegetables, Snacks, Cupcakes (Bronze)"", ""price"": 15.989999771118164, ""stock"": 5, ""created_at"": ""2023-06-22T19:17:23.000000000+00:00"", ""updated_at"": ""2024-12-24T19:11:12.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,5,3,"medium","9.13","2.00","109.53","39.32","7274.38","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 51, ""first"": {""id"": 244084, ""name"": ""Mutool Fruit Basket, 2-Tier Fruit Bowl with Banana Hanger, Kitchen Countertop Rack, Metal Bowls Perfect for Holding Fruit, Vegetables, Snacks, Cupcakes (Bronze)"", ""price"": 15.989999771118164, ""stock"": 5, ""created_at"": ""2023-06-22T19:17:23.000000000+00:00"", ""updated_at"": ""2024-12-24T19:11:12.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,4,"medium","9.04","2.00","110.65","73.88","7275.18","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 51, ""first"": {""id"": 244084, ""name"": ""Mutool Fruit Basket, 2-Tier Fruit Bowl with Banana Hanger, Kitchen Countertop Rack, Metal Bowls Perfect for Holding Fruit, Vegetables, Snacks, Cupcakes (Bronze)"", ""price"": 15.989999771118164, ""stock"": 5, ""created_at"": ""2023-06-22T19:17:23.000000000+00:00"", ""updated_at"": ""2024-12-24T19:11:12.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,5,"medium","8.93","2.00","112.01","38.07","7275.96","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 51, ""first"": {""id"": 244084, ""name"": ""Mutool Fruit Basket, 2-Tier Fruit Bowl with Banana Hanger, Kitchen Countertop Rack, Metal Bowls Perfect for Holding Fruit, Vegetables, Snacks, Cupcakes (Bronze)"", ""price"": 15.989999771118164, ""stock"": 5, ""created_at"": ""2023-06-22T19:17:23.000000000+00:00"", ""updated_at"": ""2024-12-24T19:11:12.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,6,"medium","9.17","2.00","109.04","34.90","7276.05","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 51, ""first"": {""id"": 244084, ""name"": ""Mutool Fruit Basket, 2-Tier Fruit Bowl with Banana Hanger, Kitchen Countertop Rack, Metal Bowls Perfect for Holding Fruit, Vegetables, Snacks, Cupcakes (Bronze)"", ""price"": 15.989999771118164, ""stock"": 5, ""created_at"": ""2023-06-22T19:17:23.000000000+00:00"", ""updated_at"": ""2024-12-24T19:11:12.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,7,"medium","9.40","2.00","106.35","36.58","7276.32","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 51, ""first"": {""id"": 244084, ""name"": ""Mutool Fruit Basket, 2-Tier Fruit Bowl with Banana Hanger, Kitchen Countertop Rack, Metal Bowls Perfect for Holding Fruit, Vegetables, Snacks, Cupcakes (Bronze)"", ""price"": 15.989999771118164, ""stock"": 5, ""created_at"": ""2023-06-22T19:17:23.000000000+00:00"", ""updated_at"": ""2024-12-24T19:11:12.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,5,8,"medium","8.91","1.00","112.22","34.11","7276.33","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 51, ""first"": {""id"": 244084, ""name"": ""Mutool Fruit Basket, 2-Tier Fruit Bowl with Banana Hanger, Kitchen Countertop Rack, Metal Bowls Perfect for Holding Fruit, Vegetables, Snacks, Cupcakes (Bronze)"", ""price"": 15.989999771118164, ""stock"": 5, ""created_at"": ""2023-06-22T19:17:23.000000000+00:00"", ""updated_at"": ""2024-12-24T19:11:12.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,5,9,"medium","9.22","1.00","108.48","35.07","7276.05","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 51, ""first"": {""id"": 244084, ""name"": ""Mutool Fruit Basket, 2-Tier Fruit Bowl with Banana Hanger, Kitchen Countertop Rack, Metal Bowls Perfect for Holding Fruit, Vegetables, Snacks, Cupcakes (Bronze)"", ""price"": 15.989999771118164, ""stock"": 5, ""created_at"": ""2023-06-22T19:17:23.000000000+00:00"", ""updated_at"": ""2024-12-24T19:11:12.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,5,10,"medium","8.83","1.00","113.25","36.58","7276.34","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 51, ""first"": {""id"": 244084, ""name"": ""Mutool Fruit Basket, 2-Tier Fruit Bowl with Banana Hanger, Kitchen Countertop Rack, Metal Bowls Perfect for Holding Fruit, Vegetables, Snacks, Cupcakes (Bronze)"", ""price"": 15.989999771118164, ""stock"": 5, ""created_at"": ""2023-06-22T19:17:23.000000000+00:00"", ""updated_at"": ""2024-12-24T19:11:12.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",1,6,1,"medium","129.68","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,2,"medium","60.55","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,3,"medium","59.93","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,4,"medium","60.15","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,5,"medium","60.80","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,6,"medium","59.61","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,7,"medium","61.50","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,8,"medium","59.98","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,9,"medium","59.55","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,10,"medium","59.49","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,6,1,"medium","13.51","1.00","74.01","40.21","7280.19","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,2,"medium","9.32","1.00","107.33","33.98","7280.40","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,3,"medium","9.61","2.00","104.06","38.49","7280.31","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,6,4,"medium","9.56","1.00","104.56","33.10","7280.45","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,5,"medium","9.76","1.00","102.47","35.88","7280.57","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,6,"medium","9.10","1.00","109.94","70.07","7280.64","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,7,"medium","9.56","1.00","104.58","32.54","7280.41","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,8,"medium","9.42","1.00","106.12","32.34","7280.06","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,6,9,"medium","9.34","0.00","107.06","31.31","7280.45","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,6,10,"medium","9.49","1.00","105.32","31.99","7280.36","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",1,7,1,"complex","210.15","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,2,"complex","88.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,3,"complex","85.49","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,4,"complex","84.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,5,"complex","83.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,6,"complex","84.39","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,7,"complex","85.82","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,8,"complex","83.71","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,9,"complex","84.00","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,10,"complex","86.26","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,7,1,"complex","37.19","6.00","26.89","13.12","7292.51","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,2,"complex","32.94","6.00","30.35","10.63","7292.73","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,3,"complex","32.80","6.00","30.48","10.94","7292.80","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,4,"complex","37.45","7.00","26.70","10.21","7292.41","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",1,7,5,"complex","32.78","6.00","30.51","10.89","7292.59","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,6,"complex","34.10","6.00","29.32","10.37","7292.81","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,7,"complex","32.06","6.00","31.20","10.69","7292.84","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,8,"complex","33.32","6.00","30.01","10.31","7290.78","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,9,"complex","32.57","6.00","30.71","10.52","7288.97","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,7,10,"complex","33.31","6.00","30.02","10.82","7289.16","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",1,8,1,"complex","128.05","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,2,"complex","56.49","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,3,"complex","56.29","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,4,"complex","54.86","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,5,"complex","54.78","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,6,"complex","55.26","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,7,"complex","54.74","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,8,"complex","55.36","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,9,"complex","54.73","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,10,"complex","55.11","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,8,1,"complex","8.67","1.00","115.31","44.70","7290.80","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 61, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,2,"complex","4.52","1.00","221.40","65.86","7290.53","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 61, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,3,"complex","4.64","1.00","215.73","65.50","7290.68","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 61, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,4,"complex","4.62","1.00","216.68","66.71","7290.68","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 61, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,5,"complex","4.73","1.00","211.33","69.99","7290.68","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 61, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,6,"complex","4.98","1.00","200.90","62.12","7290.97","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 61, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,7,"complex","4.85","2.00","206.01","65.96","7291.18","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 61, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,8,8,"complex","4.69","1.00","213.25","71.69","7291.13","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 61, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,9,"complex","4.59","1.00","217.63","74.24","7291.07","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 61, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,8,10,"complex","4.99","1.00","200.55","61.14","7290.91","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 61, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",1,9,1,"complex","168.13","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,2,"complex","63.42","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,3,"complex","63.56","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,4,"complex","61.74","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,5,"complex","60.73","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,6,"complex","60.15","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,7,"complex","59.82","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,8,"complex","59.67","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,9,"complex","59.53","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,10,"complex","59.57","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,9,1,"complex","14.20","2.00","70.42","36.47","7295.45","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 263, ""first"": {""id"": 3, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,2,"complex","9.42","2.00","106.17","34.14","7295.62","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 263, ""first"": {""id"": 3, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,3,"complex","9.13","3.00","109.58","35.91","7295.49","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 263, ""first"": {""id"": 3, ""orders_last_30d"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,9,4,"complex","9.38","3.00","106.56","101.33","7295.18","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 263, ""first"": {""id"": 3, ""orders_last_30d"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,9,5,"complex","9.44","2.00","105.90","37.69","7295.14","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 263, ""first"": {""id"": 3, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,6,"complex","9.19","2.00","108.87","34.41","7295.58","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 263, ""first"": {""id"": 3, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,7,"complex","9.15","2.00","109.25","34.96","7295.53","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 263, ""first"": {""id"": 3, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,8,"complex","9.09","2.00","110.00","34.38","7295.31","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 263, ""first"": {""id"": 3, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",1,9,9,"complex","9.18","3.00","108.95","35.23","7295.67","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 263, ""first"": {""id"": 3, ""orders_last_30d"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",1,9,10,"complex","9.33","2.00","107.21","33.32","7295.51","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 263, ""first"": {""id"": 3, ""orders_last_30d"": 1}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","warmup",1,10,1,"very_complex","218.17","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,2,"very_complex","59.31","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,3,"very_complex","58.62","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,4,"very_complex","58.33","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,5,"very_complex","58.13","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,6,"very_complex","58.20","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,7,"very_complex","58.12","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,8,"very_complex","58.57","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,9,"very_complex","58.19","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,10,"very_complex","58.01","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,10,1,"very_complex","12.76","4.00","78.38","44.92","7302.39","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,2,"very_complex","7.91","4.00","126.50","44.04","7302.86","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,3,"very_complex","7.72","5.00","129.46","43.14","7302.34","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,10,4,"very_complex","7.36","4.00","135.79","43.78","7302.51","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,5,"very_complex","7.51","4.00","133.12","47.89","7302.59","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,6,"very_complex","7.44","4.00","134.41","44.85","7302.62","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,7,"very_complex","7.18","4.00","139.35","46.68","7302.79","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,8,"very_complex","7.33","4.00","136.50","47.16","7302.49","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,9,"very_complex","7.35","4.00","136.04","55.52","7302.85","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",1,10,10,"very_complex","7.38","4.00","135.50","50.47","7302.85","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","warmup",1,11,1,"very_complex","156.37","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,2,"very_complex","71.97","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,3,"very_complex","71.18","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,4,"very_complex","70.93","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,5,"very_complex","70.69","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,6,"very_complex","70.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,7,"very_complex","70.23","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,8,"very_complex","69.39","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,9,"very_complex","70.68","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,10,"very_complex","71.54","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,11,1,"very_complex","23.94","15.00","41.78","21.99","7310.29","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",1,11,2,"very_complex","20.01","16.00","49.98","20.79","7310.21","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",1,11,3,"very_complex","20.12","15.00","49.69","22.84","7310.37","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",1,11,4,"very_complex","19.52","15.00","51.23","22.80","7310.43","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",1,11,5,"very_complex","19.42","15.00","51.49","21.63","7310.37","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",1,11,6,"very_complex","19.32","14.00","51.75","21.13","7310.32","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",1,11,7,"very_complex","19.44","15.00","51.45","20.62","7310.43","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",1,11,8,"very_complex","19.41","14.00","51.51","21.13","7310.48","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",1,11,9,"very_complex","19.40","15.00","51.55","21.56","7310.61","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",1,11,10,"very_complex","19.96","15.00","50.09","20.98","7310.83","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","warmup",1,12,1,"very_complex","153.15","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,2,"very_complex","60.00","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,3,"very_complex","59.54","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,4,"very_complex","59.31","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,5,"very_complex","59.50","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,6,"very_complex","59.69","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,7,"very_complex","59.38","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,8,"very_complex","59.49","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,9,"very_complex","59.48","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,10,"very_complex","59.56","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,12,1,"very_complex","15.66","6.00","63.87","75.78","7304.68","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,2,"very_complex","9.17","6.00","109.01","37.28","7304.53","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,3,"very_complex","9.40","6.00","106.34","38.41","7304.58","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,4,"very_complex","9.11","6.00","109.78","37.68","7304.67","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,5,"very_complex","9.01","6.00","111.02","40.70","7304.62","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,6,"very_complex","9.04","6.00","110.63","41.65","7304.73","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,7,"very_complex","9.18","6.00","108.92","40.62","7304.84","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,8,"very_complex","9.04","6.00","110.59","36.88","7304.62","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",1,12,9,"very_complex","8.91","5.00","112.20","38.46","7304.96","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",1,12,10,"very_complex","8.90","6.00","112.37","38.70","7304.51","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",1,13,1,"create","224.94","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,2,"create","66.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,3,"create","64.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,4,"create","57.02","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,5,"create","63.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,6,"create","63.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,7,"create","63.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,8,"create","63.92","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,9,"create","55.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,10,"create","63.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,13,1,"create","17.65","1.00","56.65","33.80","7321.12","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1375}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,2,"create","6.21","1.00","160.99","51.96","7320.99","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1376}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,3,"create","13.59","1.00","73.57","23.43","7321.13","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1377}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,4,"create","6.12","0.00","163.29","56.37","7321.15","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1378}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,5,"create","13.92","1.00","71.84","25.56","7321.26","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1379}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,6,"create","12.96","1.00","77.18","26.29","7321.35","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1380}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,7,"create","5.86","1.00","170.58","54.35","7321.16","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1381}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,8,"create","12.96","1.00","77.17","25.99","7324.03","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1382}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,9,"create","12.80","1.00","78.11","25.36","7326.30","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1383}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,10,"create","12.79","1.00","78.21","40.39","7326.53","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1384}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",1,14,1,"create","113.77","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,2,"create","73.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,3,"create","60.92","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,4,"create","65.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,5,"create","63.32","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,6,"create","63.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,7,"create","64.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,8,"create","63.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,9,"create","63.05","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,10,"create","55.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,14,1,"create","17.14","1.00","58.33","38.91","7318.19","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2020}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,2,"create","12.81","1.00","78.04","28.68","7318.43","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2021}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,3,"create","12.88","1.00","77.62","25.24","7318.57","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2022}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,4,"create","12.71","1.00","78.67","25.82","7318.65","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2023}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,5,"create","12.99","1.00","77.01","24.23","7318.35","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2024}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,6,"create","13.10","1.00","76.33","25.45","7318.43","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2025}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,7,"create","13.67","1.00","73.16","26.38","7318.62","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2026}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,8,"create","12.93","1.00","77.32","24.56","7318.29","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2027}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,9,"create","12.64","1.00","79.11","23.96","7318.34","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2028}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,10,"create","12.46","1.00","80.29","24.92","7318.57","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2029}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",1,15,1,"create","131.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,2,"create","56.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,3,"create","63.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,4,"create","63.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,5,"create","63.00","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,6,"create","63.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,7,"create","63.04","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,8,"create","63.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,9,"create","63.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,10,"create","62.83","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,15,1,"create","16.91","1.00","59.15","23.70","7328.89","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1459}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,2,"create","13.21","1.00","75.68","25.34","7328.58","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1460}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,3,"create","5.84","1.00","171.33","58.15","7329.04","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1461}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,4,"create","12.67","1.00","78.90","23.72","7328.50","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1462}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,5,"create","5.84","1.00","171.22","54.46","7324.44","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1463}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,6,"create","13.06","1.00","76.57","27.67","7324.21","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1464}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,7,"create","6.08","1.00","164.38","59.45","7324.16","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1465}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,8,"create","13.63","1.00","73.35","24.25","7324.13","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1466}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,9,"create","5.97","1.00","167.48","80.49","7323.95","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1467}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,10,"create","13.00","1.00","76.95","24.98","7324.02","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1468}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",1,16,1,"create","119.76","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,2,"create","67.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,3,"create","66.05","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,4,"create","66.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,5,"create","66.37","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,6,"create","66.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,7,"create","59.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,8,"create","66.03","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,9,"create","66.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,10,"create","66.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,16,1,"create","12.52","4.00","79.85","35.16","7328.66","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10561}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,2,"create","16.26","4.00","61.50","21.30","7328.45","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10562}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,3,"create","8.91","4.00","112.23","38.12","7328.54","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10563}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,4,"create","15.83","4.00","63.17","23.68","7328.28","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10564}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,5,"create","15.96","4.00","62.66","21.20","7328.15","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10565}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,6,"create","16.86","4.00","59.30","25.32","7327.99","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10566}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,7,"create","16.28","4.00","61.44","20.75","7327.94","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10567}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,8,"create","8.70","5.00","114.94","39.30","7328.15","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10568}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,9,"create","15.88","4.00","62.95","23.13","7328.29","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10569}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,10,"create","15.58","5.00","64.20","21.78","7328.34","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10570}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",1,17,1,"update","584.91","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,2,"update","461.36","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,3,"update","456.32","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,4,"update","456.38","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,5,"update","457.31","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,6,"update","447.92","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,7,"update","449.98","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,8,"update","457.51","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,9,"update","454.35","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,10,"update","456.15","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,17,1,"update","408.62","394.00","2.45","9.02","7336.16","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 56}, ""server_ms"": 394, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,2,"update","403.90","392.00","2.48","8.85","7336.35","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 57}, ""server_ms"": 392, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,3,"update","398.59","394.00","2.51","9.11","7336.17","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 58}, ""server_ms"": 394, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,4,"update","401.90","389.00","2.49","8.86","7336.28","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 59}, ""server_ms"": 389, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,5,"update","402.34","391.00","2.49","8.85","7336.13","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 60}, ""server_ms"": 391, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,6,"update","409.63","398.00","2.44","8.83","7336.30","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 61}, ""server_ms"": 398, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,7,"update","404.26","393.00","2.47","8.84","7336.18","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 62}, ""server_ms"": 393, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,8,"update","402.66","392.00","2.48","8.83","7336.50","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 63}, ""server_ms"": 392, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,9,"update","403.45","392.00","2.48","8.85","7336.24","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 64}, ""server_ms"": 392, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,10,"update","413.77","392.00","2.42","8.67","7336.30","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 65}, ""server_ms"": 392, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,18,1,"update","102.28","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,2,"update","62.40","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,3,"update","62.30","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,4,"update","53.44","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,5,"update","53.11","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,6,"update","53.44","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,7,"update","53.40","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,8,"update","53.66","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,9,"update","53.58","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,10,"update","53.27","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,18,1,"update","6.03","0.00","165.81","85.88","7337.09","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,2,"update","3.09","0.00","323.90","103.86","7336.89","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,3,"update","3.01","0.00","332.16","97.83","7337.24","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,4,"update","3.09","1.00","323.94","91.64","7336.97","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,5,"update","2.90","0.00","344.65","101.09","7336.83","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,6,"update","2.96","0.00","337.86","97.00","7337.26","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,7,"update","3.11","1.00","321.94","121.97","7336.81","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,8,"update","2.87","0.00","348.59","98.78","7337.20","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,9,"update","2.93","0.00","341.34","126.16","7336.96","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,10,"update","2.88","1.00","347.32","98.24","7336.66","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,19,1,"update","92.11","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,2,"update","62.31","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,3,"update","62.91","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,4,"update","63.25","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,5,"update","62.05","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,6,"update","55.66","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,7,"update","62.25","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,8,"update","62.42","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,9,"update","54.84","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,10,"update","62.28","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,19,1,"update","14.93","1.00","66.96","25.10","7337.57","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 35}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,2,"update","12.15","1.00","82.30","27.48","7337.25","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 38}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,3,"update","12.10","1.00","82.64","25.11","7337.54","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 41}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,4,"update","11.96","1.00","83.64","26.85","7337.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 44}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,5,"update","12.10","1.00","82.67","24.29","7337.62","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 47}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,6,"update","12.00","1.00","83.36","25.54","7337.26","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 50}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,7,"update","4.83","1.00","206.86","63.66","7337.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 53}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,8,"update","11.90","1.00","84.04","24.56","7337.54","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 56}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,9,"update","12.09","1.00","82.69","25.82","7337.56","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 59}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,10,"update","12.17","1.00","82.16","24.97","7337.32","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 62}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,20,1,"update","84.44","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,2,"update","62.05","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,3,"update","62.00","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,4,"update","62.47","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,5,"update","54.78","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,6,"update","62.25","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,7,"update","61.94","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,8,"update","61.81","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,9,"update","61.82","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,10,"update","61.39","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,20,1,"update","13.96","1.00","71.61","23.33","7345.10","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,2,"update","12.08","0.00","82.79","24.47","7345.14","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,3,"update","14.22","0.00","70.32","21.09","7345.35","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,4,"update","11.48","1.00","87.15","24.78","7345.25","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,5,"update","11.05","0.00","90.51","25.57","7345.10","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,6,"update","11.40","0.00","87.75","26.48","7345.55","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,7,"update","11.49","0.00","87.05","25.73","7345.32","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,8,"update","11.22","0.00","89.13","26.01","7345.32","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,9,"update","12.19","1.00","82.03","24.66","7345.34","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,10,"update","11.37","0.00","87.98","25.49","7345.23","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,21,1,"delete","114.32","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,2,"delete","62.88","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,3,"delete","62.65","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,4,"delete","55.31","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,5,"delete","55.57","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,6,"delete","62.11","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,7,"delete","61.99","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,8,"delete","62.66","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,9,"delete","62.43","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,10,"delete","54.90","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,21,1,"delete","7.71","0.00","129.76","45.27","7347.30","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 11}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,2,"delete","12.24","1.00","81.71","27.48","7347.26","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 12}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,3,"delete","11.82","1.00","84.57","24.59","7347.43","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 13}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,4,"delete","12.07","1.00","82.85","28.33","7336.95","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 14}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,5,"delete","12.25","0.00","81.62","28.03","7337.04","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 15}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,6,"delete","4.78","1.00","209.29","62.50","7336.93","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 16}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,7,"delete","12.32","0.00","81.16","25.03","7336.92","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 17}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,8,"delete","4.78","1.00","209.01","62.70","7336.87","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 18}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,9,"delete","11.98","0.00","83.50","25.13","7337.08","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 19}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,10,"delete","5.12","0.00","195.21","59.22","7337.14","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 20}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,22,1,"delete","88.06","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,2,"delete","63.25","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,3,"delete","62.16","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,4,"delete","55.15","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,5,"delete","62.03","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,6,"delete","62.19","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,7,"delete","61.91","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,8,"delete","62.02","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,9,"delete","61.91","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,10,"delete","55.17","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,22,1,"delete","14.05","1.00","71.20","25.29","7337.50","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 11}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,2,"delete","4.69","0.00","213.35","154.57","7337.96","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 12}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,3,"delete","11.71","1.00","85.39","29.21","7338.27","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 13}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,4,"delete","4.73","1.00","211.35","65.43","7338.54","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 14}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,5,"delete","11.69","0.00","85.54","25.64","7338.51","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 15}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,6,"delete","4.86","0.00","205.55","64.75","7338.68","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 16}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,7,"delete","11.71","0.00","85.41","24.77","7338.80","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 17}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,8,"delete","11.62","1.00","86.04","27.40","7338.43","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 18}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,9,"delete","11.78","0.00","84.90","25.88","7338.61","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 19}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,10,"delete","11.61","1.00","86.15","26.05","7339.00","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 20}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,23,1,"delete","95.53","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,2,"delete","63.32","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,3,"delete","55.33","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,4,"delete","63.43","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,5,"delete","62.60","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,6,"delete","62.44","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,7,"delete","63.43","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,8,"delete","62.68","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,9,"delete","62.50","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,10,"delete","63.03","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,23,1,"delete","14.77","1.00","67.70","22.73","7339.22","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 11}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,2,"delete","12.40","1.00","80.63","24.63","7339.37","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 12}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,3,"delete","12.72","0.00","78.60","25.44","7339.46","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 13}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,4,"delete","11.98","1.00","83.47","25.13","7339.29","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 14}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,5,"delete","13.14","0.00","76.09","26.23","7339.15","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 15}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,6,"delete","12.07","1.00","82.84","24.90","7339.51","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 16}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,7,"delete","11.92","1.00","83.92","26.14","7339.31","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 17}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,8,"delete","12.44","1.00","80.38","23.60","7339.63","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 18}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,9,"delete","11.87","1.00","84.25","24.43","7339.55","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 19}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,10,"delete","11.90","1.00","84.02","25.41","7339.42","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 20}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,24,1,"delete","94.61","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,2,"delete","57.31","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,3,"delete","64.85","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,4,"delete","64.48","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,5,"delete","64.18","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,6,"delete","64.10","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,7,"delete","64.77","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,8,"delete","57.50","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,9,"delete","64.34","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,10,"delete","64.00","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,24,1,"delete","16.14","3.00","61.95","21.78","7340.28","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 11}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,2,"delete","13.95","2.00","71.69","23.07","7339.71","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 12}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,3,"delete","7.54","3.00","132.57","45.17","7340.19","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 13}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,4,"delete","14.56","2.00","68.70","20.99","7340.31","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 14}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,5,"delete","13.56","3.00","73.73","23.10","7340.18","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 15}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,6,"delete","14.48","3.00","69.06","28.11","7340.41","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 16}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,7,"delete","6.59","2.00","151.72","46.29","7340.58","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 17}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,8,"delete","13.75","2.00","72.73","22.83","7340.42","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 18}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,9,"delete","6.95","2.00","143.89","46.18","7340.53","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 19}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,10,"delete","6.70","2.00","149.20","47.08","7340.21","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 20}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",3,1,1,"simple","14905.78","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,2,"simple","14800.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,3,"simple","14844.35","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,4,"simple","14821.86","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,5,"simple","14842.01","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,6,"simple","14936.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,7,"simple","14931.72","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,8,"simple","14811.33","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,9,"simple","14873.08","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,10,"simple","14798.26","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,1,1,"simple","14744.66","520.00","0.20","1.10","7354.79","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 520, ""counters"": {}}"
"neo4j","optimized","steady",3,1,2,"simple","14706.59","510.00","0.20","1.09","7355.17","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 510, ""counters"": {}}"
"neo4j","optimized","steady",3,1,3,"simple","14774.30","514.00","0.20","1.09","7355.24","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 514, ""counters"": {}}"
"neo4j","optimized","steady",3,1,4,"simple","14728.97","515.00","0.20","1.09","7355.73","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 515, ""counters"": {}}"
"neo4j","optimized","steady",3,1,5,"simple","14766.54","507.00","0.20","1.14","7355.79","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 507, ""counters"": {}}"
"neo4j","optimized","steady",3,1,6,"simple","14788.48","514.00","0.20","1.12","7356.89","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 514, ""counters"": {}}"
"neo4j","optimized","steady",3,1,7,"simple","14775.45","518.00","0.20","1.39","7366.50","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 518, ""counters"": {}}"
"neo4j","optimized","steady",3,1,8,"simple","14890.14","513.00","0.20","1.06","7374.30","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 513, ""counters"": {}}"
"neo4j","optimized","steady",3,1,9,"simple","14820.57","567.00","0.20","1.13","7374.14","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 567, ""counters"": {}}"
"neo4j","optimized","steady",3,1,10,"simple","14849.72","515.00","0.20","1.06","7373.85","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 515, ""counters"": {}}"
"neo4j","optimized","warmup",3,2,1,"simple","73.53","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,2,"simple","74.73","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,3,"simple","73.38","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,4,"simple","74.18","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,5,"simple","73.73","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,6,"simple","74.01","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,7,"simple","73.13","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,8,"simple","74.35","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,9,"simple","73.49","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,10,"simple","73.28","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,2,1,"simple","23.15","0.00","129.57","13.76","7374.36","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,2,"simple","23.29","0.00","128.82","14.30","7374.20","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,3,"simple","22.68","0.00","132.27","15.12","7373.86","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,4,"simple","23.17","0.00","129.47","14.19","7374.10","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,5,"simple","22.73","0.00","131.96","14.29","7374.03","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,6,"simple","22.89","0.00","131.09","15.10","7373.87","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,7,"simple","22.54","0.00","133.11","14.75","7373.71","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,8,"simple","25.94","0.00","115.65","18.01","7373.90","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,9,"simple","22.68","0.00","132.26","14.62","7374.01","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,10,"simple","22.76","0.00","131.80","14.54","7374.08","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",3,3,1,"simple","133.14","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,2,"simple","130.47","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,3,"simple","129.25","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,4,"simple","130.27","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,5,"simple","130.34","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,6,"simple","130.14","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,7,"simple","136.67","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,8,"simple","129.78","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,9,"simple","129.22","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,10,"simple","130.18","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,3,1,"simple","78.90","3.00","38.02","8.02","7373.78","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Benthinstraße 7"", ""city"": ""Lörrach"", ""zip"": ""37743"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,2,"simple","79.46","3.00","37.76","5.40","7373.74","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Benthinstraße 7"", ""city"": ""Lörrach"", ""zip"": ""37743"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,3,"simple","78.62","4.00","38.16","5.39","7373.70","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Benthinstraße 7"", ""city"": ""Lörrach"", ""zip"": ""37743"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,3,4,"simple","79.17","3.00","37.89","10.19","7373.93","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Benthinstraße 7"", ""city"": ""Lörrach"", ""zip"": ""37743"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,5,"simple","78.38","3.00","38.28","5.76","7373.78","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Benthinstraße 7"", ""city"": ""Lörrach"", ""zip"": ""37743"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,6,"simple","79.00","4.00","37.98","6.46","7373.65","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Benthinstraße 7"", ""city"": ""Lörrach"", ""zip"": ""37743"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,3,7,"simple","88.95","4.00","33.73","5.69","7373.78","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Benthinstraße 7"", ""city"": ""Lörrach"", ""zip"": ""37743"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,3,8,"simple","78.70","3.00","38.12","6.45","7374.05","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Benthinstraße 7"", ""city"": ""Lörrach"", ""zip"": ""37743"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,9,"simple","79.04","3.00","37.95","6.06","7373.82","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Benthinstraße 7"", ""city"": ""Lörrach"", ""zip"": ""37743"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,3,10,"simple","78.95","3.00","38.00","5.90","7373.73","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 16, ""street"": ""Benthinstraße 7"", ""city"": ""Lörrach"", ""zip"": ""37743"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",3,4,1,"medium","812.48","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,2,"medium","798.34","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,3,"medium","803.16","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,4,"medium","789.42","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,5,"medium","2189.20","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,6,"medium","798.48","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,7,"medium","804.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,8,"medium","800.01","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,9,"medium","1215.39","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,10,"medium","1016.83","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,4,1,"medium","749.23","463.00","4.00","17.19","7472.03","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 463, ""counters"": {}}"
"neo4j","optimized","steady",3,4,2,"medium","1018.70","741.00","2.94","35.94","7472.21","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 741, ""counters"": {}}"
"neo4j","optimized","steady",3,4,3,"medium","932.81","653.00","3.22","30.47","7472.18","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 653, ""counters"": {}}"
"neo4j","optimized","steady",3,4,4,"medium","809.32","530.00","3.71","29.96","7472.30","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 530, ""counters"": {}}"
"neo4j","optimized","steady",3,4,5,"medium","1094.47","809.00","2.74","41.19","7472.50","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 809, ""counters"": {}}"
"neo4j","optimized","steady",3,4,6,"medium","753.37","474.00","3.98","17.29","7472.62","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 474, ""counters"": {}}"
"neo4j","optimized","steady",3,4,7,"medium","987.56","708.00","3.04","35.63","7472.57","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 708, ""counters"": {}}"
"neo4j","optimized","steady",3,4,8,"medium","899.54","627.00","3.34","28.46","7472.72","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 627, ""counters"": {}}"
"neo4j","optimized","steady",3,4,9,"medium","815.04","531.00","3.68","23.72","7472.48","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 531, ""counters"": {}}"
"neo4j","optimized","steady",3,4,10,"medium","957.54","667.00","3.13","30.29","7472.70","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 65, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 667, ""counters"": {}}"
"neo4j","optimized","warmup",3,5,1,"medium","54.50","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,2,"medium","53.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,3,"medium","53.86","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,4,"medium","53.86","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,5,"medium","53.72","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,6,"medium","53.88","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,7,"medium","53.78","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,8,"medium","53.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,9,"medium","53.68","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,10,"medium","53.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,5,1,"medium","3.57","1.00","840.36","95.47","7473.03","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,2,"medium","3.52","1.00","851.67","95.77","7472.85","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,3,"medium","3.45","2.00","870.22","97.67","7472.89","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,5,4,"medium","3.60","1.00","832.85","98.36","7472.92","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,5,"medium","3.46","2.00","867.85","96.00","7473.07","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,5,6,"medium","3.42","1.00","876.37","92.03","7472.87","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,7,"medium","3.40","1.00","882.98","160.23","7473.06","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,8,"medium","3.51","1.00","853.97","92.15","7473.00","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,9,"medium","3.50","1.00","858.27","97.50","7472.88","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,5,10,"medium","3.41","1.00","880.59","98.74","7472.83","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",3,6,1,"medium","74.75","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,2,"medium","73.86","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,3,"medium","73.15","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,4,"medium","72.28","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,5,"medium","73.34","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,6,"medium","73.75","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,7,"medium","72.30","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,8,"medium","73.54","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,9,"medium","72.35","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,10,"medium","73.17","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,6,1,"medium","21.93","1.00","136.77","14.45","7474.88","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,2,"medium","22.20","1.00","135.11","14.16","7474.81","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,3,"medium","21.36","1.00","140.45","15.44","7474.68","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,4,"medium","22.02","0.00","136.24","15.43","7475.07","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,6,5,"medium","21.89","0.00","137.04","14.31","7475.01","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,6,6,"medium","21.71","0.00","138.18","14.50","7475.03","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,6,7,"medium","22.32","1.00","134.42","14.63","7475.21","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,8,"medium","22.47","1.00","133.53","15.76","7474.97","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,9,"medium","22.09","1.00","135.78","14.56","7475.00","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,6,10,"medium","21.82","1.00","137.47","14.63","7475.02","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",3,7,1,"complex","152.66","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,2,"complex","149.44","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,3,"complex","148.52","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,4,"complex","150.60","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,5,"complex","149.40","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,6,"complex","161.04","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,7,"complex","148.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,8,"complex","148.96","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,9,"complex","149.66","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,10,"complex","149.58","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,7,1,"complex","98.80","6.00","30.36","4.70","7483.57","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,2,"complex","96.65","6.00","31.04","4.94","7483.42","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,3,"complex","97.10","6.00","30.90","5.00","7483.60","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,4,"complex","97.78","6.00","30.68","4.83","7483.58","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,5,"complex","96.51","6.00","31.09","4.96","7477.21","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,6,"complex","97.05","6.00","30.91","4.79","7477.24","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,7,"complex","96.83","7.00","30.98","4.71","7477.27","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",3,7,8,"complex","97.79","6.00","30.68","4.81","7477.17","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,7,9,"complex","96.89","5.00","30.96","4.77","7476.99","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,7,10,"complex","98.60","6.00","30.43","4.84","7477.09","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",3,8,1,"complex","57.51","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,2,"complex","56.99","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,3,"complex","56.97","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,4,"complex","57.19","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,5,"complex","56.76","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,6,"complex","57.39","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,7,"complex","56.70","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,8,"complex","56.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,9,"complex","56.99","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,10,"complex","56.69","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,8,1,"complex","6.74","0.00","445.06","47.19","7476.98","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 57, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,8,2,"complex","6.76","1.00","443.58","45.98","7477.08","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 57, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,8,3,"complex","6.85","0.00","437.66","46.11","7477.15","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 57, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,8,4,"complex","6.76","0.00","443.75","47.63","7477.56","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 57, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,8,5,"complex","6.76","1.00","443.75","45.22","7477.26","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 57, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,8,6,"complex","6.73","0.00","445.51","45.67","7477.28","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 57, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,8,7,"complex","6.71","0.00","446.78","46.26","7477.05","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 57, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,8,8,"complex","6.69","1.00","448.24","45.31","7476.83","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 57, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,8,9,"complex","6.67","0.00","450.05","45.10","7477.50","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 57, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,8,10,"complex","6.60","0.00","454.26","48.00","7477.50","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 57, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",3,9,1,"complex","73.09","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,2,"complex","72.13","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,3,"complex","70.42","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,4,"complex","69.47","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,5,"complex","70.92","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,6,"complex","73.43","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,7,"complex","70.30","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,8,"complex","69.95","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,9,"complex","70.35","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,10,"complex","71.28","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,9,1,"complex","19.78","2.00","151.70","17.89","7476.88","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,2,"complex","19.78","2.00","151.66","17.65","7476.84","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,3,"complex","19.29","2.00","155.53","18.28","7477.32","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,4,"complex","20.31","3.00","147.72","17.60","7477.06","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,9,5,"complex","19.46","2.00","154.13","17.93","7477.21","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,6,"complex","19.45","2.00","154.26","18.39","7477.10","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,7,"complex","19.84","2.00","151.24","18.07","7477.23","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,8,"complex","20.03","3.00","149.80","19.20","7477.04","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,9,9,"complex","19.69","2.00","152.38","18.29","7477.07","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",3,9,10,"complex","19.66","2.00","152.56","17.98","7477.31","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","warmup",3,10,1,"very_complex","57.74","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,2,"very_complex","57.05","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,3,"very_complex","57.07","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,4,"very_complex","57.25","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,5,"very_complex","57.26","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,6,"very_complex","57.06","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,7,"very_complex","57.70","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,8,"very_complex","57.29","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,9,"very_complex","57.32","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,10,"very_complex","56.99","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,10,1,"very_complex","6.90","4.00","434.80","54.74","7477.13","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,10,2,"very_complex","6.94","4.00","432.30","55.68","7477.09","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,10,3,"very_complex","6.89","4.00","435.23","55.13","7477.50","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,10,4,"very_complex","6.86","4.00","437.63","56.88","7477.43","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,10,5,"very_complex","6.90","4.00","434.97","56.06","7477.13","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,10,6,"very_complex","6.90","3.00","435.05","57.69","7477.26","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,10,7,"very_complex","6.90","3.00","435.01","64.76","7477.24","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,10,8,"very_complex","6.91","3.00","433.94","55.56","7477.03","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",3,10,9,"very_complex","6.96","4.00","430.80","55.20","7476.91","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,10,10,"very_complex","7.16","4.00","418.83","57.43","7476.78","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","warmup",3,11,1,"very_complex","74.97","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,2,"very_complex","74.86","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,3,"very_complex","73.77","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,4,"very_complex","73.97","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,5,"very_complex","73.69","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,6,"very_complex","74.20","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,7,"very_complex","73.78","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,8,"very_complex","73.70","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,9,"very_complex","73.49","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,10,"very_complex","74.13","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,11,1,"very_complex","22.88","14.00","131.10","28.64","7477.23","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,2,"very_complex","23.05","15.00","130.14","28.45","7477.19","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",3,11,3,"very_complex","23.86","14.00","125.74","28.34","7477.52","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,4,"very_complex","22.56","14.00","132.97","29.05","7477.25","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,5,"very_complex","23.72","16.00","126.47","29.41","7477.31","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",3,11,6,"very_complex","23.77","14.00","126.18","28.25","7477.07","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,7,"very_complex","23.30","15.00","128.76","29.87","7477.30","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",3,11,8,"very_complex","23.54","14.00","127.45","28.79","7477.26","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,9,"very_complex","23.22","14.00","129.22","28.51","7477.22","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,11,10,"very_complex","22.96","15.00","130.64","28.65","7477.35","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","warmup",3,12,1,"very_complex","59.22","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,2,"very_complex","58.76","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,3,"very_complex","58.80","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,4,"very_complex","59.09","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,5,"very_complex","58.71","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,6,"very_complex","59.19","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,7,"very_complex","59.02","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,8,"very_complex","58.80","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,9,"very_complex","58.89","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,10,"very_complex","59.19","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,12,1,"very_complex","8.59","5.00","349.34","52.57","7477.29","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,12,2,"very_complex","8.46","6.00","354.75","50.88","7476.95","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,3,"very_complex","8.49","6.00","353.42","50.78","7477.15","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,4,"very_complex","29.71","27.00","100.98","178.38","7477.17","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",3,12,5,"very_complex","8.57","6.00","350.22","51.27","7477.52","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,6,"very_complex","8.49","6.00","353.21","51.16","7477.45","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,7,"very_complex","8.44","5.00","355.49","51.53","7477.15","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,12,8,"very_complex","8.64","6.00","347.39","51.25","7477.31","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",3,12,9,"very_complex","8.50","5.00","352.91","50.82","7477.37","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,12,10,"very_complex","8.79","6.00","341.44","51.35","7477.25","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",3,13,1,"create","63.22","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,2,"create","62.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,3,"create","63.36","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,4,"create","63.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,5,"create","55.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,6,"create","62.45","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,7,"create","62.25","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,8,"create","57.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,9,"create","62.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,10,"create","60.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,13,1,"create","12.48","1.00","240.41","30.74","7477.62","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1395}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,2,"create","12.36","1.00","242.77","29.45","7477.56","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1396}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,3,"create","12.38","0.00","242.27","27.86","7477.68","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1397}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,4,"create","12.30","0.00","243.97","36.42","7477.32","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1398}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,5,"create","12.48","1.00","240.46","30.84","7477.44","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1399}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,6,"create","5.13","1.00","584.32","66.97","7477.42","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1400}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,7,"create","12.55","0.00","239.12","29.01","7477.55","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1401}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,8,"create","5.10","0.00","588.64","68.70","7477.69","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1402}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,9,"create","11.68","1.00","256.85","30.09","7477.80","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1403}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,10,"create","12.96","0.00","231.55","28.68","7477.73","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1404}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",3,14,1,"create","62.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,2,"create","62.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,3,"create","62.77","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,4,"create","55.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,5,"create","63.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,6,"create","62.80","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,7,"create","62.42","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,8,"create","55.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,9,"create","55.32","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,10,"create","62.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,14,1,"create","12.03","0.00","249.34","28.36","7477.92","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2040}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,2,"create","5.43","1.00","552.19","64.64","7477.82","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2041}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,3,"create","12.35","1.00","242.82","29.19","7477.54","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2042}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,4,"create","12.07","1.00","248.64","28.23","7477.64","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2043}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,5,"create","12.19","0.00","246.14","28.20","7477.66","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2044}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,6,"create","12.31","1.00","243.74","27.81","7478.23","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2045}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,7,"create","12.49","0.00","240.15","29.90","7477.61","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2046}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,8,"create","12.66","1.00","237.03","30.07","7477.79","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2047}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,9,"create","12.75","1.00","235.26","26.97","7477.68","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2048}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,10,"create","12.23","1.00","245.31","30.71","7477.77","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2049}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",3,15,1,"create","66.03","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,2,"create","64.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,3,"create","57.11","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,4,"create","65.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,5,"create","62.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,6,"create","62.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,7,"create","63.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,8,"create","55.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,9,"create","55.51","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,10,"create","62.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,15,1,"create","12.54","1.00","239.28","29.95","7478.45","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1479}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,2,"create","12.38","1.00","242.37","39.40","7477.98","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1480}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,3,"create","11.99","1.00","250.22","30.12","7478.07","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1481}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,4,"create","12.65","1.00","237.08","33.20","7477.92","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1482}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,5,"create","11.93","1.00","251.54","28.07","7478.26","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1483}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,6,"create","11.91","1.00","251.98","30.47","7478.37","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1484}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,7,"create","5.47","1.00","548.57","66.14","7478.01","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1485}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,8,"create","12.76","1.00","235.11","26.93","7478.18","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1486}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,9,"create","5.53","1.00","542.37","67.70","7478.04","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1487}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,10,"create","12.12","1.00","247.44","33.51","7478.06","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1488}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",3,16,1,"create","59.25","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,2,"create","65.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,3,"create","66.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,4,"create","66.22","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,5,"create","65.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,6,"create","58.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,7,"create","65.75","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,8,"create","65.70","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,9,"create","58.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,10,"create","65.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,16,1,"create","15.67","4.00","191.39","26.58","7478.22","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10581}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,2,"create","14.95","5.00","200.65","28.37","7478.32","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10582}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,3,"create","15.27","4.00","196.51","27.37","7478.14","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10583}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,4,"create","16.08","4.00","186.56","25.85","7478.62","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10584}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,5,"create","15.80","4.00","189.86","27.10","7478.34","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10585}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,6,"create","16.21","4.00","185.04","25.93","7478.52","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10586}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,7,"create","15.34","4.00","195.62","28.42","7478.66","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10587}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,8,"create","8.31","4.00","360.97","54.18","7478.56","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10588}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,9,"create","16.31","4.00","183.92","25.45","7478.79","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10589}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,10,"create","8.44","5.00","355.45","60.44","7478.65","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10590}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",3,17,1,"update","459.64","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,2,"update","479.67","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,3,"update","465.49","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,4,"update","460.86","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,5,"update","520.80","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,6,"update","459.05","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,7,"update","498.79","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,8,"update","462.29","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,9,"update","463.83","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,10,"update","534.43","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,17,1,"update","419.32","417.00","7.15","25.25","7479.04","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 98}, ""server_ms"": 417, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,2,"update","412.77","408.00","7.27","24.99","7479.21","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 100}, ""server_ms"": 408, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,3,"update","419.10","416.00","7.16","26.79","7478.94","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 104}, ""server_ms"": 416, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,4,"update","435.74","404.00","6.88","25.08","7478.64","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 105}, ""server_ms"": 404, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,5,"update","417.81","406.00","7.18","24.95","7478.89","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 109}, ""server_ms"": 406, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,6,"update","431.08","401.00","6.96","25.01","7478.82","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 111}, ""server_ms"": 401, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,7,"update","486.64","478.00","6.16","24.02","7478.61","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 115}, ""server_ms"": 478, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,8,"update","420.76","401.00","7.13","25.25","7479.02","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 117}, ""server_ms"": 401, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,9,"update","409.57","407.00","7.32","24.93","7478.84","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 122}, ""server_ms"": 407, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,10,"update","407.46","403.00","7.36","25.02","7478.73","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 124}, ""server_ms"": 403, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,18,1,"update","62.44","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,2,"update","52.92","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,3,"update","53.83","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,4,"update","53.57","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,5,"update","52.89","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,6,"update","53.63","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,7,"update","53.79","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,8,"update","53.01","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,9,"update","53.04","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,10,"update","53.97","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,18,1,"update","2.65","1.00","1132.46","114.03","7479.06","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,2,"update","3.52","2.00","852.81","85.62","7478.94","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,3,"update","2.64","0.00","1135.72","115.50","7479.02","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,4,"update","2.61","0.00","1148.63","116.33","7478.95","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,5,"update","2.61","1.00","1151.37","116.61","7478.94","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,6,"update","2.63","1.00","1139.17","118.04","7479.22","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,7,"update","3.50","0.00","857.00","86.42","7478.92","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,8,"update","2.63","0.00","1140.25","144.36","7479.29","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,9,"update","2.67","1.00","1124.90","116.60","7478.97","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,10,"update","3.59","0.00","836.63","176.46","7479.09","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,19,1,"update","57.39","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,2,"update","63.71","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,3,"update","64.05","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,4,"update","63.81","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,5,"update","63.74","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,6,"update","56.05","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,7,"update","64.01","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,8,"update","63.74","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,9,"update","63.62","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,10,"update","63.69","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,19,1,"update","13.45","1.00","223.12","23.27","7479.09","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 94}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,2,"update","14.50","1.00","206.90","22.87","7479.41","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 103}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,3,"update","13.52","11.00","221.81","23.92","7479.27","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 118}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,4,"update","13.44","1.00","223.19","23.94","7478.80","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 121}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,5,"update","13.25","1.00","226.37","24.05","7479.06","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 130}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,6,"update","13.47","11.00","222.75","24.96","7479.11","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 145}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,7,"update","13.37","1.00","224.43","23.95","7479.19","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 148}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,8,"update","13.54","1.00","221.58","23.69","7479.04","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 157}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,9,"update","13.44","10.00","223.27","23.94","7479.59","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 169}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,10,"update","5.91","2.00","507.91","54.18","7479.07","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 178}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,20,1,"update","63.48","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,2,"update","62.98","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,3,"update","63.08","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,4,"update","63.02","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,5,"update","63.02","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,6,"update","64.23","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,7,"update","63.15","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,8,"update","64.33","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,9,"update","63.35","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,10,"update","56.91","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,20,1,"update","12.97","10.00","231.27","24.15","7479.36","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,2,"update","5.65","2.00","531.25","53.43","7479.33","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,3,"update","12.88","10.00","232.95","27.15","7479.28","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,4,"update","6.57","0.00","456.41","56.79","7479.35","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,5,"update","14.21","10.00","211.18","26.97","7479.37","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,6,"update","12.67","9.00","236.79","24.47","7479.44","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,7,"update","12.66","9.00","236.99","27.45","7479.58","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,8,"update","12.73","9.00","235.75","24.63","7479.60","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,9,"update","12.89","1.00","232.81","23.44","7479.50","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,10,"update","12.72","0.00","235.77","23.90","7479.47","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,21,1,"delete","63.53","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,2,"delete","62.93","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,3,"delete","56.19","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,4,"delete","62.55","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,5,"delete","62.61","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,6,"delete","62.87","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,7,"delete","62.49","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,8,"delete","56.19","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,9,"delete","62.68","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,10,"delete","62.46","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,21,1,"delete","12.17","10.00","246.53","24.58","7478.12","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 31}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,2,"delete","11.27","0.00","266.20","28.08","7475.91","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 32}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,3,"delete","13.35","12.00","224.72","24.40","7475.97","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 33}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,4,"delete","12.14","11.00","247.21","25.05","7475.96","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 34}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,5,"delete","12.24","1.00","245.06","25.64","7476.13","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 35}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,6,"delete","12.17","10.00","246.54","25.80","7475.56","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 36}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,7,"delete","5.84","2.00","513.53","54.58","7476.08","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 37}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,8,"delete","13.31","10.00","225.32","23.46","7476.09","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 38}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,9,"delete","5.77","1.00","520.12","53.58","7475.62","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 39}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,10,"delete","12.24","0.00","245.12","25.74","7475.64","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 40}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",3,22,1,"delete","55.72","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,2,"delete","62.52","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,3,"delete","63.21","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,4,"delete","62.26","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,5,"delete","63.57","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,6,"delete","63.49","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,7,"delete","55.63","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,8,"delete","62.53","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,9,"delete","62.42","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,10,"delete","62.33","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,22,1,"delete","5.56","4.00","539.79","56.10","7475.86","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 31}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,22,2,"delete","13.09","0.00","229.18","30.74","7475.69","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 32}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,3,"delete","5.63","0.00","532.98","72.24","7475.63","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 33}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,4,"delete","12.02","1.00","249.48","24.97","7476.17","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 34}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,5,"delete","12.03","0.00","249.42","25.20","7475.90","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 35}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,6,"delete","11.97","9.00","250.61","25.43","7475.83","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 36}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",3,22,7,"delete","13.18","10.00","227.55","23.23","7475.71","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 37}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,22,8,"delete","12.21","11.00","245.78","25.95","7475.72","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 38}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,22,9,"delete","12.02","1.00","249.63","25.45","7476.08","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 39}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,10,"delete","13.14","11.00","228.29","24.35","7475.65","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 40}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","warmup",3,23,1,"delete","56.58","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,2,"delete","62.95","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,3,"delete","63.01","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,4,"delete","62.91","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,5,"delete","56.78","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,6,"delete","62.63","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,7,"delete","61.85","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,8,"delete","63.95","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,9,"delete","62.86","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,10,"delete","63.02","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,23,1,"delete","13.79","11.00","217.56","23.65","7476.15","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 31}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,23,2,"delete","12.59","10.00","238.29","26.02","7475.88","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 32}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,23,3,"delete","12.61","11.00","237.85","26.03","7475.99","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 33}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,23,4,"delete","6.29","4.00","476.61","54.52","7476.15","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 34}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",3,23,5,"delete","13.78","11.00","217.78","31.27","7476.44","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 35}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,23,6,"delete","12.63","10.00","237.45","27.29","7476.20","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 36}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,23,7,"delete","13.86","12.00","216.50","24.19","7476.35","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 37}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",3,23,8,"delete","12.69","10.00","236.49","26.96","7476.35","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 38}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,23,9,"delete","13.74","10.00","218.29","23.37","7476.19","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 39}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",3,23,10,"delete","12.72","1.00","235.87","32.82","7476.16","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 40}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",3,24,1,"delete","66.23","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,2,"delete","57.01","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,3,"delete","64.54","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,4,"delete","65.15","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,5,"delete","65.40","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,6,"delete","65.84","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,7,"delete","64.46","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,8,"delete","58.26","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,9,"delete","70.89","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,10,"delete","65.68","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,24,1,"delete","13.79","11.00","217.50","26.40","7476.48","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 31}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",3,24,2,"delete","18.57","16.00","161.58","25.45","7476.09","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 32}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",3,24,3,"delete","6.36","2.00","471.50","88.17","7476.74","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 33}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,4,"delete","14.21","3.00","211.06","25.38","7476.76","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 34}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,5,"delete","7.24","5.00","414.54","51.56","7476.70","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 35}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",3,24,6,"delete","15.45","14.00","194.12","23.53","7476.45","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 36}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,24,7,"delete","14.29","2.00","209.90","25.69","7476.50","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 37}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,8,"delete","14.22","3.00","210.98","25.77","7476.27","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 38}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,9,"delete","13.83","2.00","216.95","26.10","7476.48","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 39}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,10,"delete","13.30","11.00","225.56","26.98","7476.39","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 40}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","warmup",5,1,1,"simple","25050.15","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,2,"simple","24943.18","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,3,"simple","24993.12","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,4,"simple","25074.33","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,5,"simple","25064.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,6,"simple","25141.43","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,7,"simple","25095.89","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,8,"simple","25114.49","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,9,"simple","25000.65","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,10,"simple","25192.91","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,1,1,"simple","24588.06","544.00","0.20","1.16","7494.53","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 544, ""counters"": {}}"
"neo4j","optimized","steady",5,1,2,"simple","24706.62","591.00","0.20","1.21","7494.94","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 591, ""counters"": {}}"
"neo4j","optimized","steady",5,1,3,"simple","24697.58","569.00","0.20","1.15","7495.00","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 569, ""counters"": {}}"
"neo4j","optimized","steady",5,1,4,"simple","24773.87","525.00","0.20","1.11","7494.75","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 525, ""counters"": {}}"
"neo4j","optimized","steady",5,1,5,"simple","25009.89","610.00","0.20","1.26","7494.85","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 610, ""counters"": {}}"
"neo4j","optimized","steady",5,1,6,"simple","25101.34","572.00","0.20","1.10","7494.98","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 572, ""counters"": {}}"
"neo4j","optimized","steady",5,1,7,"simple","25170.97","582.00","0.20","1.16","7494.69","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 582, ""counters"": {}}"
"neo4j","optimized","steady",5,1,8,"simple","25086.22","546.00","0.20","1.08","7494.81","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 546, ""counters"": {}}"
"neo4j","optimized","steady",5,1,9,"simple","25151.73","612.00","0.20","1.27","7494.39","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 612, ""counters"": {}}"
"neo4j","optimized","steady",5,1,10,"simple","25102.70","584.00","0.20","1.14","7494.80","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 584, ""counters"": {}}"
"neo4j","optimized","warmup",5,2,1,"simple","89.92","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,2,"simple","94.84","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,3,"simple","87.89","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,4,"simple","87.10","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,5,"simple","88.16","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,6,"simple","88.31","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,7,"simple","88.15","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,8,"simple","88.20","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,9,"simple","88.56","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,10,"simple","87.74","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,2,1,"simple","36.47","1.00","137.09","9.18","7494.80","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,2,"simple","36.10","1.00","138.49","9.21","7494.86","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,3,"simple","36.31","0.00","137.72","9.44","7495.08","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,4,"simple","36.34","0.00","137.60","9.45","7494.75","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,5,"simple","36.82","1.00","135.81","9.24","7495.06","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,6,"simple","36.49","0.00","137.02","11.66","7494.65","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,7,"simple","36.81","1.00","135.85","9.12","7495.00","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,8,"simple","36.01","0.00","138.84","9.28","7494.76","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,9,"simple","39.66","1.00","126.08","8.47","7495.08","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,10,"simple","37.46","0.00","133.46","8.96","7494.53","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",5,3,1,"simple","186.24","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,2,"simple","185.40","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,3,"simple","197.93","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,4,"simple","182.69","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,5,"simple","182.58","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,6,"simple","185.86","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,7,"simple","184.09","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,8,"simple","183.71","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,9,"simple","182.07","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,10,"simple","184.01","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,3,1,"simple","131.40","3.00","38.05","3.95","7495.09","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Peukertstr. 355"", ""city"": ""Cottbus"", ""zip"": ""86695"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,2,"simple","144.00","3.00","34.72","3.67","7494.89","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Peukertstr. 355"", ""city"": ""Cottbus"", ""zip"": ""86695"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,3,"simple","131.69","3.00","37.97","3.99","7494.85","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Peukertstr. 355"", ""city"": ""Cottbus"", ""zip"": ""86695"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,4,"simple","131.80","3.00","37.94","3.89","7495.02","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Peukertstr. 355"", ""city"": ""Cottbus"", ""zip"": ""86695"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,5,"simple","131.76","4.00","37.95","3.95","7495.13","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Peukertstr. 355"", ""city"": ""Cottbus"", ""zip"": ""86695"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,3,6,"simple","130.96","3.00","38.18","4.01","7494.79","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Peukertstr. 355"", ""city"": ""Cottbus"", ""zip"": ""86695"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,7,"simple","144.30","3.00","34.65","4.08","7495.10","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Peukertstr. 355"", ""city"": ""Cottbus"", ""zip"": ""86695"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,8,"simple","131.03","3.00","38.16","3.93","7495.13","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Peukertstr. 355"", ""city"": ""Cottbus"", ""zip"": ""86695"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,9,"simple","131.49","3.00","38.03","3.97","7495.03","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Peukertstr. 355"", ""city"": ""Cottbus"", ""zip"": ""86695"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,3,10,"simple","135.49","3.00","36.90","3.82","7495.03","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 30, ""street"": ""Peukertstr. 355"", ""city"": ""Cottbus"", ""zip"": ""86695"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","warmup",5,4,1,"medium","1341.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,2,"medium","1031.27","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,3,"medium","1484.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,4,"medium","1188.44","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,5,"medium","1435.24","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,6,"medium","1139.45","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,7,"medium","1405.01","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,8,"medium","1134.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,9,"medium","1312.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,10,"medium","1238.72","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,4,1,"medium","1216.63","719.00","4.11","36.41","7497.90","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 719, ""counters"": {}}"
"neo4j","optimized","steady",5,4,2,"medium","1251.23","750.00","4.00","37.75","7497.91","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 750, ""counters"": {}}"
"neo4j","optimized","steady",5,4,3,"medium","1211.68","727.00","4.13","36.60","7498.16","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 727, ""counters"": {}}"
"neo4j","optimized","steady",5,4,4,"medium","1206.85","742.00","4.14","37.32","7498.21","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 742, ""counters"": {}}"
"neo4j","optimized","steady",5,4,5,"medium","1195.89","706.00","4.18","36.87","7498.27","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 706, ""counters"": {}}"
"neo4j","optimized","steady",5,4,6,"medium","1205.36","744.00","4.15","39.56","7499.09","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 744, ""counters"": {}}"
"neo4j","optimized","steady",5,4,7,"medium","1234.62","768.00","4.05","39.23","7500.14","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 768, ""counters"": {}}"
"neo4j","optimized","steady",5,4,8,"medium","1230.22","759.00","4.06","39.00","7501.51","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 759, ""counters"": {}}"
"neo4j","optimized","steady",5,4,9,"medium","1216.99","742.00","4.11","39.02","7501.72","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 742, ""counters"": {}}"
"neo4j","optimized","steady",5,4,10,"medium","1223.85","773.00","4.09","39.47","7502.22","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 125, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 773, ""counters"": {}}"
"neo4j","optimized","warmup",5,5,1,"medium","53.88","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,2,"medium","53.99","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,3,"medium","54.06","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,4,"medium","53.85","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,5,"medium","53.90","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,6,"medium","53.70","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,7,"medium","54.07","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,8,"medium","53.99","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,9,"medium","53.88","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,10,"medium","54.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,5,1,"medium","3.53","2.00","1416.03","97.41","7501.98","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,5,2,"medium","4.13","1.00","1209.42","84.64","7502.37","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,3,"medium","3.79","1.00","1321.00","92.07","7502.10","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,4,"medium","3.62","2.00","1380.80","96.24","7502.08","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,5,5,"medium","3.56","1.00","1406.39","97.69","7502.45","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,6,"medium","3.50","1.00","1427.10","128.39","7502.26","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,7,"medium","3.50","2.00","1428.04","99.90","7502.14","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,5,8,"medium","3.58","1.00","1396.77","96.43","7501.95","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,9,"medium","3.47","1.00","1439.72","150.20","7502.24","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,5,10,"medium","3.57","1.00","1401.07","97.89","7502.18","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",5,6,1,"medium","86.97","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,2,"medium","86.87","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,3,"medium","86.14","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,4,"medium","86.36","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,5,"medium","86.20","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,6,"medium","86.26","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,7,"medium","86.44","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,8,"medium","86.52","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,9,"medium","85.37","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,10,"medium","85.84","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,6,1,"medium","34.10","1.00","146.62","10.26","7502.17","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,2,"medium","34.34","1.00","145.61","10.84","7502.22","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,3,"medium","34.76","1.00","143.84","9.78","7502.31","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,4,"medium","35.30","1.00","141.62","9.56","7502.32","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,5,"medium","34.24","1.00","146.02","47.54","7510.64","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,6,"medium","34.35","1.00","145.54","9.83","7512.07","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,7,"medium","34.22","1.00","146.13","9.79","7512.36","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,8,"medium","35.32","1.00","141.57","9.84","7512.55","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,6,9,"medium","34.45","0.00","145.15","9.56","7512.30","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,6,10,"medium","34.43","0.00","145.23","9.54","7512.29","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",5,7,1,"complex","212.58","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,2,"complex","223.48","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,3,"complex","208.96","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,4,"complex","209.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,5,"complex","218.39","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,6,"complex","210.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,7,"complex","222.21","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,8,"complex","211.49","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,9,"complex","213.12","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,10,"complex","210.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,7,1,"complex","158.79","6.00","31.49","3.99","7504.89","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,2,"complex","157.23","6.00","31.80","4.63","7504.65","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,3,"complex","156.86","6.00","31.88","3.76","7505.04","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,4,"complex","157.50","6.00","31.75","3.71","7504.66","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,5,"complex","156.99","6.00","31.85","3.72","7504.62","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,6,"complex","158.02","6.00","31.64","3.75","7504.85","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,7,"complex","159.80","6.00","31.29","4.14","7504.91","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,8,"complex","158.28","6.00","31.59","3.72","7504.99","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,9,"complex","165.30","6.00","30.25","3.76","7504.96","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,7,10,"complex","161.46","6.00","30.97","3.64","7505.01","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",5,8,1,"complex","59.23","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,2,"complex","60.63","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,3,"complex","59.15","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,4,"complex","59.26","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,5,"complex","58.99","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,6,"complex","59.68","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,7,"complex","59.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,8,"complex","59.13","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,9,"complex","59.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,10,"complex","59.23","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,8,1,"complex","10.31","0.00","484.83","47.00","7504.83","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 53, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,2,"complex","9.20","0.00","543.24","36.21","7504.76","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 53, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,3,"complex","8.96","0.00","558.02","36.47","7504.63","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 53, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,4,"complex","8.96","0.00","558.10","35.97","7504.91","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 53, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,5,"complex","8.90","1.00","561.48","35.22","7504.99","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 53, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,8,6,"complex","8.71","1.00","573.81","35.79","7504.87","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 53, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,8,7,"complex","8.89","0.00","562.71","35.51","7504.84","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 53, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,8,"complex","9.24","0.00","541.04","33.78","7504.89","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 53, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,9,"complex","8.86","0.00","564.60","36.96","7504.95","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 53, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,8,10,"complex","8.86","0.00","564.03","36.28","7504.79","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 53, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",5,9,1,"complex","168.67","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,2,"complex","88.51","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,3,"complex","82.42","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,4,"complex","82.37","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,5,"complex","85.36","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,6,"complex","82.80","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,7,"complex","82.19","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,8,"complex","81.98","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,9,"complex","101.03","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,10,"complex","82.13","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,9,1,"complex","31.14","2.00","160.55","13.70","7505.29","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,2,"complex","30.64","2.00","163.21","13.31","7505.06","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,3,"complex","30.80","2.00","162.35","13.49","7505.01","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,4,"complex","30.78","2.00","162.42","13.27","7504.84","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,5,"complex","30.72","3.00","162.75","13.22","7505.14","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,9,6,"complex","30.62","2.00","163.27","13.04","7505.28","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,7,"complex","30.70","2.00","162.88","12.92","7505.16","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,8,"complex","30.88","2.00","161.89","22.50","7505.27","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,9,"complex","30.89","2.00","161.85","13.07","7505.19","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",5,9,10,"complex","31.12","2.00","160.67","20.83","7505.05","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","warmup",5,10,1,"very_complex","58.15","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,2,"very_complex","59.17","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,3,"very_complex","57.81","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,4,"very_complex","58.06","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,5,"very_complex","58.78","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,6,"very_complex","57.90","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,7,"very_complex","58.13","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,8,"very_complex","58.78","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,9,"very_complex","57.87","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,10,"very_complex","57.55","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,10,1,"very_complex","7.80","4.00","640.94","65.21","7505.20","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,2,"very_complex","7.72","4.00","647.44","60.58","7505.11","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,3,"very_complex","7.53","3.00","663.58","59.08","7505.21","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,10,4,"very_complex","7.63","3.00","654.89","63.73","7505.33","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,10,5,"very_complex","7.52","3.00","665.15","59.30","7505.20","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,10,6,"very_complex","7.59","4.00","658.79","63.34","7504.92","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,7,"very_complex","7.64","4.00","654.75","58.47","7505.23","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,8,"very_complex","7.91","3.00","632.17","56.79","7505.41","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",5,10,9,"very_complex","7.67","4.00","652.08","206.01","7508.04","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,10,10,"very_complex","7.77","4.00","643.81","57.88","7511.33","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","warmup",5,11,1,"very_complex","78.87","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,2,"very_complex","81.28","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,3,"very_complex","79.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,4,"very_complex","79.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,5,"very_complex","79.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,6,"very_complex","79.44","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,7,"very_complex","78.66","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,8,"very_complex","78.77","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,9,"very_complex","79.41","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,10,"very_complex","78.42","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,11,1,"very_complex","27.72","15.00","180.40","35.74","7505.25","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",5,11,2,"very_complex","28.11","15.00","177.85","33.00","7504.81","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",5,11,3,"very_complex","27.98","15.00","178.69","34.24","7505.28","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",5,11,4,"very_complex","27.56","15.00","181.43","34.43","7505.07","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",5,11,5,"very_complex","28.27","15.00","176.84","36.15","7505.48","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",5,11,6,"very_complex","27.74","15.00","180.23","33.14","7505.11","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",5,11,7,"very_complex","27.61","15.00","181.08","33.10","7505.45","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",5,11,8,"very_complex","28.98","16.00","172.53","34.21","7505.34","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",5,11,9,"very_complex","28.49","16.00","175.53","40.40","7505.42","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",5,11,10,"very_complex","29.23","16.00","171.08","35.08","7505.55","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","warmup",5,12,1,"very_complex","59.53","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,2,"very_complex","59.40","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,3,"very_complex","59.13","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,4,"very_complex","58.93","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,5,"very_complex","59.30","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,6,"very_complex","59.62","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,7,"very_complex","60.05","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,8,"very_complex","59.37","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,9,"very_complex","59.02","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,10,"very_complex","59.73","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,12,1,"very_complex","9.04","6.00","553.23","59.80","7505.76","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,2,"very_complex","9.10","5.00","549.31","56.28","7505.85","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,12,3,"very_complex","8.78","6.00","569.20","59.96","7505.88","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,4,"very_complex","8.86","6.00","564.63","59.97","7505.62","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,5,"very_complex","8.96","5.00","558.06","59.63","7506.08","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,12,6,"very_complex","12.25","8.00","408.19","118.87","7505.97","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 8, ""counters"": {}}"
"neo4j","optimized","steady",5,12,7,"very_complex","9.41","6.00","531.40","80.71","7505.75","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,8,"very_complex","8.94","5.00","559.57","75.99","7505.86","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 5, ""counters"": {}}"
"neo4j","optimized","steady",5,12,9,"very_complex","9.16","6.00","545.60","58.24","7505.96","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,12,10,"very_complex","9.00","6.00","555.52","65.42","7506.01","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",5,13,1,"create","63.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,2,"create","62.27","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,3,"create","62.83","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,4,"create","62.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,5,"create","62.20","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,6,"create","62.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,7,"create","62.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,8,"create","67.76","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,9,"create","62.42","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,10,"create","66.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,13,1,"create","12.00","0.00","416.81","29.13","7506.12","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1416}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,2,"create","12.03","1.00","415.76","28.02","7506.23","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1417}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,3,"create","12.04","1.00","415.16","30.43","7506.11","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1418}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,4,"create","12.29","1.00","406.77","29.42","7506.06","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1419}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,5,"create","11.89","1.00","420.54","32.21","7506.17","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1420}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,6,"create","12.25","1.00","408.03","30.14","7506.14","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1421}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,7,"create","4.81","1.00","1039.70","71.55","7506.11","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1422}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,8,"create","12.07","1.00","414.20","33.05","7506.11","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1423}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,9,"create","12.23","0.00","408.89","28.45","7506.03","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1424}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,10,"create","12.28","1.00","407.11","31.71","7506.18","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1425}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",5,14,1,"create","55.93","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,2,"create","62.53","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,3,"create","62.26","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,4,"create","62.55","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,5,"create","62.99","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,6,"create","55.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,7,"create","62.92","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,8,"create","62.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,9,"create","62.40","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,10,"create","62.94","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,14,1,"create","13.07","1.00","382.70","26.45","7506.11","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2060}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,2,"create","12.08","0.00","413.78","30.90","7506.01","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2061}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,3,"create","12.25","1.00","408.06","29.97","7505.85","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2062}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,4,"create","5.36","0.00","932.14","117.45","7506.04","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2063}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,5,"create","12.22","1.00","409.18","31.29","7506.23","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2064}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,6,"create","11.88","1.00","420.90","29.02","7506.31","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2065}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,7,"create","11.58","1.00","431.91","35.75","7505.83","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2066}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,8,"create","5.29","1.00","945.47","68.38","7506.18","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2067}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,9,"create","12.39","1.00","403.45","28.86","7506.11","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2068}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,10,"create","12.21","1.00","409.64","28.08","7505.95","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2069}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",5,15,1,"create","55.80","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,2,"create","62.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,3,"create","62.97","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,4,"create","63.10","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,5,"create","62.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,6,"create","62.66","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,7,"create","62.20","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,8,"create","62.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,9,"create","56.37","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,10,"create","62.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,15,1,"create","12.38","1.00","403.87","29.71","7506.18","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1499}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,2,"create","12.19","1.00","410.24","27.23","7506.11","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1500}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,3,"create","12.28","1.00","407.24","28.05","7505.84","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1501}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,4,"create","12.22","1.00","409.23","32.27","7506.32","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1502}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,5,"create","4.92","1.00","1016.57","74.84","7505.99","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1503}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,6,"create","12.39","1.00","403.46","29.18","7505.93","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1504}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,7,"create","5.28","1.00","947.65","65.44","7506.17","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1505}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,8,"create","12.44","1.00","401.89","36.99","7506.31","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1506}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,9,"create","12.24","1.00","408.43","30.09","7506.18","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1507}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,10,"create","12.47","1.00","400.88","28.17","7506.20","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1508}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",5,16,1,"create","65.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,2,"create","66.95","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,3,"create","65.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,4,"create","65.59","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,5,"create","65.56","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,6,"create","66.36","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,7,"create","65.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,8,"create","65.92","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,9,"create","65.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,10,"create","66.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,16,1,"create","15.68","4.00","318.78","31.12","7506.28","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10601}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,2,"create","8.29","4.00","603.19","59.68","7506.16","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10602}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,3,"create","8.44","4.00","592.54","84.94","7506.76","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10603}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,4,"create","14.88","5.00","335.95","31.93","7507.57","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10604}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,5,"create","15.39","5.00","324.88","33.15","7507.18","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10605}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,6,"create","18.70","4.00","267.40","25.92","7507.06","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10606}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,7,"create","15.33","4.00","326.13","32.02","7507.19","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10607}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,8,"create","16.15","5.00","309.67","29.19","7507.19","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10608}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,9,"create","15.43","5.00","324.02","31.12","7507.28","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10609}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,10,"create","15.68","4.00","318.88","36.97","7507.33","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10610}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",5,17,1,"update","536.25","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,2,"update","500.21","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,3,"update","533.93","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,4,"update","508.29","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,5,"update","532.39","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,6,"update","519.76","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,7,"update","527.10","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,8,"update","495.27","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,9,"update","517.06","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,10,"update","535.56","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,17,1,"update","455.37","452.00","10.98","41.23","7507.64","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 180}, ""server_ms"": 452, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,2,"update","461.85","449.00","10.83","40.17","7507.28","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 184}, ""server_ms"": 449, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,3,"update","470.70","466.00","10.62","40.14","7506.88","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 189}, ""server_ms"": 466, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,4,"update","469.68","467.00","10.65","40.54","7507.44","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 195}, ""server_ms"": 467, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,5,"update","462.96","447.00","10.80","40.86","7507.73","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 199}, ""server_ms"": 447, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,6,"update","491.84","451.00","10.17","40.92","7507.57","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 203}, ""server_ms"": 451, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,7,"update","445.08","430.00","11.23","41.58","7507.73","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 206}, ""server_ms"": 430, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,8,"update","463.12","454.00","10.80","40.30","7507.41","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 214}, ""server_ms"": 454, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,9,"update","494.11","491.00","10.12","38.23","7507.67","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 220}, ""server_ms"": 491, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,10,"update","450.11","443.00","11.11","40.64","7507.58","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 224}, ""server_ms"": 443, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,18,1,"update","65.48","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,2,"update","52.79","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,3,"update","53.20","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,4,"update","52.95","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,5,"update","52.79","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,6,"update","53.07","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,7,"update","53.49","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,8,"update","53.37","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,9,"update","53.25","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,10,"update","53.01","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,18,1,"update","2.62","0.00","1908.47","116.36","7507.55","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,2,"update","2.91","1.00","1721.05","121.67","7507.66","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,3,"update","2.91","0.00","1716.74","103.55","7507.64","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,4,"update","2.70","0.00","1854.74","127.13","7507.74","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,5,"update","2.66","0.00","1876.95","114.05","7507.31","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,6,"update","2.75","0.00","1821.43","111.54","7507.84","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,7,"update","2.79","0.00","1791.15","114.42","7507.40","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,8,"update","3.38","2.00","1479.11","89.67","7507.93","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,9,"update","2.66","0.00","1879.35","115.28","7507.81","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,10,"update","3.34","0.00","1497.27","99.23","7507.54","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,19,1,"update","66.26","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,2,"update","66.22","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,3,"update","60.78","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,4,"update","66.25","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,5,"update","67.25","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,6,"update","66.19","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,7,"update","66.79","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,8,"update","60.67","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,9,"update","67.38","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,10,"update","68.30","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,19,1,"update","15.92","9.00","314.01","22.12","7507.67","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 158}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,2,"update","17.15","1.00","291.50","20.15","7507.58","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 170}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,3,"update","10.20","8.00","490.18","34.42","7507.70","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 197}, ""server_ms"": 8, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,4,"update","15.94","10.00","313.62","21.46","7507.89","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 203}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,5,"update","16.09","0.00","310.78","22.02","7507.77","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 215}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,6,"update","16.00","12.00","312.59","28.77","7507.45","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 239}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,7,"update","15.94","1.00","313.77","21.50","7507.60","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 245}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,8,"update","16.18","10.00","309.00","21.86","7507.58","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 263}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,9,"update","16.65","1.00","300.22","20.81","7507.61","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 275}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,10,"update","16.00","9.00","312.53","21.38","7507.75","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 293}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,20,1,"update","65.99","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,2,"update","66.01","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,3,"update","66.18","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,4,"update","66.10","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,5,"update","60.48","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,6,"update","66.06","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,7,"update","67.07","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,8,"update","65.47","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,9,"update","66.63","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,10,"update","59.80","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,20,1,"update","15.40","11.00","324.77","25.43","7507.80","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,2,"update","8.87","0.00","563.45","35.05","7507.59","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,3,"update","15.95","13.00","313.48","21.99","7507.98","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,4,"update","16.81","0.00","297.43","21.76","7507.70","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,5,"update","16.59","0.00","301.41","67.77","7508.95","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,6,"update","16.00","13.00","312.48","19.72","7509.10","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,7,"update","15.38","0.00","325.18","21.43","7509.71","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,8,"update","16.47","0.00","303.66","19.94","7509.42","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,9,"update","15.84","12.00","315.74","22.13","7509.34","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,10,"update","16.54","12.00","302.33","19.93","7509.42","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,21,1,"delete","63.78","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,2,"delete","55.77","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,3,"delete","62.30","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,4,"delete","62.21","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,5,"delete","62.24","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,6,"delete","62.44","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,7,"delete","55.73","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,8,"delete","63.71","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,9,"delete","62.46","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,10,"delete","62.24","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,21,1,"delete","5.65","3.00","885.30","56.84","7509.63","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 51}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,2,"delete","12.44","11.00","401.77","25.36","7509.42","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 52}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,3,"delete","13.36","9.00","374.15","24.19","7509.39","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 53}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,4,"delete","13.26","1.00","377.22","24.31","7509.48","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 54}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,5,"delete","12.20","1.00","409.88","27.44","7509.37","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 55}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,6,"delete","12.24","11.00","408.34","27.23","7509.51","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 56}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,7,"delete","12.17","11.00","410.75","32.16","7509.54","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 57}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,8,"delete","5.85","3.00","854.48","68.93","7509.23","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 58}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,9,"delete","12.18","9.00","410.46","28.09","7509.48","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 59}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,10,"delete","13.42","0.00","372.56","28.17","7509.44","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 60}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",5,22,1,"delete","62.25","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,2,"delete","62.39","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,3,"delete","62.34","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,4,"delete","62.23","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,5,"delete","62.19","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,6,"delete","61.91","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,7,"delete","55.49","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,8,"delete","62.22","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,9,"delete","61.44","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,10,"delete","62.34","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,22,1,"delete","11.93","10.00","419.00","36.55","7509.34","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 51}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,22,2,"delete","12.13","10.00","412.36","27.52","7509.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 52}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,22,3,"delete","11.91","0.00","419.65","27.41","7509.83","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 53}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,4,"delete","11.18","0.00","447.22","27.84","7509.28","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 54}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,5,"delete","11.97","1.00","417.75","26.46","7509.50","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 55}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,6,"delete","11.94","10.00","418.64","30.01","7509.52","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 56}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,22,7,"delete","5.60","4.00","892.41","57.66","7509.38","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 57}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,22,8,"delete","12.02","0.00","415.98","26.06","7509.49","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 58}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,9,"delete","12.95","11.00","386.08","23.76","7509.43","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 59}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",5,22,10,"delete","11.93","10.00","419.11","26.06","7509.70","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 60}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","warmup",5,23,1,"delete","57.87","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,2,"delete","63.40","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,3,"delete","62.39","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,4,"delete","62.63","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,5,"delete","62.57","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,6,"delete","56.57","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,7,"delete","62.15","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,8,"delete","62.23","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,9,"delete","62.31","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,10,"delete","63.15","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,23,1,"delete","13.68","11.00","365.57","25.20","7509.59","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 51}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",5,23,2,"delete","12.00","10.00","416.82","28.55","7509.73","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 52}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",5,23,3,"delete","12.57","11.00","397.76","27.43","7509.94","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 53}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",5,23,4,"delete","13.81","1.00","361.97","24.78","7509.71","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 54}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,5,"delete","12.01","1.00","416.41","28.17","7509.59","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 55}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,6,"delete","8.55","6.00","585.13","86.16","7510.04","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 56}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",5,23,7,"delete","13.66","1.00","365.99","29.49","7509.64","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 57}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,8,"delete","11.97","1.00","417.66","28.53","7509.60","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 58}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,9,"delete","11.79","9.00","424.08","29.78","7509.82","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 59}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",5,23,10,"delete","13.74","11.00","363.90","24.77","7510.16","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 60}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","warmup",5,24,1,"delete","64.37","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,2,"delete","65.02","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,3,"delete","56.62","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,4,"delete","64.96","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,5,"delete","63.78","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,6,"delete","64.86","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,7,"delete","65.41","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,8,"delete","57.84","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,9,"delete","64.24","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,10,"delete","64.02","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,24,1,"delete","7.01","4.00","713.54","59.43","7509.88","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 51}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",5,24,2,"delete","15.23","12.00","328.22","26.49","7510.23","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 52}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",5,24,3,"delete","15.98","2.00","312.96","26.56","7510.02","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 53}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,4,"delete","14.72","12.00","339.62","27.87","7509.91","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 54}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",5,24,5,"delete","6.72","2.00","743.96","61.76","7509.99","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 55}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,6,"delete","13.81","12.00","362.14","30.30","7509.85","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 56}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",5,24,7,"delete","14.09","11.00","354.76","28.99","7510.15","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 57}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",5,24,8,"delete","14.51","12.00","344.69","28.58","7509.93","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 58}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",5,24,9,"delete","15.08","2.00","331.55","27.67","7510.02","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 59}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,10,"delete","13.44","12.00","372.13","30.56","7510.06","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 60}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","warmup",10,1,1,"simple","50161.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,2,"simple","50213.76","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,3,"simple","50231.62","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,4,"simple","50532.65","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,5,"simple","50397.94","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,6,"simple","50224.08","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,7,"simple","50258.56","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,8,"simple","50287.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,9,"simple","50076.26","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,10,"simple","50595.70","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,1,1,"simple","50762.57","661.00","0.20","1.26","7552.76","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 661, ""counters"": {}}"
"neo4j","optimized","steady",10,1,2,"simple","50417.60","709.00","0.20","1.34","7552.89","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 709, ""counters"": {}}"
"neo4j","optimized","steady",10,1,3,"simple","50398.61","650.00","0.20","1.26","7552.64","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 650, ""counters"": {}}"
"neo4j","optimized","steady",10,1,4,"simple","50369.50","658.00","0.20","1.33","7553.00","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 658, ""counters"": {}}"
"neo4j","optimized","steady",10,1,5,"simple","50359.53","611.00","0.20","1.25","7553.12","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 611, ""counters"": {}}"
"neo4j","optimized","steady",10,1,6,"simple","50511.48","651.00","0.20","1.34","7553.07","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 651, ""counters"": {}}"
"neo4j","optimized","steady",10,1,7,"simple","50525.35","600.00","0.20","1.29","7552.93","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 600, ""counters"": {}}"
"neo4j","optimized","steady",10,1,8,"simple","50564.08","615.00","0.20","1.18","7553.04","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 615, ""counters"": {}}"
"neo4j","optimized","steady",10,1,9,"simple","50405.31","647.00","0.20","1.28","7552.99","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 647, ""counters"": {}}"
"neo4j","optimized","steady",10,1,10,"simple","50315.99","651.00","0.20","1.27","7553.29","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 50000;         ","{""rows"": 50000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 651, ""counters"": {}}"
"neo4j","optimized","warmup",10,2,1,"simple","130.31","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,2,"simple","123.70","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,3,"simple","122.37","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,4,"simple","124.22","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,5,"simple","123.31","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,6,"simple","122.51","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,7,"simple","122.09","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,8,"simple","133.26","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,9,"simple","122.24","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,10,"simple","122.34","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,2,1,"simple","76.91","1.00","130.03","5.06","7553.05","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,2,"simple","71.20","0.00","140.45","5.55","7552.75","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,3,"simple","70.89","0.00","141.07","5.44","7552.94","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,4,"simple","71.37","0.00","140.12","5.43","7552.92","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,5,"simple","70.34","1.00","142.17","5.96","7553.29","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,6,"simple","70.77","1.00","141.31","6.43","7553.06","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,7,"simple","71.14","0.00","140.58","5.41","7553.01","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,8,"simple","70.77","0.00","141.31","5.60","7552.94","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,9,"simple","70.19","0.00","142.47","5.51","7552.82","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,10,"simple","73.02","1.00","136.96","5.42","7553.07","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",10,3,1,"simple","317.11","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,2,"simple","314.24","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,3,"simple","313.49","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,4,"simple","314.13","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,5,"simple","317.56","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,6,"simple","317.28","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,7,"simple","314.92","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,8,"simple","313.77","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,9,"simple","313.06","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,10,"simple","315.28","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,3,1,"simple","264.32","3.00","37.83","2.76","7552.85","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Ingeburg-Mälzer-Weg 7"", ""city"": ""Pegnitz"", ""zip"": ""36993"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,2,"simple","275.27","3.00","36.33","2.69","7552.83","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Ingeburg-Mälzer-Weg 7"", ""city"": ""Pegnitz"", ""zip"": ""36993"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,3,"simple","262.69","3.00","38.07","2.84","7552.99","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Ingeburg-Mälzer-Weg 7"", ""city"": ""Pegnitz"", ""zip"": ""36993"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,4,"simple","277.75","4.00","36.00","3.31","7553.15","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Ingeburg-Mälzer-Weg 7"", ""city"": ""Pegnitz"", ""zip"": ""36993"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,3,5,"simple","263.26","3.00","37.99","2.82","7553.19","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Ingeburg-Mälzer-Weg 7"", ""city"": ""Pegnitz"", ""zip"": ""36993"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,6,"simple","264.00","7.00","37.88","3.23","7552.89","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Ingeburg-Mälzer-Weg 7"", ""city"": ""Pegnitz"", ""zip"": ""36993"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",10,3,7,"simple","264.46","3.00","37.81","2.94","7553.10","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Ingeburg-Mälzer-Weg 7"", ""city"": ""Pegnitz"", ""zip"": ""36993"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,8,"simple","265.43","3.00","37.68","2.84","7553.10","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Ingeburg-Mälzer-Weg 7"", ""city"": ""Pegnitz"", ""zip"": ""36993"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,3,9,"simple","262.64","4.00","38.07","2.78","7553.07","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Ingeburg-Mälzer-Weg 7"", ""city"": ""Pegnitz"", ""zip"": ""36993"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,3,10,"simple","262.50","4.00","38.09","2.84","7552.90","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Ingeburg-Mälzer-Weg 7"", ""city"": ""Pegnitz"", ""zip"": ""36993"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","warmup",10,4,1,"medium","1709.79","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,2,"medium","3192.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,3,"medium","1996.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,4,"medium","2077.45","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,5,"medium","2084.75","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,6,"medium","2164.82","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,7,"medium","2354.85","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,8,"medium","2185.30","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,9,"medium","2075.49","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,10,"medium","2060.80","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,4,1,"medium","2445.28","1457.00","4.09","62.53","7632.26","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 1457, ""counters"": {}}"
"neo4j","optimized","steady",10,4,2,"medium","2019.36","1053.00","4.95","49.78","7659.05","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 1053, ""counters"": {}}"
"neo4j","optimized","steady",10,4,3,"medium","1887.75","893.00","5.30","44.72","7658.82","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 893, ""counters"": {}}"
"neo4j","optimized","steady",10,4,4,"medium","1978.89","1050.00","5.05","45.44","7659.07","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 1050, ""counters"": {}}"
"neo4j","optimized","steady",10,4,5,"medium","2063.08","1104.00","4.85","46.32","7659.15","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 1104, ""counters"": {}}"
"neo4j","optimized","steady",10,4,6,"medium","2064.21","1066.00","4.84","55.81","7659.05","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 1066, ""counters"": {}}"
"neo4j","optimized","steady",10,4,7,"medium","2014.59","1015.00","4.96","46.72","7658.99","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 1015, ""counters"": {}}"
"neo4j","optimized","steady",10,4,8,"medium","2136.10","1106.00","4.68","63.97","7659.30","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 1106, ""counters"": {}}"
"neo4j","optimized","steady",10,4,9,"medium","2312.35","1363.00","4.32","62.47","7659.00","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 1363, ""counters"": {}}"
"neo4j","optimized","steady",10,4,10,"medium","1991.10","974.00","5.02","49.60","7659.32","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 225, ""created_at"": ""2020-11-16T17:05:37.000000000+00:00"", ""updated_at"": ""2023-06-22T03:05:04.000000000+00:00""}, ""server_ms"": 974, ""counters"": {}}"
"neo4j","optimized","warmup",10,5,1,"medium","56.40","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,2,"medium","56.09","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,3,"medium","55.89","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,4,"medium","55.76","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,5,"medium","55.89","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,6,"medium","56.01","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,7,"medium","55.95","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,8,"medium","56.15","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,9,"medium","56.00","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,10,"medium","56.10","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,5,1,"medium","5.78","1.00","1731.33","72.11","7659.40","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,2,"medium","5.68","1.00","1759.42","74.03","7659.45","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,3,"medium","5.47","1.00","1826.95","89.48","7659.64","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,4,"medium","5.52","1.00","1811.56","87.37","7659.29","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,5,"medium","5.89","2.00","1697.91","75.66","7659.73","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,5,6,"medium","5.72","1.00","1749.72","78.98","7659.59","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,7,"medium","6.11","1.00","1635.70","68.13","7659.47","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,8,"medium","5.53","1.00","1807.57","76.35","7659.48","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,9,"medium","5.80","1.00","1722.86","155.15","7659.89","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,5,10,"medium","5.72","2.00","1747.46","111.13","7659.90","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","warmup",10,6,1,"medium","123.13","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,2,"medium","119.90","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,3,"medium","118.82","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,4,"medium","119.50","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,5,"medium","119.09","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,6,"medium","118.38","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,7,"medium","118.91","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,8,"medium","119.54","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,9,"medium","120.30","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,10,"medium","119.37","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,6,1,"medium","66.35","1.00","150.70","5.75","7656.44","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,2,"medium","66.48","0.00","150.42","5.39","7656.17","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,6,3,"medium","67.05","1.00","149.14","5.52","7656.45","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,4,"medium","67.25","0.00","148.69","6.38","7656.38","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,6,5,"medium","67.03","1.00","149.19","5.76","7656.28","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,6,"medium","67.82","1.00","147.45","5.39","7656.33","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,7,"medium","67.98","1.00","147.11","6.12","7656.69","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,8,"medium","68.81","1.00","145.34","5.93","7656.14","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,6,9,"medium","68.16","0.00","146.72","6.25","7656.24","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,6,10,"medium","67.65","0.00","147.82","5.84","7656.37","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 65, ""user_id"": 268, ""product_id"": 657629, ""rating"": 2, ""created_at"": ""2025-07-10T19:39:56.000000000+00:00""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",10,7,1,"complex","368.88","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,2,"complex","364.54","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,3,"complex","380.77","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,4,"complex","366.23","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,5,"complex","365.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,6,"complex","366.72","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,7,"complex","367.14","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,8,"complex","367.71","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,9,"complex","365.64","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,10,"complex","373.91","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,7,1,"complex","312.31","6.00","32.02","3.31","7658.59","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,2,"complex","318.78","7.00","31.37","8.80","7664.47","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",10,7,3,"complex","337.51","6.00","29.63","16.81","7672.26","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,4,"complex","313.59","6.00","31.89","3.20","7672.62","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,5,"complex","314.96","6.00","31.75","3.33","7672.28","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,6,"complex","323.44","7.00","30.92","3.02","7667.74","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",10,7,7,"complex","312.02","6.00","32.05","3.09","7667.92","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,8,"complex","324.59","6.00","30.81","3.42","7667.75","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,7,9,"complex","312.93","7.00","31.96","3.28","7667.83","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 7, ""counters"": {}}"
"neo4j","optimized","steady",10,7,10,"complex","324.95","6.00","30.77","3.45","7662.23","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-02-16T23:08:17.000000000+00:00"", ""total"": 82.99000000953674}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",10,8,1,"complex","66.24","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,2,"complex","65.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,3,"complex","78.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,4,"complex","66.31","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,5,"complex","65.96","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,6,"complex","65.91","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,7,"complex","65.72","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,8,"complex","67.07","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,9,"complex","81.14","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,10,"complex","66.38","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,8,1,"complex","15.66","1.00","638.67","22.98","7663.66","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,8,2,"complex","15.27","0.00","654.93","31.69","7663.36","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,3,"complex","15.78","1.00","633.63","22.80","7663.82","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,8,4,"complex","15.85","1.00","630.74","100.92","7666.32","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,8,5,"complex","15.96","0.00","626.73","61.63","7668.58","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,6,"complex","15.42","0.00","648.68","24.80","7668.56","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,7,"complex","16.45","0.00","607.97","23.03","7668.58","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,8,"complex","15.58","1.00","641.82","51.66","7669.49","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,8,9,"complex","15.61","0.00","640.45","22.61","7670.15","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,8,10,"complex","15.67","0.00","638.02","23.31","7657.85","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 49, ""first"": {""id"": 1610, ""name"": ""Hard Travel Case for JBL BOOMBOX Bluetooth Speaker by co2CREA"", ""avg_rating"": 5.0}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",10,9,1,"complex","111.92","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,2,"complex","110.91","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,3,"complex","110.18","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,4,"complex","108.88","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,5,"complex","120.22","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,6,"complex","109.38","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,7,"complex","109.93","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,8,"complex","109.63","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,9,"complex","110.56","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,10,"complex","108.67","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,9,1,"complex","57.38","2.00","174.27","10.61","7659.97","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,9,2,"complex","57.23","3.00","174.72","10.44","7659.88","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,3,"complex","59.24","2.00","168.81","10.76","7660.05","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,9,4,"complex","57.48","3.00","173.97","10.04","7660.10","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,5,"complex","57.44","3.00","174.09","20.46","7659.92","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,6,"complex","67.78","3.00","147.53","9.60","7660.55","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,9,7,"complex","68.88","2.00","145.18","8.71","7660.15","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,9,8,"complex","62.05","2.00","161.16","29.96","7660.71","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,9,9,"complex","57.71","2.00","173.29","14.88","7660.20","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","steady",10,9,10,"complex","57.69","2.00","173.35","11.49","7660.56","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 264, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 2, ""counters"": {}}"
"neo4j","optimized","warmup",10,10,1,"very_complex","60.56","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,2,"very_complex","61.38","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,3,"very_complex","60.41","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,4,"very_complex","60.83","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,5,"very_complex","61.20","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,6,"very_complex","60.75","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,7,"very_complex","60.69","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,8,"very_complex","60.73","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,9,"very_complex","60.24","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,10,"very_complex","59.88","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,10,1,"very_complex","9.96","4.00","1003.58","59.81","7660.27","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,2,"very_complex","10.13","3.00","987.38","56.95","7660.46","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,10,3,"very_complex","11.44","4.00","873.76","50.83","7660.56","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,4,"very_complex","10.14","4.00","985.96","56.65","7660.67","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,5,"very_complex","10.11","4.00","989.27","56.39","7660.50","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,6,"very_complex","9.81","4.00","1019.14","60.86","7660.82","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,7,"very_complex","9.58","4.00","1043.56","59.46","7660.56","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,8,"very_complex","10.07","3.00","992.88","59.31","7660.45","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 3, ""counters"": {}}"
"neo4j","optimized","steady",10,10,9,"very_complex","10.06","4.00","994.15","58.73","7659.99","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,10,10,"very_complex","11.01","4.00","908.29","57.01","7660.54","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 15, ""first"": {""rec_id"": 132659, ""freq"": 1}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","warmup",10,11,1,"very_complex","92.98","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,2,"very_complex","91.71","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,3,"very_complex","91.21","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,4,"very_complex","91.16","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,5,"very_complex","91.76","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,6,"very_complex","93.12","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,7,"very_complex","93.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,8,"very_complex","101.41","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,9,"very_complex","96.57","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,10,"very_complex","91.58","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,11,1,"very_complex","44.17","20.00","226.40","40.93","7660.73","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",10,11,2,"very_complex","39.98","17.00","250.14","41.64","7660.74","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",10,11,3,"very_complex","40.47","17.00","247.07","40.52","7660.64","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",10,11,4,"very_complex","40.04","15.00","249.77","41.07","7660.70","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 15, ""counters"": {}}"
"neo4j","optimized","steady",10,11,5,"very_complex","40.30","17.00","248.14","40.50","7660.61","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",10,11,6,"very_complex","40.55","17.00","246.63","42.33","7660.55","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",10,11,7,"very_complex","39.66","17.00","252.13","41.25","7660.49","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",10,11,8,"very_complex","39.79","16.00","251.30","40.78","7660.64","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 16, ""counters"": {}}"
"neo4j","optimized","steady",10,11,9,"very_complex","41.54","17.00","240.71","40.45","7660.45","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","steady",10,11,10,"very_complex","40.06","17.00","249.65","46.87","7660.53","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 142, ""prodB"": 2181990, ""co_orders"": 1}, ""server_ms"": 17, ""counters"": {}}"
"neo4j","optimized","warmup",10,12,1,"very_complex","61.10","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,2,"very_complex","61.79","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,3,"very_complex","60.77","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,4,"very_complex","61.00","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,5,"very_complex","61.28","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,6,"very_complex","60.76","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,7,"very_complex","60.69","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,8,"very_complex","61.68","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,9,"very_complex","61.74","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,10,"very_complex","60.70","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,12,1,"very_complex","10.37","6.00","963.92","70.85","7660.54","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,2,"very_complex","10.56","6.00","947.28","68.11","7660.89","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,3,"very_complex","10.40","6.00","961.09","70.42","7660.60","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,4,"very_complex","10.84","6.00","922.13","90.47","7660.57","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,5,"very_complex","12.52","6.00","798.73","79.48","7660.60","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,6,"very_complex","10.81","6.00","925.13","130.23","7660.82","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,7,"very_complex","10.56","6.00","946.84","70.52","7660.59","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,8,"very_complex","10.75","6.00","930.47","68.91","7660.96","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,9,"very_complex","10.24","6.00","976.91","70.80","7660.81","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,12,10,"very_complex","10.66","6.00","938.41","67.90","7660.58","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 8, ""first"": {""prod_id"": 18697, ""freq"": 1}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","warmup",10,13,1,"create","63.53","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,2,"create","62.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,3,"create","56.02","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,4,"create","62.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,5,"create","63.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,6,"create","63.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,7,"create","63.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,8,"create","56.07","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,9,"create","62.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,10,"create","62.86","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,13,1,"create","12.64","1.00","791.24","55.52","7661.31","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1438}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,2,"create","13.08","0.00","764.70","30.83","7661.76","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1439}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,3,"create","12.29","0.00","813.39","34.06","7661.49","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1440}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,4,"create","13.16","0.00","759.76","29.29","7661.37","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1441}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,5,"create","5.76","1.00","1737.02","62.37","7661.45","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1442}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,6,"create","12.38","1.00","807.69","29.49","7661.68","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1444}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,7,"create","12.50","0.00","799.87","35.82","7662.07","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1445}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,8,"create","7.77","0.00","1287.70","79.01","7661.82","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1446}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,9,"create","12.43","0.00","804.64","37.79","7661.67","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1447}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,10,"create","12.48","1.00","801.15","39.54","7661.80","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 1448}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",10,14,1,"create","62.88","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,2,"create","62.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,3,"create","62.72","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,4,"create","62.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,5,"create","62.48","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,6,"create","62.58","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,7,"create","63.16","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,8,"create","63.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,9,"create","62.84","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,10,"create","62.88","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,14,1,"create","12.56","0.00","796.33","40.02","7670.35","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2080}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,2,"create","12.74","0.00","785.19","32.53","7670.38","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2081}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,3,"create","12.28","0.00","814.20","38.60","7669.86","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2082}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,4,"create","13.04","1.00","766.93","46.20","7670.31","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2083}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,5,"create","12.27","1.00","815.02","30.86","7670.51","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2084}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,6,"create","12.48","1.00","801.11","49.42","7670.33","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2085}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,7,"create","5.83","0.00","1716.33","66.97","7670.28","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2086}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,8,"create","12.56","1.00","796.25","30.79","7670.26","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2088}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,9,"create","12.36","1.00","808.77","29.79","7670.15","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2089}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,10,"create","12.66","1.00","790.11","41.57","7670.26","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 2090}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",10,15,1,"create","56.46","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,2,"create","63.17","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,3,"create","62.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,4,"create","62.63","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,5,"create","62.93","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,6,"create","62.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,7,"create","63.25","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,8,"create","70.06","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,9,"create","56.68","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,10,"create","63.20","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,15,1,"create","12.38","1.00","807.47","44.42","7676.38","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1522}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,2,"create","13.70","1.00","730.07","52.15","7676.48","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1523}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,3,"create","12.71","1.00","786.85","102.05","7668.79","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1524}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,4,"create","6.41","1.00","1558.87","61.99","7671.73","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1525}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,5,"create","13.35","1.00","748.95","36.82","7671.77","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1527}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,6,"create","12.59","1.00","794.57","34.88","7671.80","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1528}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,7,"create","12.77","1.00","783.37","30.46","7671.70","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1529}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,8,"create","12.58","1.00","794.91","31.43","7671.40","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1530}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,9,"create","5.96","1.00","1679.23","73.82","7665.37","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1531}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,10,"create","12.89","1.00","775.70","31.08","7665.07","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1533}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",10,16,1,"create","66.74","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,2,"create","66.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,3,"create","68.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,4,"create","66.27","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,5,"create","65.92","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,6,"create","60.03","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,7,"create","66.26","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,8,"create","66.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,9,"create","67.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,10,"create","66.39","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,16,1,"create","17.17","4.00","582.49","40.45","7667.55","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10622}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,2,"create","15.92","4.00","628.00","42.86","7667.53","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10623}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,3,"create","16.02","4.00","624.16","46.26","7667.57","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10624}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,4,"create","11.50","4.00","869.32","63.31","7667.50","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10625}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,5,"create","15.62","4.00","640.39","43.42","7667.43","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10626}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,6,"create","11.12","4.00","899.51","61.77","7667.59","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10627}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,7,"create","18.37","4.00","544.45","37.17","7667.42","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10628}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,8,"create","15.98","4.00","625.70","46.90","7667.59","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10629}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,9,"create","15.94","4.00","627.51","43.39","7667.60","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10630}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,10,"create","15.97","4.00","626.22","51.25","7667.64","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 10631}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",10,17,1,"update","547.28","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,2,"update","547.65","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,3,"update","543.63","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,4,"update","560.62","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,5,"update","549.36","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,6,"update","538.81","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,7,"update","551.62","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,8,"update","542.34","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,9,"update","563.02","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,10,"update","543.71","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,17,1,"update","523.17","521.00","19.11","80.35","7667.31","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 335}, ""server_ms"": 521, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,2,"update","503.93","481.00","19.84","79.83","7667.59","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 337}, ""server_ms"": 481, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,3,"update","502.74","446.00","19.89","78.35","7667.67","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 346}, ""server_ms"": 446, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,4,"update","535.25","501.00","18.68","79.19","7667.57","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 361}, ""server_ms"": 501, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,5,"update","506.16","503.00","19.76","79.11","7667.70","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 375}, ""server_ms"": 503, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,6,"update","493.97","478.00","20.24","79.80","7667.50","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 381}, ""server_ms"": 478, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,7,"update","483.49","469.00","20.68","81.73","7667.66","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 387}, ""server_ms"": 469, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,8,"update","495.71","483.00","20.17","83.05","7667.43","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 399}, ""server_ms"": 483, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,9,"update","502.81","478.00","19.89","79.07","7667.87","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 413}, ""server_ms"": 478, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,10,"update","496.12","484.00","20.16","80.55","7667.50","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 420}, ""server_ms"": 484, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,18,1,"update","63.86","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,2,"update","54.65","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,3,"update","55.19","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,4,"update","55.00","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,5,"update","54.40","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,6,"update","54.33","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,7,"update","54.96","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,8,"update","54.70","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,9,"update","54.22","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,10,"update","54.59","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,18,1,"update","4.21","1.00","2374.73","76.45","7667.47","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,2,"update","4.91","1.00","2037.32","64.50","7667.54","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,3,"update","4.33","0.00","2308.14","72.12","7667.59","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,4,"update","4.83","0.00","2069.58","65.62","7667.37","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,5,"update","4.26","0.00","2346.10","73.97","7667.50","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,6,"update","4.54","0.00","2201.48","69.41","7667.31","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,7,"update","4.45","0.00","2247.70","72.63","7667.40","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,8,"update","4.22","1.00","2370.06","87.44","7667.46","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,9,"update","4.29","1.00","2330.24","74.12","7667.91","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,10,"update","4.60","0.00","2172.26","77.16","7667.53","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,19,1,"update","72.58","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,2,"update","74.49","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,3,"update","66.11","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,4,"update","73.82","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,5,"update","74.34","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,6,"update","73.60","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,7,"update","66.81","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,8,"update","74.46","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,9,"update","72.51","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,10,"update","75.08","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,19,1,"update","17.62","1.00","567.38","28.26","7667.76","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 305}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,2,"update","23.52","1.00","425.15","17.66","7667.60","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 335}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,3,"update","20.27","1.00","493.35","21.96","7667.47","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 365}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,4,"update","24.38","10.00","410.13","16.96","7667.73","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 398}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,5,"update","22.94","9.00","435.86","17.69","7667.60","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 428}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,6,"update","23.14","1.00","432.08","17.88","7667.74","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 455}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,7,"update","24.49","10.00","408.38","16.74","7667.79","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 488}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,8,"update","16.88","12.00","592.39","24.43","7667.98","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 536}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,9,"update","23.13","1.00","432.39","18.61","7667.32","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 545}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,10,"update","24.74","16.00","404.13","17.10","7667.50","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 590}, ""server_ms"": 16, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,20,1,"update","72.91","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,2,"update","74.06","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,3,"update","65.26","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,4,"update","73.39","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,5,"update","72.50","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,6,"update","73.45","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,7,"update","72.51","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,8,"update","65.30","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,9,"update","73.36","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,10,"update","72.49","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,20,1,"update","22.75","0.00","439.56","15.34","7668.00","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,2,"update","23.08","0.00","433.22","15.70","7667.78","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,3,"update","14.88","0.00","671.84","23.52","7667.72","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,4,"update","23.07","0.00","433.39","15.71","7667.35","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,5,"update","24.43","0.00","409.40","14.46","7667.81","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,6,"update","23.08","9.00","433.35","16.58","7667.53","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,7,"update","22.06","9.00","453.28","18.18","7667.50","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,8,"update","17.72","4.00","564.20","19.82","7667.41","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,9,"update","23.14","0.00","432.24","15.08","7667.57","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,10,"update","16.87","3.00","592.87","21.19","7667.71","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""franco82@example.com.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,21,1,"delete","62.58","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,2,"delete","63.03","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,3,"delete","63.47","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,4,"delete","56.19","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,5,"delete","64.88","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,6,"delete","62.69","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,7,"delete","62.20","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,8,"delete","64.00","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,9,"delete","56.23","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,10,"delete","63.33","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,21,1,"delete","12.16","0.00","822.57","30.83","7667.74","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 73}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,2,"delete","5.78","0.00","1731.39","76.02","7668.01","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 74}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,3,"delete","12.54","10.00","797.39","29.19","7667.64","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 76}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,4,"delete","5.17","2.00","1935.10","66.73","7667.73","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 77}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,5,"delete","5.46","3.00","1830.33","63.70","7667.56","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 79}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,6,"delete","11.51","0.00","868.82","30.74","7667.86","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 81}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,7,"delete","13.16","1.00","759.92","26.60","7667.74","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 82}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,21,8,"delete","12.35","10.00","809.93","28.76","7667.51","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 83}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,9,"delete","13.10","9.00","763.60","28.23","7667.63","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 84}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,10,"delete","13.14","10.00","760.79","27.18","7667.57","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 85}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","warmup",10,22,1,"delete","62.86","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,2,"delete","61.94","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,3,"delete","62.10","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,4,"delete","62.55","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,5,"delete","62.56","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,6,"delete","62.89","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,7,"delete","62.24","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,8,"delete","61.84","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,9,"delete","61.90","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,10,"delete","63.28","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,22,1,"delete","12.90","10.00","774.89","26.29","7667.84","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 71}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",10,22,2,"delete","12.38","0.00","807.97","26.53","7668.13","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 72}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,3,"delete","11.89","9.00","841.28","27.50","7667.72","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 73}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",10,22,4,"delete","16.41","0.00","609.31","20.37","7667.72","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 74}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,5,"delete","11.59","0.00","862.84","28.27","7668.08","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 77}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,6,"delete","11.54","9.00","866.72","35.03","7668.16","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 78}, ""server_ms"": 9, ""counters"": {}}"
"neo4j","optimized","steady",10,22,7,"delete","5.28","0.00","1894.30","62.12","7668.08","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 79}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,8,"delete","11.73","10.00","852.50","28.83","7667.95","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 81}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","steady",10,22,9,"delete","12.03","1.00","831.31","28.03","7667.88","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 82}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,10,"delete","12.71","10.00","786.91","26.03","7667.80","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 83}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","warmup",10,23,1,"delete","57.61","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,2,"delete","69.18","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,3,"delete","63.96","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,4,"delete","63.09","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,5,"delete","63.81","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,6,"delete","65.14","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,7,"delete","65.34","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,8,"delete","62.86","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,9,"delete","65.30","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,10,"delete","56.86","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,23,1,"delete","14.78","11.00","676.67","28.09","7667.96","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 72}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,23,2,"delete","6.88","4.00","1454.25","59.63","7668.00","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 73}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,23,3,"delete","12.82","11.00","779.80","32.76","7667.92","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 74}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,23,4,"delete","13.23","1.00","755.78","31.01","7668.30","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 75}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,5,"delete","12.78","11.00","782.32","31.31","7668.15","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 76}, ""server_ms"": 11, ""counters"": {}}"
"neo4j","optimized","steady",10,23,6,"delete","12.74","0.00","785.06","31.86","7668.01","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 77}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,7,"delete","6.79","1.00","1471.82","59.29","7667.84","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 78}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,8,"delete","17.95","4.00","557.13","43.20","7668.11","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 79}, ""server_ms"": 4, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,23,9,"delete","14.95","12.00","669.01","27.72","7667.53","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 80}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",10,23,10,"delete","13.57","10.00","737.08","35.40","7667.74","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 81}, ""server_ms"": 10, ""counters"": {}}"
"neo4j","optimized","warmup",10,24,1,"delete","65.52","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,2,"delete","66.10","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,3,"delete","68.18","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,4,"delete","66.97","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,5,"delete","57.27","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,6,"delete","65.96","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,7,"delete","57.65","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,8,"delete","65.89","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,9,"delete","66.84","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,10,"delete","60.07","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,24,1,"delete","16.29","3.00","613.76","33.95","7668.94","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 71}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,2,"delete","9.14","6.00","1094.10","59.04","7668.79","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 72}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,24,3,"delete","15.54","13.00","643.42","35.77","7668.69","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 73}, ""server_ms"": 13, ""counters"": {}}"
"neo4j","optimized","steady",10,24,4,"delete","16.64","14.00","601.14","33.01","7668.93","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 74}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",10,24,5,"delete","15.45","12.00","647.28","35.66","7668.94","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 75}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",10,24,6,"delete","17.83","2.00","561.01","31.06","7668.96","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 76}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,7,"delete","7.12","4.00","1404.61","78.45","7668.90","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 77}, ""server_ms"": 4, ""counters"": {}}"
"neo4j","optimized","steady",10,24,8,"delete","16.55","12.00","604.24","33.80","7668.81","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 78}, ""server_ms"": 12, ""counters"": {}}"
"neo4j","optimized","steady",10,24,9,"delete","9.06","6.00","1104.06","58.51","7668.78","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 79}, ""server_ms"": 6, ""counters"": {}}"
"neo4j","optimized","steady",10,24,10,"delete","14.88","12.00","671.90","37.40","7668.96","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 80}, ""server_ms"": 12, ""counters"": {}}"
