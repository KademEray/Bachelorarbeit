"db","mode","phase","concurrency","query_no","repeat","complexity","duration_ms","server_ms","qps","avg_cpu","avg_mem","disk_mb","statement","result"
"neo4j","optimized","warmup",1,1,1,"simple","6579.96","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,2,"simple","1423.69","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,3,"simple","1432.57","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,4,"simple","1404.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,5,"simple","1183.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,6,"simple","1202.97","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,7,"simple","1179.50","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,8,"simple","1227.09","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,9,"simple","1436.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,1,10,"simple","1437.16","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,1,1,"simple","1392.28","624.00","0.72","4.32","3077.95","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 624, ""counters"": {}}"
"neo4j","optimized","steady",1,1,2,"simple","1385.15","617.00","0.72","4.24","3363.54","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 617, ""counters"": {}}"
"neo4j","optimized","steady",1,1,3,"simple","1374.44","615.00","0.73","4.17","3648.19","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 615, ""counters"": {}}"
"neo4j","optimized","steady",1,1,4,"simple","1383.33","615.00","0.72","4.19","3932.85","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 615, ""counters"": {}}"
"neo4j","optimized","steady",1,1,5,"simple","1382.88","617.00","0.72","4.19","4217.62","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 617, ""counters"": {}}"
"neo4j","optimized","steady",1,1,6,"simple","1386.91","614.00","0.72","4.13","4502.12","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 614, ""counters"": {}}"
"neo4j","optimized","steady",1,1,7,"simple","1262.30","482.00","0.79","4.13","4727.48","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 482, ""counters"": {}}"
"neo4j","optimized","steady",1,1,8,"simple","1131.39","343.00","0.88","3.10","4810.88","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 343, ""counters"": {}}"
"neo4j","optimized","steady",1,1,9,"simple","1133.95","346.00","0.88","4.53","4817.29","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 346, ""counters"": {}}"
"neo4j","optimized","steady",1,1,10,"simple","1125.41","346.00","0.89","3.05","4818.55","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 346, ""counters"": {}}"
"neo4j","optimized","warmup",1,2,1,"simple","104.13","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,2,"simple","59.99","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,3,"simple","59.61","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,4,"simple","59.82","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,5,"simple","60.21","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,6,"simple","59.91","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,7,"simple","59.79","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,8,"simple","60.01","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,9,"simple","60.09","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,2,10,"simple","59.34","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,2,1,"simple","13.42","0.00","74.54","31.02","4812.78","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,2,"simple","9.31","0.00","107.45","35.02","4813.17","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,3,"simple","9.45","1.00","105.82","34.26","4813.25","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,4,"simple","9.41","0.00","106.25","35.47","4812.94","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,5,"simple","9.56","0.00","104.58","39.46","4813.17","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,6,"simple","9.46","0.00","105.72","33.69","4813.11","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,7,"simple","9.20","0.00","108.67","69.54","4812.91","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,8,"simple","9.28","1.00","107.71","34.31","4812.81","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",1,2,9,"simple","9.21","0.00","108.53","35.80","4812.79","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",1,2,10,"simple","9.32","1.00","107.34","33.76","4812.34","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","warmup",1,3,1,"simple","463.04","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,2,"simple","93.78","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,3,"simple","93.92","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,4,"simple","92.94","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,5,"simple","92.69","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,6,"simple","96.23","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,7,"simple","92.93","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,8,"simple","92.77","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,9,"simple","94.30","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,3,10,"simple","92.62","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,3,1,"simple","47.79","22.00","20.93","17.13","4841.95","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Hildegunde-Bolnbach-Allee 7"", ""city"": ""Grevenbroich"", ""zip"": ""41529"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,2,"simple","42.17","22.00","23.71","13.87","4841.91","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Hildegunde-Bolnbach-Allee 7"", ""city"": ""Grevenbroich"", ""zip"": ""41529"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,3,"simple","42.48","22.00","23.54","11.86","4842.06","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Hildegunde-Bolnbach-Allee 7"", ""city"": ""Grevenbroich"", ""zip"": ""41529"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,4,"simple","41.90","22.00","23.87","14.24","4841.55","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Hildegunde-Bolnbach-Allee 7"", ""city"": ""Grevenbroich"", ""zip"": ""41529"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,5,"simple","42.24","21.00","23.67","11.57","4841.62","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Hildegunde-Bolnbach-Allee 7"", ""city"": ""Grevenbroich"", ""zip"": ""41529"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,3,6,"simple","42.28","22.00","23.65","12.05","4841.69","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Hildegunde-Bolnbach-Allee 7"", ""city"": ""Grevenbroich"", ""zip"": ""41529"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,7,"simple","42.14","22.00","23.73","11.71","4841.62","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Hildegunde-Bolnbach-Allee 7"", ""city"": ""Grevenbroich"", ""zip"": ""41529"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,8,"simple","42.40","22.00","23.58","11.85","4841.55","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Hildegunde-Bolnbach-Allee 7"", ""city"": ""Grevenbroich"", ""zip"": ""41529"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,9,"simple","42.12","22.00","23.74","13.66","4841.79","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Hildegunde-Bolnbach-Allee 7"", ""city"": ""Grevenbroich"", ""zip"": ""41529"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,3,10,"simple","42.31","22.00","23.64","11.73","4841.32","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""user_id"": 1, ""street"": ""Hildegunde-Bolnbach-Allee 7"", ""city"": ""Grevenbroich"", ""zip"": ""41529"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","warmup",1,4,1,"medium","814.92","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,2,"medium","589.29","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,3,"medium","586.91","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,4,"medium","592.67","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,5,"medium","584.76","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,6,"medium","584.80","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,7,"medium","579.47","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,8,"medium","579.94","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,9,"medium","1346.99","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,4,10,"medium","728.96","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,4,1,"medium","592.99","504.00","1.69","17.47","7265.88","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 504, ""counters"": {}}"
"neo4j","optimized","steady",1,4,2,"medium","550.09","471.00","1.82","14.20","7298.11","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 471, ""counters"": {}}"
"neo4j","optimized","steady",1,4,3,"medium","550.12","471.00","1.82","13.65","7326.24","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 471, ""counters"": {}}"
"neo4j","optimized","steady",1,4,4,"medium","555.88","470.00","1.80","13.57","7326.63","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 470, ""counters"": {}}"
"neo4j","optimized","steady",1,4,5,"medium","556.58","474.00","1.80","13.36","7326.41","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 474, ""counters"": {}}"
"neo4j","optimized","steady",1,4,6,"medium","543.78","464.00","1.84","13.27","7326.88","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 464, ""counters"": {}}"
"neo4j","optimized","steady",1,4,7,"medium","551.03","470.00","1.81","13.77","7326.73","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 470, ""counters"": {}}"
"neo4j","optimized","steady",1,4,8,"medium","549.07","470.00","1.82","13.55","7327.01","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 470, ""counters"": {}}"
"neo4j","optimized","steady",1,4,9,"medium","546.08","465.00","1.83","13.54","7327.24","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 465, ""counters"": {}}"
"neo4j","optimized","steady",1,4,10,"medium","549.69","470.00","1.82","13.98","7327.34","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 44, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 470, ""counters"": {}}"
"neo4j","optimized","warmup",1,5,1,"medium","638.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,2,"medium","151.42","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,3,"medium","176.07","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,4,"medium","151.77","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,5,"medium","152.78","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,6,"medium","150.00","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,7,"medium","156.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,8,"medium","151.33","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,9,"medium","151.67","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,5,10,"medium","151.06","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,5,1,"medium","108.44","94.00","9.22","11.29","7361.90","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 58, ""first"": {""id"": 626802, ""name"": ""34pcs Nail Wraps Self Adhesive Gel Nail Stickers Gel Nail Strips Stick on Nail Strips for Women (Pink)"", ""price"": 4.989999771118164, ""stock"": 89, ""created_at"": ""2020-04-26T09:02:27.000000000+00:00"", ""updated_at"": ""2023-07-15T21:43:17.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 94, ""counters"": {}}"
"neo4j","optimized","steady",1,5,2,"medium","102.89","94.00","9.72","10.76","7361.91","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 58, ""first"": {""id"": 626802, ""name"": ""34pcs Nail Wraps Self Adhesive Gel Nail Stickers Gel Nail Strips Stick on Nail Strips for Women (Pink)"", ""price"": 4.989999771118164, ""stock"": 89, ""created_at"": ""2020-04-26T09:02:27.000000000+00:00"", ""updated_at"": ""2023-07-15T21:43:17.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 94, ""counters"": {}}"
"neo4j","optimized","steady",1,5,3,"medium","100.24","92.00","9.98","11.09","7361.93","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 58, ""first"": {""id"": 626802, ""name"": ""34pcs Nail Wraps Self Adhesive Gel Nail Stickers Gel Nail Strips Stick on Nail Strips for Women (Pink)"", ""price"": 4.989999771118164, ""stock"": 89, ""created_at"": ""2020-04-26T09:02:27.000000000+00:00"", ""updated_at"": ""2023-07-15T21:43:17.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 92, ""counters"": {}}"
"neo4j","optimized","steady",1,5,4,"medium","100.57","92.00","9.94","10.69","7361.99","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 58, ""first"": {""id"": 626802, ""name"": ""34pcs Nail Wraps Self Adhesive Gel Nail Stickers Gel Nail Strips Stick on Nail Strips for Women (Pink)"", ""price"": 4.989999771118164, ""stock"": 89, ""created_at"": ""2020-04-26T09:02:27.000000000+00:00"", ""updated_at"": ""2023-07-15T21:43:17.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 92, ""counters"": {}}"
"neo4j","optimized","steady",1,5,5,"medium","101.18","93.00","9.88","11.13","7361.72","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 58, ""first"": {""id"": 626802, ""name"": ""34pcs Nail Wraps Self Adhesive Gel Nail Stickers Gel Nail Strips Stick on Nail Strips for Women (Pink)"", ""price"": 4.989999771118164, ""stock"": 89, ""created_at"": ""2020-04-26T09:02:27.000000000+00:00"", ""updated_at"": ""2023-07-15T21:43:17.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 93, ""counters"": {}}"
"neo4j","optimized","steady",1,5,6,"medium","101.62","94.00","9.84","10.72","7362.00","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 58, ""first"": {""id"": 626802, ""name"": ""34pcs Nail Wraps Self Adhesive Gel Nail Stickers Gel Nail Strips Stick on Nail Strips for Women (Pink)"", ""price"": 4.989999771118164, ""stock"": 89, ""created_at"": ""2020-04-26T09:02:27.000000000+00:00"", ""updated_at"": ""2023-07-15T21:43:17.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 94, ""counters"": {}}"
"neo4j","optimized","steady",1,5,7,"medium","101.86","93.00","9.82","10.68","7361.81","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 58, ""first"": {""id"": 626802, ""name"": ""34pcs Nail Wraps Self Adhesive Gel Nail Stickers Gel Nail Strips Stick on Nail Strips for Women (Pink)"", ""price"": 4.989999771118164, ""stock"": 89, ""created_at"": ""2020-04-26T09:02:27.000000000+00:00"", ""updated_at"": ""2023-07-15T21:43:17.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 93, ""counters"": {}}"
"neo4j","optimized","steady",1,5,8,"medium","100.78","93.00","9.92","10.81","7362.17","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 58, ""first"": {""id"": 626802, ""name"": ""34pcs Nail Wraps Self Adhesive Gel Nail Stickers Gel Nail Strips Stick on Nail Strips for Women (Pink)"", ""price"": 4.989999771118164, ""stock"": 89, ""created_at"": ""2020-04-26T09:02:27.000000000+00:00"", ""updated_at"": ""2023-07-15T21:43:17.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 93, ""counters"": {}}"
"neo4j","optimized","steady",1,5,9,"medium","102.20","94.00","9.79","10.85","7362.03","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 58, ""first"": {""id"": 626802, ""name"": ""34pcs Nail Wraps Self Adhesive Gel Nail Stickers Gel Nail Strips Stick on Nail Strips for Women (Pink)"", ""price"": 4.989999771118164, ""stock"": 89, ""created_at"": ""2020-04-26T09:02:27.000000000+00:00"", ""updated_at"": ""2023-07-15T21:43:17.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 94, ""counters"": {}}"
"neo4j","optimized","steady",1,5,10,"medium","98.84","91.00","10.12","10.91","7362.15","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 58, ""first"": {""id"": 626802, ""name"": ""34pcs Nail Wraps Self Adhesive Gel Nail Stickers Gel Nail Strips Stick on Nail Strips for Women (Pink)"", ""price"": 4.989999771118164, ""stock"": 89, ""created_at"": ""2020-04-26T09:02:27.000000000+00:00"", ""updated_at"": ""2023-07-15T21:43:17.000000000+00:00"", ""quantity"": 1}, ""server_ms"": 91, ""counters"": {}}"
"neo4j","optimized","warmup",1,6,1,"medium","252.31","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,2,"medium","83.91","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,3,"medium","80.51","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,4,"medium","80.89","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,5,"medium","80.34","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,6,"medium","80.77","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,7,"medium","80.30","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,8,"medium","80.33","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,9,"medium","81.38","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,6,10,"medium","80.64","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,6,1,"medium","34.02","21.00","29.39","21.37","7374.70","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,6,2,"medium","29.95","21.00","33.39","16.26","7374.87","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,6,3,"medium","29.49","21.00","33.92","16.03","7374.69","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,6,4,"medium","29.24","20.00","34.20","16.13","7374.84","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",1,6,5,"medium","29.20","21.00","34.25","15.80","7374.44","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,6,6,"medium","29.98","21.00","33.36","15.93","7375.05","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,6,7,"medium","29.27","21.00","34.17","16.45","7374.94","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,6,8,"medium","29.55","21.00","33.84","15.95","7374.89","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,6,9,"medium","29.39","20.00","34.02","15.86","7374.94","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",1,6,10,"medium","29.82","21.00","33.53","16.47","7375.07","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","warmup",1,7,1,"complex","1365.28","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,2,"complex","513.55","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,3,"complex","504.82","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,4,"complex","505.81","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,5,"complex","511.17","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,6,"complex","504.79","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,7,"complex","504.70","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,8,"complex","501.78","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,9,"complex","500.66","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,7,10,"complex","506.05","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,7,1,"complex","465.90","434.00","2.15","8.73","7432.56","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 434, ""counters"": {}}"
"neo4j","optimized","steady",1,7,2,"complex","452.75","426.00","2.21","8.55","7432.51","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 426, ""counters"": {}}"
"neo4j","optimized","steady",1,7,3,"complex","456.51","430.00","2.19","8.64","7432.45","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 430, ""counters"": {}}"
"neo4j","optimized","steady",1,7,4,"complex","447.90","422.00","2.23","8.54","7432.50","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 422, ""counters"": {}}"
"neo4j","optimized","steady",1,7,5,"complex","451.27","425.00","2.22","8.54","7432.29","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 425, ""counters"": {}}"
"neo4j","optimized","steady",1,7,6,"complex","458.42","431.00","2.18","8.54","7432.26","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 431, ""counters"": {}}"
"neo4j","optimized","steady",1,7,7,"complex","445.67","419.00","2.24","8.51","7432.43","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 419, ""counters"": {}}"
"neo4j","optimized","steady",1,7,8,"complex","458.95","432.00","2.18","8.53","7432.74","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 432, ""counters"": {}}"
"neo4j","optimized","steady",1,7,9,"complex","456.23","429.00","2.19","8.69","7432.72","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 429, ""counters"": {}}"
"neo4j","optimized","steady",1,7,10,"complex","454.89","428.00","2.20","8.53","7432.52","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 428, ""counters"": {}}"
"neo4j","optimized","warmup",1,8,1,"complex","281.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,2,"complex","94.30","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,3,"complex","91.54","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,4,"complex","90.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,5,"complex","90.41","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,6,"complex","89.90","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,7,"complex","89.33","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,8,"complex","89.76","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,9,"complex","89.81","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,8,10,"complex","91.18","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,8,1,"complex","42.21","21.00","23.69","12.77","7434.52","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,8,2,"complex","39.08","21.00","25.59","12.56","7434.58","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,8,3,"complex","38.85","22.00","25.74","12.74","7434.66","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,8,4,"complex","39.08","22.00","25.59","12.82","7434.52","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,8,5,"complex","40.78","22.00","24.52","12.42","7434.24","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,8,6,"complex","38.86","21.00","25.73","12.48","7434.69","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,8,7,"complex","38.56","22.00","25.93","12.73","7434.57","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,8,8,"complex","38.60","21.00","25.91","13.11","7434.70","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",1,8,9,"complex","38.54","22.00","25.95","12.81","7434.52","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",1,8,10,"complex","38.99","22.00","25.65","12.43","7434.58","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","warmup",1,9,1,"complex","604.27","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,2,"complex","242.59","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,3,"complex","243.89","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,4,"complex","242.47","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,5,"complex","241.61","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,6,"complex","234.73","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,7,"complex","238.40","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,8,"complex","242.65","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,9,"complex","242.49","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,9,10,"complex","238.64","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,9,1,"complex","193.71","178.00","5.16","9.88","7462.08","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",1,9,2,"complex","188.91","178.00","5.29","10.22","7462.60","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",1,9,3,"complex","188.66","178.00","5.30","9.46","7462.46","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",1,9,4,"complex","189.72","178.00","5.27","9.82","7462.66","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",1,9,5,"complex","188.38","177.00","5.31","9.78","7462.44","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 177, ""counters"": {}}"
"neo4j","optimized","steady",1,9,6,"complex","188.02","177.00","5.32","9.47","7462.43","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 177, ""counters"": {}}"
"neo4j","optimized","steady",1,9,7,"complex","192.14","180.00","5.20","9.52","7462.70","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 180, ""counters"": {}}"
"neo4j","optimized","steady",1,9,8,"complex","189.73","178.00","5.27","9.54","7462.50","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",1,9,9,"complex","187.05","177.00","5.35","9.49","7462.33","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 177, ""counters"": {}}"
"neo4j","optimized","steady",1,9,10,"complex","190.34","180.00","5.25","9.71","7462.63","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 2, ""orders_last_30d"": 1}, ""server_ms"": 180, ""counters"": {}}"
"neo4j","optimized","warmup",1,10,1,"very_complex","610.24","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,2,"very_complex","440.74","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,3,"very_complex","439.29","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,4,"very_complex","515.40","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,5,"very_complex","410.65","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,6,"very_complex","421.83","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,7,"very_complex","422.84","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,8,"very_complex","504.11","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,9,"very_complex","423.70","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,10,10,"very_complex","418.15","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,10,1,"very_complex","375.78","367.00","2.66","10.79","7467.64","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 367, ""counters"": {}}"
"neo4j","optimized","steady",1,10,2,"very_complex","477.77","473.00","2.09","24.03","7467.53","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 473, ""counters"": {}}"
"neo4j","optimized","steady",1,10,3,"very_complex","405.46","401.00","2.47","16.56","7467.23","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 401, ""counters"": {}}"
"neo4j","optimized","steady",1,10,4,"very_complex","370.45","366.00","2.70","9.53","7467.38","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 366, ""counters"": {}}"
"neo4j","optimized","steady",1,10,5,"very_complex","384.49","381.00","2.60","9.68","7467.52","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 381, ""counters"": {}}"
"neo4j","optimized","steady",1,10,6,"very_complex","365.14","361.00","2.74","9.88","7467.35","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 361, ""counters"": {}}"
"neo4j","optimized","steady",1,10,7,"very_complex","461.84","458.00","2.17","20.78","7467.68","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 458, ""counters"": {}}"
"neo4j","optimized","steady",1,10,8,"very_complex","393.28","390.00","2.54","16.04","7467.68","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 390, ""counters"": {}}"
"neo4j","optimized","steady",1,10,9,"very_complex","365.10","362.00","2.74","9.44","7467.29","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 362, ""counters"": {}}"
"neo4j","optimized","steady",1,10,10,"very_complex","368.67","365.00","2.71","9.54","7467.91","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 365, ""counters"": {}}"
"neo4j","optimized","warmup",1,11,1,"very_complex","1646.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,2,"very_complex","1712.06","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,3,"very_complex","1582.03","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,4,"very_complex","1585.39","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,5,"very_complex","1598.90","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,6,"very_complex","1730.86","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,7,"very_complex","1595.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,8,"very_complex","1596.61","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,9,"very_complex","1669.33","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,11,10,"very_complex","1632.89","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,11,1,"very_complex","1519.82","1511.00","0.66","8.72","7471.84","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1511, ""counters"": {}}"
"neo4j","optimized","steady",1,11,2,"very_complex","1535.60","1530.00","0.65","8.68","7471.87","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1530, ""counters"": {}}"
"neo4j","optimized","steady",1,11,3,"very_complex","1668.92","1664.00","0.60","13.07","7472.09","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1664, ""counters"": {}}"
"neo4j","optimized","steady",1,11,4,"very_complex","1526.70","1522.00","0.66","8.64","7471.75","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1522, ""counters"": {}}"
"neo4j","optimized","steady",1,11,5,"very_complex","1521.12","1517.00","0.66","8.67","7472.17","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1517, ""counters"": {}}"
"neo4j","optimized","steady",1,11,6,"very_complex","1637.08","1633.00","0.61","12.89","7471.61","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1633, ""counters"": {}}"
"neo4j","optimized","steady",1,11,7,"very_complex","1521.54","1516.00","0.66","8.54","7472.24","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1516, ""counters"": {}}"
"neo4j","optimized","steady",1,11,8,"very_complex","1607.47","1603.00","0.62","13.19","7471.85","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1603, ""counters"": {}}"
"neo4j","optimized","steady",1,11,9,"very_complex","1540.47","1536.00","0.65","8.60","7471.84","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1536, ""counters"": {}}"
"neo4j","optimized","steady",1,11,10,"very_complex","1577.50","1573.00","0.63","8.67","7472.19","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1573, ""counters"": {}}"
"neo4j","optimized","warmup",1,12,1,"very_complex","709.57","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,2,"very_complex","720.46","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,3,"very_complex","652.91","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,4,"very_complex","610.63","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,5,"very_complex","591.43","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,6,"very_complex","589.17","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,7,"very_complex","603.62","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,8,"very_complex","596.07","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,9,"very_complex","726.18","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,12,10,"very_complex","592.85","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,12,1,"very_complex","544.97","535.00","1.83","10.48","7473.20","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 535, ""counters"": {}}"
"neo4j","optimized","steady",1,12,2,"very_complex","632.71","629.00","1.58","17.51","7473.36","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 629, ""counters"": {}}"
"neo4j","optimized","steady",1,12,3,"very_complex","536.45","533.00","1.86","8.99","7473.60","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 533, ""counters"": {}}"
"neo4j","optimized","steady",1,12,4,"very_complex","538.88","534.00","1.86","9.11","7473.54","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 534, ""counters"": {}}"
"neo4j","optimized","steady",1,12,5,"very_complex","534.75","531.00","1.87","9.19","7473.39","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 531, ""counters"": {}}"
"neo4j","optimized","steady",1,12,6,"very_complex","526.75","523.00","1.90","9.22","7473.97","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 523, ""counters"": {}}"
"neo4j","optimized","steady",1,12,7,"very_complex","539.63","536.00","1.85","9.26","7473.73","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 536, ""counters"": {}}"
"neo4j","optimized","steady",1,12,8,"very_complex","628.84","622.00","1.59","22.26","7473.70","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 622, ""counters"": {}}"
"neo4j","optimized","steady",1,12,9,"very_complex","536.78","533.00","1.86","8.94","7473.87","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 533, ""counters"": {}}"
"neo4j","optimized","steady",1,12,10,"very_complex","563.48","560.00","1.77","8.92","7473.61","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 560, ""counters"": {}}"
"neo4j","optimized","warmup",1,13,1,"create","258.79","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,2,"create","101.83","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,3,"create","88.99","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,4,"create","84.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,5,"create","96.62","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,6,"create","84.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,7,"create","83.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,8,"create","84.59","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,9,"create","84.96","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,13,10,"create","76.61","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,13,1,"create","37.77","21.00","26.48","15.50","7475.20","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134619}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,2,"create","33.45","21.00","29.90","15.14","7475.32","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134620}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,3,"create","27.03","21.00","37.00","28.17","7475.37","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134621}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,4,"create","34.48","22.00","29.00","15.41","7475.58","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134622}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,5,"create","33.65","19.00","29.72","16.13","7475.27","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134623}, ""server_ms"": 19, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,6,"create","34.27","22.00","29.18","15.01","7475.64","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134624}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,7,"create","29.10","21.00","34.37","17.98","7475.50","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134625}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,8,"create","33.40","21.00","29.94","14.87","7475.43","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134626}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,9,"create","36.60","22.00","27.32","13.44","7475.54","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134627}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",1,13,10,"create","32.82","21.00","30.47","15.70","7475.49","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134628}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",1,14,1,"create","146.38","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,2,"create","152.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,3,"create","98.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,4,"create","99.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,5,"create","97.55","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,6,"create","96.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,7,"create","97.16","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,8,"create","100.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,9,"create","98.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,14,10,"create","95.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,14,1,"create","49.83","33.00","20.07","12.99","7476.06","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200067}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,2,"create","38.39","33.00","26.05","15.43","7476.05","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200068}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,3,"create","46.42","33.00","21.54","12.53","7476.04","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200069}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,4,"create","45.06","33.00","22.19","12.92","7476.15","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200070}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,5,"create","45.60","33.00","21.93","16.91","7476.08","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200071}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,6,"create","39.78","34.00","25.14","15.87","7476.29","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200072}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,7,"create","45.00","33.00","22.22","14.84","7476.29","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200073}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,8,"create","45.17","33.00","22.14","13.19","7476.25","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200074}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,9,"create","45.23","33.00","22.11","12.89","7476.25","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200075}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",1,14,10,"create","45.49","33.00","21.98","12.87","7476.24","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200076}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",1,15,1,"create","399.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,2,"create","114.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,3,"create","116.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,4,"create","118.13","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,5,"create","119.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,6,"create","117.17","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,7,"create","119.05","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,8,"create","117.26","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,9,"create","117.66","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,15,10,"create","117.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,15,1,"create","70.89","55.00","14.11","13.09","7493.18","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150473}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,2,"create","67.17","55.00","14.89","11.63","7492.95","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150474}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,3,"create","66.65","55.00","15.00","11.56","7493.47","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150475}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,4,"create","67.00","55.00","14.93","11.59","7493.21","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150476}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,5,"create","67.10","55.00","14.90","11.64","7492.86","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150477}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,6,"create","67.40","54.00","14.84","12.55","7493.07","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150478}, ""server_ms"": 54, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,7,"create","60.76","55.00","16.46","13.04","7493.38","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150479}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,8,"create","60.04","55.00","16.66","13.60","7493.28","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150480}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,9,"create","67.39","55.00","14.84","12.72","7493.54","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150481}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",1,15,10,"create","67.96","55.00","14.71","11.54","7493.35","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150482}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",1,16,1,"create","1521.68","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,2,"create","444.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,3,"create","456.88","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,4,"create","455.84","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,5,"create","440.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,6,"create","439.78","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,7,"create","439.83","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,8,"create","444.90","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,9,"create","502.05","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,16,10,"create","447.15","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,16,1,"create","398.46","382.00","2.51","9.06","7567.35","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049079}, ""server_ms"": 382, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,2,"create","395.37","383.00","2.53","8.91","7567.08","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049080}, ""server_ms"": 383, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,3,"create","390.35","378.00","2.56","8.86","7567.36","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049081}, ""server_ms"": 378, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,4,"create","395.85","384.00","2.53","8.97","7567.34","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049082}, ""server_ms"": 384, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,5,"create","389.12","377.00","2.57","8.89","7567.33","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049083}, ""server_ms"": 377, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,6,"create","415.66","403.00","2.41","14.02","7567.25","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049084}, ""server_ms"": 403, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,7,"create","388.29","376.00","2.58","9.17","7567.39","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049085}, ""server_ms"": 376, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,8,"create","395.40","383.00","2.53","8.90","7567.20","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049086}, ""server_ms"": 383, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,9,"create","382.08","377.00","2.62","9.19","7567.55","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049087}, ""server_ms"": 377, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",1,16,10,"create","395.81","383.00","2.53","8.91","7567.51","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049088}, ""server_ms"": 383, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",1,17,1,"update","522.64","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,2,"update","479.53","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,3,"update","463.70","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,4,"update","455.84","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,5,"update","466.79","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,6,"update","464.67","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,7,"update","458.06","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,8,"update","463.39","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,9,"update","553.15","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,17,10,"update","462.35","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,17,1,"update","411.10","397.00","2.43","9.01","7570.31","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 55}, ""server_ms"": 397, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,2,"update","416.77","405.00","2.40","8.85","7570.39","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 56}, ""server_ms"": 405, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,3,"update","414.58","403.00","2.41","8.88","7570.23","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 57}, ""server_ms"": 403, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,4,"update","415.34","404.00","2.41","8.84","7569.85","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 58}, ""server_ms"": 404, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,5,"update","411.49","399.00","2.43","8.89","7570.47","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 59}, ""server_ms"": 399, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,6,"update","417.11","405.00","2.40","9.84","7570.63","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 60}, ""server_ms"": 405, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,7,"update","415.39","411.00","2.41","8.96","7570.51","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 61}, ""server_ms"": 411, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,8,"update","408.41","397.00","2.45","8.86","7570.34","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 62}, ""server_ms"": 397, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,9,"update","408.37","397.00","2.45","8.85","7570.44","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 63}, ""server_ms"": 397, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,17,10,"update","414.73","403.00","2.41","8.84","7570.58","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 64}, ""server_ms"": 403, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,18,1,"update","129.03","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,2,"update","72.53","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,3,"update","86.76","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,4,"update","65.38","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,5,"update","63.53","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,6,"update","63.08","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,7,"update","63.21","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,8,"update","63.21","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,9,"update","63.13","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,18,10,"update","63.34","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,18,1,"update","16.08","10.00","62.21","34.22","7569.84","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,2,"update","22.63","11.00","44.19","18.14","7571.06","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,3,"update","12.82","10.00","77.97","28.56","7570.95","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,4,"update","12.92","10.00","77.38","29.69","7569.01","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,5,"update","12.85","10.00","77.79","28.55","7566.97","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,6,"update","12.91","10.00","77.45","28.30","7567.10","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,7,"update","13.01","10.00","76.86","29.14","7567.00","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,8,"update","12.94","11.00","77.27","28.31","7567.14","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,9,"update","12.01","9.00","83.25","31.70","7567.14","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,18,10,"update","12.86","10.00","77.77","29.03","7567.02","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 1, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,19,1,"update","149.54","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,2,"update","121.41","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,3,"update","114.69","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,4,"update","121.80","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,5,"update","120.96","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,6,"update","114.54","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,7,"update","120.90","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,8,"update","120.30","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,9,"update","114.34","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,19,10,"update","121.88","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,19,1,"update","66.83","60.00","14.96","12.75","7567.89","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 34}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,2,"update","71.41","60.00","14.00","11.13","7567.79","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 37}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,3,"update","64.43","59.00","15.52","12.42","7568.13","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 40}, ""server_ms"": 59, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,4,"update","70.69","59.00","14.15","11.47","7568.04","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 43}, ""server_ms"": 59, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,5,"update","71.61","60.00","13.96","11.48","7568.25","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 46}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,6,"update","70.49","59.00","14.19","11.37","7568.21","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 49}, ""server_ms"": 59, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,7,"update","70.48","60.00","14.19","11.11","7568.15","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 52}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,8,"update","71.03","60.00","14.08","11.40","7568.09","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 55}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,9,"update","70.71","59.00","14.14","11.25","7568.05","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 58}, ""server_ms"": 59, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,19,10,"update","70.76","60.00","14.13","11.12","7567.82","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 1, ""new_quantity"": 61}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,20,1,"update","84.07","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,2,"update","55.26","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,3,"update","62.75","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,4,"update","62.26","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,5,"update","61.27","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,6,"update","61.96","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,7,"update","62.27","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,8,"update","61.99","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,9,"update","55.15","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,20,10,"update","64.91","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,20,1,"update","14.40","0.00","69.44","22.47","7568.47","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,2,"update","11.42","0.00","87.55","26.16","7568.31","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,3,"update","11.32","1.00","88.30","27.93","7568.79","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,4,"update","4.24","0.00","235.85","70.30","7568.68","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,5,"update","11.10","0.00","90.09","27.78","7568.51","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,6,"update","11.29","1.00","88.54","25.90","7568.75","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,7,"update","11.47","0.00","87.19","25.54","7568.37","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,8,"update","4.42","0.00","226.39","65.31","7568.72","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,9,"update","11.43","0.00","87.47","25.61","7568.67","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",1,20,10,"update","11.24","0.00","88.99","26.67","7568.67","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",1,21,1,"delete","132.12","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,2,"delete","86.93","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,3,"delete","86.09","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,4,"delete","86.18","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,5,"delete","86.03","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,6,"delete","86.39","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,7,"delete","86.07","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,8,"delete","79.36","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,9,"delete","86.12","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,21,10,"delete","85.59","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,21,1,"delete","39.46","24.00","25.34","13.70","7573.97","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 11}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,2,"delete","28.65","24.00","34.90","17.55","7573.84","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 12}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,3,"delete","35.69","24.00","28.02","14.31","7574.09","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 13}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,4,"delete","36.19","24.00","27.63","15.42","7574.10","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 14}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,5,"delete","35.97","24.00","27.80","17.17","7573.99","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 15}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,6,"delete","28.88","24.00","34.63","17.96","7574.20","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 16}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,7,"delete","35.73","24.00","27.99","14.12","7574.39","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 17}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,8,"delete","28.69","24.00","34.85","17.15","7573.99","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 18}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,9,"delete","36.30","25.00","27.55","13.87","7574.45","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 19}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,21,10,"delete","28.57","24.00","35.00","17.56","7574.35","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 20}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,22,1,"delete","99.69","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,2,"delete","72.39","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,3,"delete","67.10","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,4,"delete","72.13","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,5,"delete","71.99","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,6,"delete","72.18","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,7,"delete","72.36","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,8,"delete","72.12","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,9,"delete","72.12","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,22,10,"delete","66.46","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,22,1,"delete","23.87","10.00","41.89","19.40","7580.21","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 11}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,2,"delete","21.59","10.00","46.31","19.66","7573.65","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 12}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,3,"delete","21.87","10.00","45.72","19.77","7573.61","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 13}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,4,"delete","22.06","10.00","45.33","18.03","7573.45","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 14}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,5,"delete","21.65","10.00","46.20","17.68","7573.88","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 15}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,6,"delete","22.79","10.00","43.87","16.63","7573.50","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 16}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,7,"delete","14.49","11.00","69.03","25.67","7573.98","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 17}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,8,"delete","21.58","11.00","46.34","17.73","7573.71","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 18}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,9,"delete","21.26","10.00","47.04","17.47","7573.91","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 19}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,22,10,"delete","21.71","10.00","46.06","17.72","7573.36","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 20}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,23,1,"delete","158.56","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,2,"delete","129.89","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,3,"delete","129.23","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,4,"delete","129.94","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,5,"delete","130.67","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,6,"delete","131.51","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,7,"delete","129.51","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,8,"delete","123.21","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,9,"delete","129.90","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,23,10,"delete","131.39","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,23,1,"delete","82.24","68.00","12.16","11.81","7576.85","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 11}, ""server_ms"": 68, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,2,"delete","75.24","70.00","13.29","12.88","7576.91","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 12}, ""server_ms"": 70, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,3,"delete","79.17","67.00","12.63","10.80","7576.76","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 13}, ""server_ms"": 67, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,4,"delete","79.45","68.00","12.59","10.88","7576.77","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 14}, ""server_ms"": 68, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,5,"delete","80.39","69.00","12.44","11.23","7576.83","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 15}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,6,"delete","72.36","67.00","13.82","11.83","7576.86","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 16}, ""server_ms"": 67, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,7,"delete","72.55","68.00","13.78","12.17","7577.12","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 17}, ""server_ms"": 68, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,8,"delete","79.83","68.00","12.53","11.33","7576.89","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 18}, ""server_ms"": 68, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,9,"delete","79.46","68.00","12.59","10.88","7577.02","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 19}, ""server_ms"": 68, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,23,10,"delete","79.82","68.00","12.53","11.06","7577.02","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 20}, ""server_ms"": 68, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",1,24,1,"delete","793.50","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,2,"delete","280.05","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,3,"delete","286.57","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,4,"delete","288.42","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,5,"delete","300.20","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,6,"delete","285.25","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,7,"delete","286.68","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,8,"delete","290.02","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,9,"delete","289.88","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",1,24,10,"delete","287.23","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",1,24,1,"delete","240.01","226.00","4.17","9.23","7611.88","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 11}, ""server_ms"": 226, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,2,"delete","237.78","226.00","4.21","9.30","7612.01","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 12}, ""server_ms"": 226, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,3,"delete","232.81","228.00","4.30","9.49","7611.97","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 13}, ""server_ms"": 228, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,4,"delete","237.76","225.00","4.21","9.19","7612.03","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 14}, ""server_ms"": 225, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,5,"delete","231.06","226.00","4.33","9.49","7611.98","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 15}, ""server_ms"": 226, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,6,"delete","232.73","229.00","4.30","9.46","7612.05","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 16}, ""server_ms"": 229, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,7,"delete","231.97","228.00","4.31","9.43","7612.03","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 17}, ""server_ms"": 228, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,8,"delete","239.22","227.00","4.18","9.18","7611.93","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 18}, ""server_ms"": 227, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,9,"delete","238.18","227.00","4.20","9.21","7612.23","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 19}, ""server_ms"": 227, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",1,24,10,"delete","239.20","228.00","4.18","9.24","7612.17","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 20}, ""server_ms"": 228, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",3,1,1,"simple","3317.98","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,2,"simple","3290.89","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,3,"simple","3306.69","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,4,"simple","3287.28","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,5,"simple","3335.40","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,6,"simple","3299.18","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,7,"simple","3308.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,8,"simple","3312.35","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,9,"simple","3274.43","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,1,10,"simple","3304.84","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,1,1,"simple","3256.45","379.00","0.92","3.25","7631.34","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 379, ""counters"": {}}"
"neo4j","optimized","steady",3,1,2,"simple","3265.71","406.00","0.92","3.32","7631.21","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 406, ""counters"": {}}"
"neo4j","optimized","steady",3,1,3,"simple","3284.88","379.00","0.91","3.20","7631.52","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 379, ""counters"": {}}"
"neo4j","optimized","steady",3,1,4,"simple","3283.30","436.00","0.91","3.48","7631.76","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 436, ""counters"": {}}"
"neo4j","optimized","steady",3,1,5,"simple","3269.81","379.00","0.92","3.21","7631.73","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 379, ""counters"": {}}"
"neo4j","optimized","steady",3,1,6,"simple","3251.07","378.00","0.92","3.18","7631.76","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 378, ""counters"": {}}"
"neo4j","optimized","steady",3,1,7,"simple","3224.22","381.00","0.93","3.24","7631.91","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 381, ""counters"": {}}"
"neo4j","optimized","steady",3,1,8,"simple","3256.58","394.00","0.92","3.27","7631.71","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 394, ""counters"": {}}"
"neo4j","optimized","steady",3,1,9,"simple","3220.80","375.00","0.93","3.24","7631.93","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 375, ""counters"": {}}"
"neo4j","optimized","steady",3,1,10,"simple","3247.81","376.00","0.92","3.19","7631.78","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 376, ""counters"": {}}"
"neo4j","optimized","warmup",3,2,1,"simple","75.31","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,2,"simple","75.67","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,3,"simple","74.87","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,4,"simple","74.87","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,5,"simple","75.19","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,6,"simple","75.85","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,7,"simple","74.59","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,8,"simple","75.06","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,9,"simple","74.61","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,2,10,"simple","74.72","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,2,1,"simple","23.33","0.00","128.61","14.45","7632.04","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,2,"simple","23.22","0.00","129.20","14.40","7631.76","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,3,"simple","23.50","0.00","127.65","15.83","7631.75","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,4,"simple","22.95","0.00","130.69","14.32","7631.66","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,5,"simple","23.28","0.00","128.86","15.46","7631.94","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,6,"simple","24.17","0.00","124.13","14.22","7631.86","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,7,"simple","23.80","0.00","126.03","13.86","7631.83","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,8,"simple","23.35","0.00","128.48","13.79","7631.71","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",3,2,9,"simple","23.27","1.00","128.91","14.77","7631.78","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",3,2,10,"simple","23.25","0.00","129.05","14.17","7631.87","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",3,3,1,"simple","148.57","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,2,"simple","152.72","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,3,"simple","149.06","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,4,"simple","149.38","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,5,"simple","149.60","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,6,"simple","149.58","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,7,"simple","150.21","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,8,"simple","150.95","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,9,"simple","148.69","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,3,10,"simple","148.17","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,3,1,"simple","99.68","26.00","30.10","9.87","7631.90","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Bruderring 91"", ""city"": ""Illertissen"", ""zip"": ""58964"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",3,3,2,"simple","99.50","28.00","30.15","10.34","7631.91","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Bruderring 91"", ""city"": ""Illertissen"", ""zip"": ""58964"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",3,3,3,"simple","102.05","25.00","29.40","10.06","7631.74","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Bruderring 91"", ""city"": ""Illertissen"", ""zip"": ""58964"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",3,3,4,"simple","100.73","25.00","29.78","10.40","7631.62","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Bruderring 91"", ""city"": ""Illertissen"", ""zip"": ""58964"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",3,3,5,"simple","100.51","26.00","29.85","10.50","7631.62","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Bruderring 91"", ""city"": ""Illertissen"", ""zip"": ""58964"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",3,3,6,"simple","100.72","28.00","29.79","10.62","7632.00","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Bruderring 91"", ""city"": ""Illertissen"", ""zip"": ""58964"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",3,3,7,"simple","102.45","25.00","29.28","10.26","7631.82","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Bruderring 91"", ""city"": ""Illertissen"", ""zip"": ""58964"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",3,3,8,"simple","99.49","31.00","30.16","11.82","7631.72","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Bruderring 91"", ""city"": ""Illertissen"", ""zip"": ""58964"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",3,3,9,"simple","99.25","31.00","30.23","11.59","7631.79","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Bruderring 91"", ""city"": ""Illertissen"", ""zip"": ""58964"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 31, ""counters"": {}}"
"neo4j","optimized","steady",3,3,10,"simple","102.28","26.00","29.33","10.22","7631.73","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 21, ""user_id"": 15, ""street"": ""Bruderring 91"", ""city"": ""Illertissen"", ""zip"": ""58964"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","warmup",3,4,1,"medium","832.15","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,2,"medium","817.47","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,3,"medium","805.55","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,4,"medium","811.75","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,5,"medium","807.68","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,6,"medium","2005.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,7,"medium","799.86","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,8,"medium","1030.71","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,9,"medium","956.55","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,4,10,"medium","1184.70","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,4,1,"medium","846.30","558.00","3.54","23.80","7655.88","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 558, ""counters"": {}}"
"neo4j","optimized","steady",3,4,2,"medium","870.00","602.00","3.45","37.56","7665.46","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 602, ""counters"": {}}"
"neo4j","optimized","steady",3,4,3,"medium","967.72","685.00","3.10","31.31","7665.69","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 685, ""counters"": {}}"
"neo4j","optimized","steady",3,4,4,"medium","841.43","554.00","3.57","33.59","7665.99","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 554, ""counters"": {}}"
"neo4j","optimized","steady",3,4,5,"medium","1052.65","759.00","2.85","37.05","7672.22","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 759, ""counters"": {}}"
"neo4j","optimized","steady",3,4,6,"medium","747.96","463.00","4.01","16.46","7678.57","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 463, ""counters"": {}}"
"neo4j","optimized","steady",3,4,7,"medium","975.87","692.00","3.07","32.90","7678.81","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 692, ""counters"": {}}"
"neo4j","optimized","steady",3,4,8,"medium","957.56","662.00","3.13","29.92","7678.70","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 662, ""counters"": {}}"
"neo4j","optimized","steady",3,4,9,"medium","747.21","463.00","4.01","16.31","7679.08","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 463, ""counters"": {}}"
"neo4j","optimized","steady",3,4,10,"medium","1066.92","771.00","2.81","43.06","7679.10","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 64, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 771, ""counters"": {}}"
"neo4j","optimized","warmup",3,5,1,"medium","148.65","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,2,"medium","190.38","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,3,"medium","171.40","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,4,"medium","164.78","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,5,"medium","166.22","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,6,"medium","166.50","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,7,"medium","146.41","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,8,"medium","150.03","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,9,"medium","146.69","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,5,10,"medium","148.07","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,5,1,"medium","96.01","93.00","31.25","27.53","7679.42","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 93, ""counters"": {}}"
"neo4j","optimized","steady",3,5,2,"medium","98.96","97.00","30.32","27.59","7679.33","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 97, ""counters"": {}}"
"neo4j","optimized","steady",3,5,3,"medium","101.41","96.00","29.58","26.99","7679.14","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 96, ""counters"": {}}"
"neo4j","optimized","steady",3,5,4,"medium","101.96","96.00","29.42","27.22","7678.94","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 96, ""counters"": {}}"
"neo4j","optimized","steady",3,5,5,"medium","95.67","93.00","31.36","27.52","7679.32","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 93, ""counters"": {}}"
"neo4j","optimized","steady",3,5,6,"medium","115.23","93.00","26.04","25.68","7679.29","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 93, ""counters"": {}}"
"neo4j","optimized","steady",3,5,7,"medium","96.04","93.00","31.24","27.78","7679.23","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 93, ""counters"": {}}"
"neo4j","optimized","steady",3,5,8,"medium","95.71","93.00","31.34","27.62","7679.33","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 93, ""counters"": {}}"
"neo4j","optimized","steady",3,5,9,"medium","114.87","112.00","26.12","25.85","7678.88","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 112, ""counters"": {}}"
"neo4j","optimized","steady",3,5,10,"medium","105.00","102.00","28.57","34.30","7679.43","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 102, ""counters"": {}}"
"neo4j","optimized","warmup",3,6,1,"medium","98.90","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,2,"medium","94.04","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,3,"medium","93.09","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,4,"medium","93.27","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,5,"medium","94.37","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,6,"medium","95.51","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,7,"medium","93.50","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,8,"medium","94.19","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,9,"medium","93.33","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,6,10,"medium","93.41","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,6,1,"medium","43.34","23.00","69.22","19.92","7679.43","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,6,2,"medium","42.92","22.00","69.90","20.54","7679.12","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",3,6,3,"medium","43.01","21.00","69.76","19.76","7679.42","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",3,6,4,"medium","42.89","22.00","69.94","19.58","7679.44","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",3,6,5,"medium","43.09","21.00","69.62","19.47","7679.32","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",3,6,6,"medium","43.37","21.00","69.18","20.10","7679.26","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",3,6,7,"medium","43.06","21.00","69.67","19.89","7679.76","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",3,6,8,"medium","42.86","22.00","70.00","20.01","7679.54","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",3,6,9,"medium","42.59","21.00","70.44","19.73","7679.34","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",3,6,10,"medium","43.35","22.00","69.20","19.55","7679.36","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","warmup",3,7,1,"complex","605.29","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,2,"complex","605.87","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,3,"complex","587.68","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,4,"complex","593.96","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,5,"complex","590.58","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,6,"complex","624.73","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,7,"complex","592.38","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,8,"complex","589.19","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,9,"complex","593.78","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,7,10,"complex","588.51","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,7,1,"complex","543.10","451.00","5.52","21.63","7679.98","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 451, ""counters"": {}}"
"neo4j","optimized","steady",3,7,2,"complex","543.54","451.00","5.52","21.36","7679.85","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 451, ""counters"": {}}"
"neo4j","optimized","steady",3,7,3,"complex","539.70","449.00","5.56","21.40","7679.73","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 449, ""counters"": {}}"
"neo4j","optimized","steady",3,7,4,"complex","552.38","460.00","5.43","22.31","7681.93","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 460, ""counters"": {}}"
"neo4j","optimized","steady",3,7,5,"complex","556.35","464.00","5.39","21.48","7684.02","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 464, ""counters"": {}}"
"neo4j","optimized","steady",3,7,6,"complex","560.57","491.00","5.35","22.26","7684.22","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 491, ""counters"": {}}"
"neo4j","optimized","steady",3,7,7,"complex","559.70","492.00","5.36","24.28","7684.07","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 492, ""counters"": {}}"
"neo4j","optimized","steady",3,7,8,"complex","541.75","451.00","5.54","21.45","7684.36","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 451, ""counters"": {}}"
"neo4j","optimized","steady",3,7,9,"complex","559.56","493.00","5.36","22.30","7684.23","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 493, ""counters"": {}}"
"neo4j","optimized","steady",3,7,10,"complex","540.18","448.00","5.55","21.42","7684.38","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 448, ""counters"": {}}"
"neo4j","optimized","warmup",3,8,1,"complex","142.72","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,2,"complex","142.19","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,3,"complex","139.05","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,4,"complex","138.10","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,5,"complex","139.53","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,6,"complex","139.36","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,7,"complex","139.51","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,8,"complex","138.79","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,9,"complex","138.42","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,8,10,"complex","139.61","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,8,1,"complex","86.60","22.00","34.64","10.58","7684.59","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",3,8,2,"complex","89.06","23.00","33.69","10.60","7684.46","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,8,3,"complex","87.08","23.00","34.45","10.67","7684.45","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,8,4,"complex","89.09","24.00","33.67","10.54","7684.62","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",3,8,5,"complex","89.82","23.00","33.40","10.39","7684.52","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,8,6,"complex","87.20","23.00","34.40","10.58","7684.65","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,8,7,"complex","90.09","23.00","33.30","10.21","7684.91","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,8,8,"complex","87.65","23.00","34.23","10.65","7684.58","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",3,8,9,"complex","88.99","24.00","33.71","10.67","7684.34","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",3,8,10,"complex","88.08","23.00","34.06","10.56","7684.42","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","warmup",3,9,1,"complex","291.34","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,2,"complex","260.25","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,3,"complex","292.26","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,4,"complex","258.62","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,5,"complex","268.81","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,6,"complex","263.76","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,7,"complex","262.88","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,8,"complex","261.85","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,9,"complex","259.13","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,9,10,"complex","259.72","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,9,1,"complex","217.08","186.00","13.82","27.16","7694.29","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 186, ""counters"": {}}"
"neo4j","optimized","steady",3,9,2,"complex","243.69","224.00","12.31","22.79","7694.38","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 224, ""counters"": {}}"
"neo4j","optimized","steady",3,9,3,"complex","209.04","178.00","14.35","22.90","7694.25","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",3,9,4,"complex","208.55","177.00","14.39","23.34","7694.17","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 177, ""counters"": {}}"
"neo4j","optimized","steady",3,9,5,"complex","215.56","180.00","13.92","22.51","7694.47","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 180, ""counters"": {}}"
"neo4j","optimized","steady",3,9,6,"complex","209.40","178.00","14.33","22.84","7694.41","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",3,9,7,"complex","209.07","178.00","14.35","22.83","7694.18","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",3,9,8,"complex","226.13","198.00","13.27","27.04","7694.26","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 198, ""counters"": {}}"
"neo4j","optimized","steady",3,9,9,"complex","209.35","178.00","14.33","22.90","7694.17","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 178, ""counters"": {}}"
"neo4j","optimized","steady",3,9,10,"complex","213.93","183.00","14.02","23.27","7694.51","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 20}, ""server_ms"": 183, ""counters"": {}}"
"neo4j","optimized","warmup",3,10,1,"very_complex","504.15","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,2,"very_complex","457.97","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,3,"very_complex","434.33","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,4,"very_complex","434.86","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,5,"very_complex","430.98","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,6,"very_complex","431.84","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,7,"very_complex","438.88","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,8,"very_complex","434.25","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,9,"very_complex","872.69","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,10,10,"very_complex","519.32","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,10,1,"very_complex","438.00","435.00","6.85","34.81","7694.38","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 435, ""counters"": {}}"
"neo4j","optimized","steady",3,10,2,"very_complex","380.03","376.00","7.89","25.53","7694.55","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 376, ""counters"": {}}"
"neo4j","optimized","steady",3,10,3,"very_complex","385.01","381.00","7.79","26.88","7694.22","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 381, ""counters"": {}}"
"neo4j","optimized","steady",3,10,4,"very_complex","607.51","591.00","4.94","52.53","7694.46","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 591, ""counters"": {}}"
"neo4j","optimized","steady",3,10,5,"very_complex","379.69","375.00","7.90","25.53","7694.51","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 375, ""counters"": {}}"
"neo4j","optimized","steady",3,10,6,"very_complex","400.25","396.00","7.50","26.10","7694.49","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 396, ""counters"": {}}"
"neo4j","optimized","steady",3,10,7,"very_complex","606.67","604.00","4.94","48.20","7694.41","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 604, ""counters"": {}}"
"neo4j","optimized","steady",3,10,8,"very_complex","393.53","390.00","7.62","28.78","7694.53","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 390, ""counters"": {}}"
"neo4j","optimized","steady",3,10,9,"very_complex","387.06","382.00","7.75","25.55","7694.65","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 382, ""counters"": {}}"
"neo4j","optimized","steady",3,10,10,"very_complex","576.77","563.00","5.20","47.11","7694.68","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 563, ""counters"": {}}"
"neo4j","optimized","warmup",3,11,1,"very_complex","1846.84","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,2,"very_complex","1717.64","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,3,"very_complex","1881.97","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,4,"very_complex","1624.18","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,5,"very_complex","1849.03","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,6,"very_complex","1977.75","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,7,"very_complex","1752.77","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,8,"very_complex","2062.54","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,9,"very_complex","1645.27","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,11,10,"very_complex","1643.00","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,11,1,"very_complex","1948.97","1865.00","1.54","30.62","7694.92","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1865, ""counters"": {}}"
"neo4j","optimized","steady",3,11,2,"very_complex","1768.38","1759.00","1.70","30.05","7694.75","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1759, ""counters"": {}}"
"neo4j","optimized","steady",3,11,3,"very_complex","1695.59","1687.00","1.77","31.18","7695.24","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1687, ""counters"": {}}"
"neo4j","optimized","steady",3,11,4,"very_complex","1801.53","1792.00","1.67","31.34","7694.88","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1792, ""counters"": {}}"
"neo4j","optimized","steady",3,11,5,"very_complex","1670.80","1664.00","1.80","24.95","7694.85","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1664, ""counters"": {}}"
"neo4j","optimized","steady",3,11,6,"very_complex","1709.74","1681.00","1.75","28.34","7695.33","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1681, ""counters"": {}}"
"neo4j","optimized","steady",3,11,7,"very_complex","1761.76","1753.00","1.70","31.10","7695.23","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1753, ""counters"": {}}"
"neo4j","optimized","steady",3,11,8,"very_complex","1594.93","1586.00","1.88","25.07","7694.90","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1586, ""counters"": {}}"
"neo4j","optimized","steady",3,11,9,"very_complex","1853.63","1848.00","1.62","34.12","7695.08","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1848, ""counters"": {}}"
"neo4j","optimized","steady",3,11,10,"very_complex","1601.57","1592.00","1.87","25.07","7695.20","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1592, ""counters"": {}}"
"neo4j","optimized","warmup",3,12,1,"very_complex","835.43","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,2,"very_complex","619.06","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,3,"very_complex","605.27","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,4,"very_complex","598.25","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,5,"very_complex","624.83","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,6,"very_complex","596.26","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,7,"very_complex","1007.51","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,8,"very_complex","691.20","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,9,"very_complex","626.37","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,12,10,"very_complex","733.14","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,12,1,"very_complex","551.49","548.00","5.44","26.16","7695.37","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 548, ""counters"": {}}"
"neo4j","optimized","steady",3,12,2,"very_complex","550.47","546.00","5.45","26.03","7695.54","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 546, ""counters"": {}}"
"neo4j","optimized","steady",3,12,3,"very_complex","779.13","775.00","3.85","41.06","7695.38","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 775, ""counters"": {}}"
"neo4j","optimized","steady",3,12,4,"very_complex","579.93","576.00","5.17","27.57","7695.13","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 576, ""counters"": {}}"
"neo4j","optimized","steady",3,12,5,"very_complex","568.28","564.00","5.28","25.35","7695.61","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 564, ""counters"": {}}"
"neo4j","optimized","steady",3,12,6,"very_complex","566.05","561.00","5.30","26.03","7695.23","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 561, ""counters"": {}}"
"neo4j","optimized","steady",3,12,7,"very_complex","785.52","781.00","3.82","45.70","7695.01","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 781, ""counters"": {}}"
"neo4j","optimized","steady",3,12,8,"very_complex","563.87","560.00","5.32","25.36","7695.36","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 560, ""counters"": {}}"
"neo4j","optimized","steady",3,12,9,"very_complex","574.16","569.00","5.22","25.35","7695.62","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 569, ""counters"": {}}"
"neo4j","optimized","steady",3,12,10,"very_complex","694.02","689.00","4.32","38.10","7695.40","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 689, ""counters"": {}}"
"neo4j","optimized","warmup",3,13,1,"create","85.75","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,2,"create","139.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,3,"create","84.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,4,"create","84.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,5,"create","83.67","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,6,"create","77.41","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,7,"create","84.08","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,8,"create","76.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,9,"create","84.08","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,13,10,"create","83.74","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,13,1,"create","32.95","21.00","91.04","26.87","7695.69","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134640}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,2,"create","33.78","21.00","88.82","25.65","7695.69","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134641}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,3,"create","32.72","21.00","91.69","26.35","7695.86","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134642}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,4,"create","26.39","21.00","113.67","32.87","7695.69","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134643}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,5,"create","32.86","21.00","91.29","25.85","7696.27","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134644}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,6,"create","33.12","22.00","90.58","26.78","7695.91","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134645}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,7,"create","33.50","21.00","89.56","26.31","7695.77","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134646}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,8,"create","27.62","22.00","108.60","41.62","7695.96","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134647}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,9,"create","26.15","21.00","114.74","34.92","7695.80","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134648}, ""server_ms"": 21, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",3,13,10,"create","34.36","26.00","87.30","28.34","7695.85","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134649}, ""server_ms"": 26, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",3,14,1,"create","95.02","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,2,"create","96.02","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,3,"create","95.45","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,4,"create","88.26","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,5,"create","96.14","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,6,"create","95.62","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,7,"create","95.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,8,"create","94.86","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,9,"create","95.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,14,10,"create","95.87","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,14,1,"create","45.00","33.00","66.67","25.61","7696.21","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200088}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,2,"create","46.58","40.00","64.41","27.64","7696.39","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200089}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,3,"create","37.89","33.00","79.17","31.13","7696.35","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200090}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,4,"create","45.07","34.00","66.56","26.11","7696.54","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200091}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,5,"create","45.17","33.00","66.42","25.53","7696.47","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200092}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,6,"create","44.57","33.00","67.31","26.81","7696.17","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200093}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,7,"create","39.60","33.00","75.76","29.50","7696.51","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200094}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,8,"create","44.62","33.00","67.23","25.77","7696.23","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200095}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,9,"create","44.63","33.00","67.22","25.60","7696.40","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200096}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",3,14,10,"create","44.67","33.00","67.17","26.01","7696.24","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200097}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",3,15,1,"create","117.79","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,2,"create","118.94","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,3,"create","117.59","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,4,"create","118.14","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,5,"create","117.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,6,"create","117.86","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,7,"create","117.33","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,8,"create","127.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,9,"create","117.62","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,15,10,"create","117.11","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,15,1,"create","66.96","56.00","44.80","27.20","7696.71","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150493}, ""server_ms"": 56, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,2,"create","66.80","55.00","44.91","25.65","7696.77","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150494}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,3,"create","60.40","55.00","49.67","28.72","7697.14","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150495}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,4,"create","67.93","57.00","44.16","25.93","7697.30","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150496}, ""server_ms"": 57, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,5,"create","59.44","55.00","50.47","29.09","7696.82","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150497}, ""server_ms"": 55, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,6,"create","68.03","56.00","44.10","25.60","7697.13","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150498}, ""server_ms"": 56, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,7,"create","66.91","56.00","44.83","27.00","7697.15","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150499}, ""server_ms"": 56, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,8,"create","65.60","56.00","45.73","28.14","7697.04","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150500}, ""server_ms"": 56, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,9,"create","67.06","56.00","44.73","25.44","7697.12","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150502}, ""server_ms"": 56, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",3,15,10,"create","68.26","62.00","43.95","26.89","7697.19","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150503}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",3,16,1,"create","452.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,2,"create","451.08","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,3,"create","456.40","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,4,"create","445.24","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,5,"create","450.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,6,"create","453.80","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,7,"create","457.08","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,8,"create","448.36","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,9,"create","459.87","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,16,10,"create","452.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,16,1,"create","406.89","388.00","7.37","25.27","7697.50","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049102}, ""server_ms"": 388, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,2,"create","399.90","390.00","7.50","25.78","7697.42","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049104}, ""server_ms"": 390, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,3,"create","397.96","386.00","7.54","25.08","7697.34","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049105}, ""server_ms"": 386, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,4,"create","396.94","385.00","7.56","25.44","7697.86","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049106}, ""server_ms"": 385, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,5,"create","401.46","389.00","7.47","25.11","7697.93","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049107}, ""server_ms"": 389, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,6,"create","397.77","388.00","7.54","25.23","7697.93","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049108}, ""server_ms"": 388, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,7,"create","399.63","388.00","7.51","25.07","7697.82","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049109}, ""server_ms"": 388, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,8,"create","397.51","387.00","7.55","25.13","7697.73","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049110}, ""server_ms"": 387, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,9,"create","454.90","388.00","6.59","24.46","7697.53","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049111}, ""server_ms"": 388, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",3,16,10,"create","445.97","443.00","6.73","24.58","7697.70","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049114}, ""server_ms"": 443, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",3,17,1,"update","559.77","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,2,"update","549.08","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,3,"update","474.21","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,4,"update","540.69","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,5,"update","483.20","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,6,"update","550.57","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,7,"update","489.98","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,8,"update","475.10","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,9,"update","477.07","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,17,10,"update","475.49","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,17,1,"update","436.51","434.00","6.87","25.18","7698.11","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 97}, ""server_ms"": 434, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,2,"update","450.81","418.00","6.65","24.55","7697.90","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 98}, ""server_ms"": 418, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,3,"update","432.84","419.00","6.93","25.02","7697.92","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 101}, ""server_ms"": 419, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,4,"update","431.14","428.00","6.96","27.24","7697.79","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 105}, ""server_ms"": 428, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,5,"update","441.85","423.00","6.79","24.71","7698.08","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 108}, ""server_ms"": 423, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,6,"update","432.23","430.00","6.94","25.45","7698.06","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 112}, ""server_ms"": 430, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,7,"update","435.10","432.00","6.89","25.00","7698.02","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 115}, ""server_ms"": 432, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,8,"update","428.59","415.00","7.00","24.99","7698.16","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 116}, ""server_ms"": 415, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,9,"update","436.68","433.00","6.87","25.24","7698.18","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 121}, ""server_ms"": 433, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,17,10,"update","432.83","420.00","6.93","25.03","7697.96","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 122}, ""server_ms"": 420, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,18,1,"update","73.10","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,2,"update","64.31","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,3,"update","63.91","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,4,"update","62.85","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,5,"update","63.03","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,6,"update","63.80","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,7,"update","62.77","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,8,"update","64.29","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,9,"update","62.67","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,18,10,"update","63.55","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,18,1,"update","14.25","12.00","210.57","63.53","7698.08","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,2,"update","12.66","10.00","236.93","47.36","7698.29","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,3,"update","12.57","10.00","238.75","43.33","7698.04","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,4,"update","12.36","10.00","242.64","45.52","7698.27","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,5,"update","13.34","10.00","224.87","41.81","7698.24","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,6,"update","12.47","10.00","240.62","44.04","7698.31","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,7,"update","13.48","10.00","222.52","41.84","7698.32","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,8,"update","12.51","10.00","239.74","43.87","7698.00","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,9,"update","13.31","10.00","225.39","41.29","7698.29","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,18,10,"update","12.37","10.00","242.52","43.81","7698.40","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 21, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,19,1,"update","124.76","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,2,"update","117.23","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,3,"update","124.33","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,4,"update","123.47","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,5,"update","116.98","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,6,"update","123.26","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,7,"update","124.50","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,8,"update","117.21","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,9,"update","121.58","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,19,10,"update","124.08","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,19,1,"update","73.92","70.00","40.59","25.24","7698.58","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 98}, ""server_ms"": 70, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,2,"update","65.07","63.00","46.11","28.01","7698.34","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 110}, ""server_ms"": 63, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,3,"update","72.91","69.00","41.14","25.02","7698.54","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 116}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,4,"update","74.05","69.00","40.52","24.30","7698.40","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 125}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,5,"update","72.00","60.00","41.67","24.83","7698.39","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 131}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,6,"update","72.44","60.00","41.41","25.13","7698.48","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 140}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,7,"update","64.67","59.00","46.39","27.75","7698.53","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 149}, ""server_ms"": 59, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,8,"update","72.31","69.00","41.49","25.10","7698.65","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 164}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,9,"update","72.65","68.00","41.29","24.98","7698.27","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 170}, ""server_ms"": 68, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,19,10,"update","73.39","60.00","40.88","25.60","7698.43","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 21, ""new_quantity"": 176}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,20,1,"update","65.82","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,2,"update","63.27","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,3,"update","63.43","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,4,"update","63.40","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,5,"update","55.60","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,6,"update","63.56","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,7,"update","64.52","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,8,"update","63.29","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,9,"update","63.13","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,20,10,"update","64.30","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,20,1,"update","13.03","9.00","230.17","24.86","7698.64","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,2,"update","12.88","9.00","232.97","25.20","7698.40","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,3,"update","6.70","3.00","448.05","47.34","7698.79","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,4,"update","12.78","9.00","234.75","24.73","7698.54","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,5,"update","12.99","0.00","230.87","34.70","7698.62","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,6,"update","6.86","2.00","437.06","53.17","7698.78","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 2, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,7,"update","13.45","9.00","222.99","30.61","7698.70","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,8,"update","12.84","0.00","233.61","27.81","7698.56","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,9,"update","13.14","0.00","228.24","24.71","7698.63","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",3,20,10,"update","12.81","9.00","234.25","24.13","7698.62","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",3,21,1,"delete","87.57","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,2,"delete","79.81","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,3,"delete","86.09","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,4,"delete","87.07","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,5,"delete","79.89","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,6,"delete","86.07","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,7,"delete","90.37","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,8,"delete","86.60","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,9,"delete","85.86","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,21,10,"delete","87.29","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,21,1,"delete","29.77","27.00","100.76","30.81","7698.83","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 31}, ""server_ms"": 27, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,2,"delete","37.40","34.00","80.22","25.61","7698.84","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 32}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,3,"delete","28.88","24.00","103.87","32.94","7698.73","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 33}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,4,"delete","35.26","33.00","85.07","25.74","7698.81","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 34}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,5,"delete","29.93","28.00","100.23","30.72","7698.81","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 35}, ""server_ms"": 28, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,6,"delete","38.97","37.00","76.99","25.70","7698.98","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 36}, ""server_ms"": 37, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,7,"delete","37.32","25.00","80.39","24.47","7698.83","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 37}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,21,8,"delete","36.73","35.00","81.68","27.31","7698.98","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 38}, ""server_ms"": 35, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,9,"delete","36.21","34.00","82.85","25.01","7699.04","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 39}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",3,21,10,"delete","29.75","27.00","100.83","31.55","7698.62","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 40}, ""server_ms"": 27, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","warmup",3,22,1,"delete","72.25","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,2,"delete","72.58","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,3,"delete","64.47","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,4,"delete","71.37","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,5,"delete","72.67","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,6,"delete","71.84","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,7,"delete","72.37","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,8,"delete","74.11","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,9,"delete","72.93","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,22,10,"delete","66.46","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,22,1,"delete","21.89","20.00","137.04","26.50","7698.74","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 31}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",3,22,2,"delete","22.93","21.00","130.84","24.11","7698.85","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 32}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",3,22,3,"delete","15.95","14.00","188.12","35.71","7698.99","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 33}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,22,4,"delete","23.04","19.00","130.19","24.37","7698.81","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 34}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",3,22,5,"delete","21.21","10.00","141.45","26.42","7699.17","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 35}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,6,"delete","20.32","19.00","147.62","55.60","7699.18","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 36}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",3,22,7,"delete","15.80","14.00","189.90","35.52","7699.00","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 37}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",3,22,8,"delete","21.92","20.00","136.85","25.65","7699.00","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 38}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",3,22,9,"delete","15.43","11.00","194.41","39.13","7698.88","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 39}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,22,10,"delete","23.17","21.00","129.47","25.18","7699.35","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 40}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","warmup",3,23,1,"delete","133.65","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,2,"delete","131.34","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,3,"delete","141.87","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,4,"delete","123.70","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,5,"delete","131.17","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,6,"delete","129.80","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,7,"delete","128.56","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,8,"delete","125.14","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,9,"delete","133.05","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,23,10,"delete","124.40","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,23,1,"delete","81.41","69.00","36.85","25.08","7699.17","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 31}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,2,"delete","81.05","79.00","37.01","25.30","7699.36","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 32}, ""server_ms"": 79, ""counters"": {}}"
"neo4j","optimized","steady",3,23,3,"delete","81.05","69.00","37.01","25.55","7699.22","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 33}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,4,"delete","74.87","71.00","40.07","27.29","7699.25","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 34}, ""server_ms"": 71, ""counters"": {}}"
"neo4j","optimized","steady",3,23,5,"delete","82.40","69.00","36.41","25.98","7699.27","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 35}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,6,"delete","81.78","79.00","36.68","26.11","7699.30","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 36}, ""server_ms"": 79, ""counters"": {}}"
"neo4j","optimized","steady",3,23,7,"delete","81.33","69.00","36.89","25.93","7699.54","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 37}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,8,"delete","82.34","70.00","36.43","25.83","7699.76","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 38}, ""server_ms"": 70, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,23,9,"delete","73.73","71.00","40.69","27.61","7699.30","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 39}, ""server_ms"": 71, ""counters"": {}}"
"neo4j","optimized","steady",3,23,10,"delete","84.78","83.00","35.39","26.00","7699.11","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 40}, ""server_ms"": 83, ""counters"": {}}"
"neo4j","optimized","warmup",3,24,1,"delete","314.26","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,2,"delete","290.91","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,3,"delete","303.67","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,4,"delete","295.17","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,5,"delete","287.67","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,6,"delete","294.34","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,7,"delete","296.96","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,8,"delete","314.43","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,9,"delete","320.49","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",3,24,10,"delete","294.84","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",3,24,1,"delete","243.98","232.00","12.30","25.06","7699.28","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 31}, ""server_ms"": 232, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,2,"delete","266.13","263.00","11.27","25.46","7699.67","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 32}, ""server_ms"": 263, ""counters"": {}}"
"neo4j","optimized","steady",3,24,3,"delete","243.49","232.00","12.32","25.28","7699.58","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 33}, ""server_ms"": 232, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,4,"delete","243.01","241.00","12.35","25.66","7699.61","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 34}, ""server_ms"": 241, ""counters"": {}}"
"neo4j","optimized","steady",3,24,5,"delete","247.89","234.00","12.10","25.54","7699.24","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 35}, ""server_ms"": 234, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,6,"delete","265.17","263.00","11.31","25.26","7699.55","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 36}, ""server_ms"": 263, ""counters"": {}}"
"neo4j","optimized","steady",3,24,7,"delete","258.09","255.00","11.62","25.45","7699.46","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 37}, ""server_ms"": 255, ""counters"": {}}"
"neo4j","optimized","steady",3,24,8,"delete","243.07","232.00","12.34","25.21","7699.54","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 38}, ""server_ms"": 232, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",3,24,9,"delete","252.58","250.00","11.88","28.40","7699.54","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 39}, ""server_ms"": 250, ""counters"": {}}"
"neo4j","optimized","steady",3,24,10,"delete","266.32","228.00","11.26","24.81","7699.69","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 40}, ""server_ms"": 228, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",5,1,1,"simple","5410.86","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,2,"simple","5389.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,3,"simple","5419.74","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,4,"simple","5348.81","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,5,"simple","5359.21","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,6,"simple","5398.74","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,7,"simple","5356.06","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,8,"simple","5368.80","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,9,"simple","5407.18","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,1,10,"simple","5376.37","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,1,1,"simple","5364.02","480.00","0.93","3.93","7716.14","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 480, ""counters"": {}}"
"neo4j","optimized","steady",5,1,2,"simple","5335.35","432.00","0.94","3.84","7715.92","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 432, ""counters"": {}}"
"neo4j","optimized","steady",5,1,3,"simple","5385.12","523.00","0.93","4.17","7716.33","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 523, ""counters"": {}}"
"neo4j","optimized","steady",5,1,4,"simple","5369.69","466.00","0.93","3.85","7716.27","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 466, ""counters"": {}}"
"neo4j","optimized","steady",5,1,5,"simple","5320.39","428.00","0.94","4.10","7716.17","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 428, ""counters"": {}}"
"neo4j","optimized","steady",5,1,6,"simple","5302.97","450.00","0.94","4.08","7716.29","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 450, ""counters"": {}}"
"neo4j","optimized","steady",5,1,7,"simple","5279.54","433.00","0.95","3.88","7716.33","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 433, ""counters"": {}}"
"neo4j","optimized","steady",5,1,8,"simple","5316.53","450.00","0.94","3.88","7716.30","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 450, ""counters"": {}}"
"neo4j","optimized","steady",5,1,9,"simple","5358.14","437.00","0.93","3.73","7716.23","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 437, ""counters"": {}}"
"neo4j","optimized","steady",5,1,10,"simple","5363.27","495.00","0.93","3.87","7716.20","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 495, ""counters"": {}}"
"neo4j","optimized","warmup",5,2,1,"simple","90.33","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,2,"simple","89.17","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,3,"simple","88.25","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,4,"simple","88.74","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,5,"simple","92.38","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,6,"simple","89.28","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,7,"simple","90.94","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,8,"simple","88.38","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,9,"simple","88.21","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,2,10,"simple","88.26","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,2,1,"simple","37.25","1.00","134.24","9.61","7716.44","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,2,"simple","36.62","0.00","136.52","9.38","7716.39","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,3,"simple","37.17","0.00","134.52","9.29","7716.62","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,4,"simple","36.75","0.00","136.04","9.30","7716.40","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,5,"simple","37.18","0.00","134.48","9.38","7716.51","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,6,"simple","37.28","0.00","134.10","10.12","7716.18","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,7,"simple","37.52","1.00","133.26","9.51","7716.42","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,8,"simple","37.10","1.00","134.76","9.08","7716.44","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",5,2,9,"simple","37.41","0.00","133.67","9.84","7716.39","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",5,2,10,"simple","37.73","0.00","132.53","9.23","7716.33","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",5,3,1,"simple","209.99","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,2,"simple","207.53","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,3,"simple","205.38","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,4,"simple","203.75","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,5,"simple","203.91","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,6,"simple","204.61","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,7,"simple","205.01","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,8,"simple","211.58","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,9,"simple","204.88","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,3,10,"simple","209.60","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,3,1,"simple","155.00","28.00","32.26","10.17","7716.19","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Mohauptweg 59"", ""city"": ""Ebern"", ""zip"": ""73770"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",5,3,2,"simple","156.50","27.00","31.95","10.00","7716.54","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Mohauptweg 59"", ""city"": ""Ebern"", ""zip"": ""73770"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,3,3,"simple","157.42","27.00","31.76","10.79","7716.68","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Mohauptweg 59"", ""city"": ""Ebern"", ""zip"": ""73770"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,3,4,"simple","155.11","27.00","32.23","9.70","7716.37","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Mohauptweg 59"", ""city"": ""Ebern"", ""zip"": ""73770"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,3,5,"simple","156.48","30.00","31.95","9.85","7716.54","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Mohauptweg 59"", ""city"": ""Ebern"", ""zip"": ""73770"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","steady",5,3,6,"simple","155.12","26.00","32.23","10.08","7716.29","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Mohauptweg 59"", ""city"": ""Ebern"", ""zip"": ""73770"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 26, ""counters"": {}}"
"neo4j","optimized","steady",5,3,7,"simple","154.66","32.00","32.33","10.10","7716.44","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Mohauptweg 59"", ""city"": ""Ebern"", ""zip"": ""73770"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",5,3,8,"simple","169.90","39.00","29.43","16.57","7716.22","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Mohauptweg 59"", ""city"": ""Ebern"", ""zip"": ""73770"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 39, ""counters"": {}}"
"neo4j","optimized","steady",5,3,9,"simple","163.99","30.00","30.49","9.57","7716.46","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Mohauptweg 59"", ""city"": ""Ebern"", ""zip"": ""73770"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","steady",5,3,10,"simple","153.96","27.00","32.48","9.80","7716.64","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 41, ""user_id"": 29, ""street"": ""Mohauptweg 59"", ""city"": ""Ebern"", ""zip"": ""73770"", ""country"": ""Deutschland"", ""is_primary"": false}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","warmup",5,4,1,"medium","1040.18","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,2,"medium","1036.02","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,3,"medium","2130.70","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,4,"medium","1402.06","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,5,"medium","1385.96","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,6,"medium","1360.52","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,7,"medium","1384.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,8,"medium","1383.20","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,9,"medium","1367.59","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,4,10,"medium","1393.37","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,4,1,"medium","1333.16","851.00","3.75","43.21","7758.47","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 851, ""counters"": {}}"
"neo4j","optimized","steady",5,4,2,"medium","1310.50","865.00","3.82","44.22","7758.58","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 865, ""counters"": {}}"
"neo4j","optimized","steady",5,4,3,"medium","1321.65","820.00","3.78","43.87","7758.72","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 820, ""counters"": {}}"
"neo4j","optimized","steady",5,4,4,"medium","1319.14","854.00","3.79","43.79","7758.76","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 854, ""counters"": {}}"
"neo4j","optimized","steady",5,4,5,"medium","1343.94","849.00","3.72","43.71","7759.17","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 849, ""counters"": {}}"
"neo4j","optimized","steady",5,4,6,"medium","1325.75","843.00","3.77","43.75","7759.08","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 843, ""counters"": {}}"
"neo4j","optimized","steady",5,4,7,"medium","1333.19","839.00","3.75","43.29","7759.70","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 839, ""counters"": {}}"
"neo4j","optimized","steady",5,4,8,"medium","1336.08","829.00","3.74","43.56","7759.29","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 829, ""counters"": {}}"
"neo4j","optimized","steady",5,4,9,"medium","1386.52","890.00","3.61","43.28","7759.77","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 890, ""counters"": {}}"
"neo4j","optimized","steady",5,4,10,"medium","1336.70","860.00","3.74","43.38","7760.16","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 124, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 860, ""counters"": {}}"
"neo4j","optimized","warmup",5,5,1,"medium","153.96","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,2,"medium","193.89","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,3,"medium","167.63","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,4,"medium","151.57","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,5,"medium","179.21","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,6,"medium","169.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,7,"medium","149.38","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,8,"medium","175.08","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,9,"medium","159.75","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,5,10,"medium","165.53","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,5,1,"medium","109.38","107.00","45.71","41.81","7760.08","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 107, ""counters"": {}}"
"neo4j","optimized","steady",5,5,2,"medium","116.85","100.00","42.79","43.64","7760.19","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 100, ""counters"": {}}"
"neo4j","optimized","steady",5,5,3,"medium","116.80","108.00","42.81","48.03","7760.45","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 108, ""counters"": {}}"
"neo4j","optimized","steady",5,5,4,"medium","109.76","108.00","45.55","41.71","7760.52","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 108, ""counters"": {}}"
"neo4j","optimized","steady",5,5,5,"medium","120.77","97.00","41.40","38.95","7760.71","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 97, ""counters"": {}}"
"neo4j","optimized","steady",5,5,6,"medium","115.27","97.00","43.37","41.96","7760.72","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 97, ""counters"": {}}"
"neo4j","optimized","steady",5,5,7,"medium","116.63","107.00","42.87","40.45","7760.46","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 107, ""counters"": {}}"
"neo4j","optimized","steady",5,5,8,"medium","105.80","102.00","47.26","42.18","7760.48","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 102, ""counters"": {}}"
"neo4j","optimized","steady",5,5,9,"medium","115.14","97.00","43.42","38.79","7760.24","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 97, ""counters"": {}}"
"neo4j","optimized","steady",5,5,10,"medium","108.20","102.00","46.21","41.97","7760.64","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 102, ""counters"": {}}"
"neo4j","optimized","warmup",5,6,1,"medium","108.42","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,2,"medium","112.95","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,3,"medium","107.74","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,4,"medium","107.17","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,5,"medium","106.54","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,6,"medium","106.65","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,7,"medium","107.50","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,8,"medium","106.94","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,9,"medium","108.15","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,6,10,"medium","107.02","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,6,1,"medium","56.90","23.00","87.88","22.27","7760.41","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",5,6,2,"medium","56.72","23.00","88.15","22.41","7760.60","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",5,6,3,"medium","55.87","22.00","89.49","22.02","7760.28","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",5,6,4,"medium","56.42","23.00","88.62","22.07","7760.44","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",5,6,5,"medium","57.07","22.00","87.61","21.83","7760.39","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",5,6,6,"medium","56.73","22.00","88.14","21.55","7760.10","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",5,6,7,"medium","58.14","22.00","86.00","21.58","7760.50","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",5,6,8,"medium","56.82","22.00","87.99","21.51","7760.15","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",5,6,9,"medium","56.56","23.00","88.40","21.73","7760.26","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",5,6,10,"medium","57.39","24.00","87.12","23.10","7760.19","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","warmup",5,7,1,"complex","672.26","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,2,"complex","664.32","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,3,"complex","654.95","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,4,"complex","662.93","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,5,"complex","685.58","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,6,"complex","660.68","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,7,"complex","672.94","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,8,"complex","659.90","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,9,"complex","664.05","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,7,10,"complex","691.86","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,7,1,"complex","613.87","459.00","8.14","31.77","7760.48","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 459, ""counters"": {}}"
"neo4j","optimized","steady",5,7,2,"complex","611.68","459.00","8.17","32.92","7760.49","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 459, ""counters"": {}}"
"neo4j","optimized","steady",5,7,3,"complex","628.44","460.00","7.96","31.17","7760.37","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 460, ""counters"": {}}"
"neo4j","optimized","steady",5,7,4,"complex","612.43","485.00","8.16","32.52","7760.49","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 485, ""counters"": {}}"
"neo4j","optimized","steady",5,7,5,"complex","634.18","486.00","7.88","33.25","7760.36","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 486, ""counters"": {}}"
"neo4j","optimized","steady",5,7,6,"complex","610.31","467.00","8.19","32.07","7760.53","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 467, ""counters"": {}}"
"neo4j","optimized","steady",5,7,7,"complex","618.57","488.00","8.08","33.43","7760.24","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 488, ""counters"": {}}"
"neo4j","optimized","steady",5,7,8,"complex","621.80","460.00","8.04","31.71","7760.10","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 460, ""counters"": {}}"
"neo4j","optimized","steady",5,7,9,"complex","621.77","457.00","8.04","31.15","7760.21","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 457, ""counters"": {}}"
"neo4j","optimized","steady",5,7,10,"complex","612.21","451.00","8.17","31.32","7760.30","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 451, ""counters"": {}}"
"neo4j","optimized","warmup",5,8,1,"complex","189.54","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,2,"complex","195.19","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,3,"complex","186.12","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,4,"complex","186.90","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,5,"complex","187.42","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,6,"complex","186.76","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,7,"complex","186.43","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,8,"complex","184.80","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,9,"complex","186.79","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,8,10,"complex","188.89","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,8,1,"complex","135.58","25.00","36.88","10.42","7760.48","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",5,8,2,"complex","138.22","24.00","36.17","9.97","7760.35","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",5,8,3,"complex","139.43","27.00","35.86","11.61","7760.33","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,8,4,"complex","136.56","27.00","36.61","23.48","7767.74","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,8,5,"complex","138.72","25.00","36.04","10.23","7775.16","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",5,8,6,"complex","135.66","25.00","36.86","11.07","7775.00","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",5,8,7,"complex","135.95","24.00","36.78","10.46","7775.12","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",5,8,8,"complex","138.15","27.00","36.19","11.52","7758.64","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",5,8,9,"complex","136.78","24.00","36.55","10.49","7758.74","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",5,8,10,"complex","135.16","24.00","36.99","10.33","7758.97","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","warmup",5,9,1,"complex","286.39","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,2,"complex","314.83","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,3,"complex","299.37","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,4,"complex","312.80","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,5,"complex","309.97","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,6,"complex","300.83","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,7,"complex","286.37","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,8,"complex","295.43","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,9,"complex","296.65","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,9,10,"complex","295.57","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,9,1,"complex","234.29","187.00","21.34","37.37","7758.66","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 187, ""counters"": {}}"
"neo4j","optimized","steady",5,9,2,"complex","241.63","190.00","20.69","34.58","7759.04","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 190, ""counters"": {}}"
"neo4j","optimized","steady",5,9,3,"complex","263.78","222.00","18.96","35.47","7758.78","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 222, ""counters"": {}}"
"neo4j","optimized","steady",5,9,4,"complex","255.56","200.00","19.56","37.56","7759.29","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 200, ""counters"": {}}"
"neo4j","optimized","steady",5,9,5,"complex","264.27","224.00","18.92","35.45","7759.58","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 224, ""counters"": {}}"
"neo4j","optimized","steady",5,9,6,"complex","248.03","199.00","20.16","34.86","7759.58","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 199, ""counters"": {}}"
"neo4j","optimized","steady",5,9,7,"complex","236.30","184.00","21.16","34.57","7759.73","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 184, ""counters"": {}}"
"neo4j","optimized","steady",5,9,8,"complex","246.73","198.00","20.26","38.20","7759.68","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 198, ""counters"": {}}"
"neo4j","optimized","steady",5,9,9,"complex","240.38","183.00","20.80","35.73","7759.60","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 183, ""counters"": {}}"
"neo4j","optimized","steady",5,9,10,"complex","236.07","186.00","21.18","34.62","7759.50","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 80}, ""server_ms"": 186, ""counters"": {}}"
"neo4j","optimized","warmup",5,10,1,"very_complex","457.48","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,2,"very_complex","450.08","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,3,"very_complex","771.21","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,4,"very_complex","458.40","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,5,"very_complex","455.51","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,6,"very_complex","785.85","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,7,"very_complex","482.84","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,8,"very_complex","452.25","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,9,"very_complex","722.88","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,10,10,"very_complex","485.44","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,10,1,"very_complex","405.80","401.00","12.32","44.14","7760.01","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 401, ""counters"": {}}"
"neo4j","optimized","steady",5,10,2,"very_complex","664.69","653.00","7.52","65.30","7760.08","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 653, ""counters"": {}}"
"neo4j","optimized","steady",5,10,3,"very_complex","407.33","402.00","12.28","43.30","7760.38","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 402, ""counters"": {}}"
"neo4j","optimized","steady",5,10,4,"very_complex","596.13","588.00","8.39","59.97","7760.38","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 588, ""counters"": {}}"
"neo4j","optimized","steady",5,10,5,"very_complex","405.75","401.00","12.32","46.63","7763.03","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 401, ""counters"": {}}"
"neo4j","optimized","steady",5,10,6,"very_complex","620.38","613.00","8.06","62.00","7762.47","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 613, ""counters"": {}}"
"neo4j","optimized","steady",5,10,7,"very_complex","403.85","397.00","12.38","42.66","7759.56","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 397, ""counters"": {}}"
"neo4j","optimized","steady",5,10,8,"very_complex","624.90","612.00","8.00","60.60","7759.52","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 612, ""counters"": {}}"
"neo4j","optimized","steady",5,10,9,"very_complex","404.49","400.00","12.36","41.96","7759.39","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 400, ""counters"": {}}"
"neo4j","optimized","steady",5,10,10,"very_complex","684.85","670.00","7.30","66.37","7759.37","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 670, ""counters"": {}}"
"neo4j","optimized","warmup",5,11,1,"very_complex","1927.08","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,2,"very_complex","1944.16","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,3,"very_complex","2082.70","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,4,"very_complex","2025.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,5,"very_complex","2152.49","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,6,"very_complex","1944.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,7,"very_complex","2050.51","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,8,"very_complex","1838.31","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,9,"very_complex","2065.64","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,11,10,"very_complex","2086.17","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,11,1,"very_complex","2125.19","2005.00","2.35","47.98","7759.70","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2005, ""counters"": {}}"
"neo4j","optimized","steady",5,11,2,"very_complex","2051.72","1958.00","2.44","45.34","7759.77","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1958, ""counters"": {}}"
"neo4j","optimized","steady",5,11,3,"very_complex","1853.18","1735.00","2.70","42.33","7760.09","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1735, ""counters"": {}}"
"neo4j","optimized","steady",5,11,4,"very_complex","1997.64","1918.00","2.50","45.86","7760.07","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1918, ""counters"": {}}"
"neo4j","optimized","steady",5,11,5,"very_complex","2091.22","2085.00","2.39","47.01","7760.08","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2085, ""counters"": {}}"
"neo4j","optimized","steady",5,11,6,"very_complex","2034.46","2019.00","2.46","50.08","7760.45","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2019, ""counters"": {}}"
"neo4j","optimized","steady",5,11,7,"very_complex","1955.91","1919.00","2.56","46.67","7760.06","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1919, ""counters"": {}}"
"neo4j","optimized","steady",5,11,8,"very_complex","1717.51","1668.00","2.91","43.15","7760.20","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1668, ""counters"": {}}"
"neo4j","optimized","steady",5,11,9,"very_complex","2007.81","1927.00","2.49","44.34","7760.24","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1927, ""counters"": {}}"
"neo4j","optimized","steady",5,11,10,"very_complex","1912.99","1899.00","2.61","46.06","7760.11","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 1899, ""counters"": {}}"
"neo4j","optimized","warmup",5,12,1,"very_complex","871.61","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,2,"very_complex","636.06","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,3,"very_complex","840.15","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,4,"very_complex","883.08","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,5,"very_complex","643.73","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,6,"very_complex","900.86","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,7,"very_complex","721.44","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,8,"very_complex","630.66","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,9,"very_complex","836.58","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,12,10,"very_complex","624.20","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,12,1,"very_complex","808.20","802.00","6.19","60.31","7760.63","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 802, ""counters"": {}}"
"neo4j","optimized","steady",5,12,2,"very_complex","600.75","595.00","8.32","41.92","7760.22","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 595, ""counters"": {}}"
"neo4j","optimized","steady",5,12,3,"very_complex","806.80","800.00","6.20","55.75","7760.51","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 800, ""counters"": {}}"
"neo4j","optimized","steady",5,12,4,"very_complex","626.52","620.00","7.98","47.14","7760.67","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 620, ""counters"": {}}"
"neo4j","optimized","steady",5,12,5,"very_complex","620.93","614.00","8.05","42.02","7760.61","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 614, ""counters"": {}}"
"neo4j","optimized","steady",5,12,6,"very_complex","926.09","920.00","5.40","60.74","7760.49","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 920, ""counters"": {}}"
"neo4j","optimized","steady",5,12,7,"very_complex","620.14","614.00","8.06","41.82","7760.42","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 614, ""counters"": {}}"
"neo4j","optimized","steady",5,12,8,"very_complex","920.15","914.00","5.43","56.50","7760.49","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 914, ""counters"": {}}"
"neo4j","optimized","steady",5,12,9,"very_complex","662.66","655.00","7.55","43.90","7760.77","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 655, ""counters"": {}}"
"neo4j","optimized","steady",5,12,10,"very_complex","809.81","801.00","6.17","42.76","7760.67","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 801, ""counters"": {}}"
"neo4j","optimized","warmup",5,13,1,"create","93.93","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,2,"create","79.14","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,3,"create","85.08","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,4,"create","85.55","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,5,"create","248.40","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,6,"create","139.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,7,"create","84.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,8,"create","76.73","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,9,"create","84.84","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,13,10,"create","82.47","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,13,1,"create","34.08","22.00","146.70","39.13","7760.94","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134662}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,2,"create","28.77","24.00","173.79","47.46","7760.94","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134663}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,3,"create","35.15","24.00","142.24","37.20","7760.69","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134664}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,4,"create","34.40","23.00","145.36","39.07","7760.80","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134665}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,5,"create","33.51","23.00","149.20","40.05","7760.58","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134666}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,6,"create","33.12","22.00","150.97","41.65","7760.73","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134667}, ""server_ms"": 22, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,7,"create","33.58","23.00","148.91","39.37","7760.69","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134668}, ""server_ms"": 23, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,8,"create","29.16","25.00","171.46","45.24","7760.52","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134670}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,9,"create","32.07","20.00","155.89","41.26","7760.73","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134671}, ""server_ms"": 20, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",5,13,10,"create","33.56","25.00","148.97","41.18","7760.78","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134672}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",5,14,1,"create","92.17","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,2,"create","92.11","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,3,"create","91.74","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,4,"create","96.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,5,"create","97.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,6,"create","93.40","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,7,"create","97.29","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,8,"create","96.42","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,9,"create","96.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,14,10,"create","96.06","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,14,1,"create","46.84","40.00","106.75","39.56","7760.59","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200112}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,2,"create","46.21","40.00","108.19","41.38","7760.79","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200113}, ""server_ms"": 40, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,3,"create","46.49","35.00","107.54","41.19","7760.96","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200114}, ""server_ms"": 35, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,4,"create","46.35","41.00","107.87","42.83","7760.73","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200115}, ""server_ms"": 41, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,5,"create","45.66","34.00","109.50","39.49","7760.62","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200116}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,6,"create","46.38","35.00","107.82","40.31","7760.75","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200117}, ""server_ms"": 35, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,7,"create","46.38","39.00","107.81","40.10","7760.77","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200118}, ""server_ms"": 39, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,8,"create","47.30","35.00","105.71","39.68","7760.92","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200119}, ""server_ms"": 35, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,9,"create","55.56","49.00","89.99","68.57","7760.63","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200120}, ""server_ms"": 49, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",5,14,10,"create","44.45","34.00","112.50","42.13","7760.90","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200123}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",5,15,1,"create","122.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,2,"create","117.29","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,3,"create","112.89","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,4,"create","120.22","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,5,"create","118.01","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,6,"create","111.68","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,7,"create","116.48","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,8,"create","117.30","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,9,"create","111.22","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,15,10,"create","119.05","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,15,1,"create","69.65","60.00","71.79","40.08","7762.37","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150515}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,2,"create","67.09","57.00","74.52","40.61","7762.04","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150516}, ""server_ms"": 57, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,3,"create","68.89","57.00","72.58","39.65","7762.13","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150517}, ""server_ms"": 57, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,4,"create","69.59","60.00","71.85","39.90","7762.23","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150518}, ""server_ms"": 60, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,5,"create","61.03","57.00","81.93","43.57","7762.19","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150520}, ""server_ms"": 57, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,6,"create","64.55","56.00","77.46","42.24","7762.25","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150522}, ""server_ms"": 56, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,7,"create","70.37","58.00","71.06","38.97","7762.42","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150523}, ""server_ms"": 58, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,8,"create","69.79","59.00","71.65","40.30","7762.18","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150524}, ""server_ms"": 59, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,9,"create","70.12","58.00","71.30","39.43","7762.45","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150525}, ""server_ms"": 58, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",5,15,10,"create","69.97","62.00","71.46","40.13","7762.23","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150526}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",5,16,1,"create","471.65","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,2,"create","484.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,3,"create","476.27","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,4,"create","488.19","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,5,"create","494.28","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,6,"create","455.86","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,7,"create","485.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,8,"create","485.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,9,"create","471.68","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,16,10,"create","464.72","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,16,1,"create","436.93","429.00","11.44","40.39","7764.73","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049149}, ""server_ms"": 429, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,2,"create","413.30","401.00","12.10","41.42","7764.46","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049151}, ""server_ms"": 401, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,3,"create","444.73","408.00","11.24","41.13","7764.41","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049152}, ""server_ms"": 408, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,4,"create","427.82","425.00","11.69","40.96","7764.88","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049157}, ""server_ms"": 425, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,5,"create","445.72","398.00","11.22","39.75","7764.37","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049158}, ""server_ms"": 398, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,6,"create","422.26","410.00","11.84","43.02","7764.48","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049160}, ""server_ms"": 410, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,7,"create","423.56","407.00","11.80","41.50","7764.62","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049161}, ""server_ms"": 407, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,8,"create","439.90","437.00","11.37","41.00","7764.61","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049168}, ""server_ms"": 437, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,9,"create","421.11","410.00","11.87","41.53","7764.51","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049169}, ""server_ms"": 410, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",5,16,10,"create","427.04","423.00","11.71","40.29","7764.67","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049174}, ""server_ms"": 423, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",5,17,1,"update","500.90","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,2,"update","556.90","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,3,"update","500.77","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,4,"update","575.76","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,5,"update","576.52","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,6,"update","563.62","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,7,"update","511.36","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,8,"update","493.54","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,9,"update","572.53","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,17,10,"update","584.93","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,17,1,"update","520.20","459.00","9.61","40.32","7764.67","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 177}, ""server_ms"": 459, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,2,"update","475.67","433.00","10.51","40.94","7764.39","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 180}, ""server_ms"": 433, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,3,"update","519.33","488.00","9.63","37.94","7764.20","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 188}, ""server_ms"": 488, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,4,"update","463.14","428.00","10.80","41.07","7764.65","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 190}, ""server_ms"": 428, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,5,"update","477.74","474.00","10.47","40.11","7764.44","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 199}, ""server_ms"": 474, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,6,"update","521.85","429.00","9.58","37.61","7764.93","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 200}, ""server_ms"": 429, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,7,"update","513.18","436.00","9.74","37.91","7764.85","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 206}, ""server_ms"": 436, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,8,"update","463.09","449.00","10.80","40.76","7764.76","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 213}, ""server_ms"": 449, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,9,"update","541.00","438.00","9.24","37.10","7764.59","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 216}, ""server_ms"": 438, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,17,10,"update","506.97","433.00","9.86","38.79","7764.76","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 220}, ""server_ms"": 433, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,18,1,"update","73.61","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,2,"update","64.29","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,3,"update","64.38","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,4,"update","64.90","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,5,"update","64.65","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,6,"update","67.63","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,7,"update","64.13","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,8,"update","64.24","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,9,"update","64.88","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,18,10,"update","64.70","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,18,1,"update","14.02","12.00","356.52","55.47","7764.76","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,2,"update","13.85","11.00","361.03","54.26","7764.65","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,3,"update","14.06","12.00","355.61","54.91","7764.77","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,4,"update","14.61","12.00","342.28","54.32","7764.61","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,5,"update","12.84","11.00","389.53","57.15","7764.61","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,6,"update","13.63","11.00","366.74","54.92","7764.62","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,7,"update","12.87","10.00","388.41","56.75","7764.77","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,8,"update","14.20","11.00","352.16","52.77","7764.75","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,9,"update","13.13","11.00","380.67","56.36","7764.68","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,18,10,"update","14.47","12.00","345.48","54.77","7764.90","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 41, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,19,1,"update","129.38","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,2,"update","128.56","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,3,"update","129.12","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,4,"update","126.47","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,5,"update","128.98","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,6,"update","126.50","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,7,"update","123.21","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,8,"update","125.99","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,9,"update","127.41","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,19,10,"update","127.00","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,19,1,"update","77.04","62.00","64.90","38.41","7764.75","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 155}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,2,"update","79.40","74.00","62.97","39.31","7764.66","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 176}, ""server_ms"": 74, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,3,"update","75.83","72.00","65.94","39.60","7764.60","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 194}, ""server_ms"": 72, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,4,"update","78.62","76.00","63.60","38.25","7764.48","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 212}, ""server_ms"": 76, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,5,"update","72.31","65.00","69.15","41.97","7764.91","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 218}, ""server_ms"": 65, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,6,"update","78.84","62.00","63.42","38.62","7764.63","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 230}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,7,"update","74.43","69.00","67.18","39.55","7764.91","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 251}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,8,"update","73.94","62.00","67.62","41.22","7764.74","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 260}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,9,"update","77.77","74.00","64.29","39.66","7764.55","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 284}, ""server_ms"": 74, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,19,10,"update","76.93","74.00","64.99","38.60","7764.62","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 41, ""new_quantity"": 302}, ""server_ms"": 74, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,20,1,"update","65.98","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,2,"update","58.71","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,3,"update","66.69","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,4,"update","65.74","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,5,"update","66.25","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,6,"update","58.91","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,7,"update","66.79","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,8,"update","66.50","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,9,"update","62.10","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,20,10,"update","66.20","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,20,1,"update","16.52","0.00","302.62","22.36","7765.04","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,2,"update","15.55","9.00","321.52","20.90","7765.19","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,3,"update","15.96","13.00","313.33","20.60","7764.87","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 13, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,4,"update","9.01","0.00","555.17","35.21","7764.66","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,5,"update","15.58","9.00","320.94","20.89","7764.93","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,6,"update","16.25","9.00","307.71","20.81","7764.82","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,7,"update","15.54","9.00","321.73","20.93","7764.88","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,8,"update","15.34","0.00","325.99","20.97","7765.26","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,9,"update","8.55","5.00","584.86","56.15","7764.84","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 5, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",5,20,10,"update","16.66","0.00","300.20","19.27","7764.92","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",5,21,1,"delete","89.15","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,2,"delete","87.81","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,3,"delete","87.52","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,4,"delete","87.96","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,5,"delete","86.80","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,6,"delete","87.89","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,7,"delete","82.73","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,8,"delete","85.89","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,9,"delete","88.04","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,21,10,"delete","80.97","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,21,1,"delete","37.87","36.00","132.04","37.22","7764.86","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 51}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,2,"delete","33.49","31.00","149.31","41.43","7765.07","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 52}, ""server_ms"": 31, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,3,"delete","37.48","35.00","133.41","38.77","7764.80","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 53}, ""server_ms"": 35, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,4,"delete","32.25","28.00","155.02","47.74","7764.95","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 54}, ""server_ms"": 28, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,5,"delete","36.88","35.00","135.58","40.98","7764.81","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 55}, ""server_ms"": 35, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,6,"delete","33.77","31.00","148.08","40.11","7764.86","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 56}, ""server_ms"": 31, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,7,"delete","36.77","25.00","135.98","38.97","7764.93","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 57}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,21,8,"delete","44.43","42.00","112.54","55.65","7764.97","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 58}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,9,"delete","38.08","36.00","131.29","48.39","7764.90","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 59}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",5,21,10,"delete","36.69","34.00","136.26","38.83","7765.09","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 60}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","warmup",5,22,1,"delete","73.94","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,2,"delete","64.48","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,3,"delete","73.56","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,4,"delete","72.81","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,5,"delete","73.36","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,6,"delete","64.63","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,7,"delete","72.28","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,8,"delete","72.35","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,9,"delete","65.04","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,22,10,"delete","73.37","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,22,1,"delete","21.73","20.00","230.09","34.89","7765.42","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 51}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",5,22,2,"delete","22.31","20.00","224.16","35.89","7765.04","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 52}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",5,22,3,"delete","21.87","20.00","228.61","35.09","7765.02","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 53}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",5,22,4,"delete","23.05","11.00","216.93","33.74","7765.28","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 54}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,5,"delete","25.54","24.00","195.79","30.77","7765.03","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 55}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",5,22,6,"delete","22.84","21.00","218.95","34.77","7765.28","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 56}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,22,7,"delete","22.26","21.00","224.63","37.67","7765.15","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 57}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,22,8,"delete","22.83","21.00","219.02","33.69","7764.88","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 58}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",5,22,9,"delete","14.94","11.00","334.61","51.49","7765.00","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 59}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,22,10,"delete","23.44","11.00","213.32","32.92","7765.05","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 60}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",5,23,1,"delete","132.66","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,2,"delete","135.09","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,3,"delete","135.40","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,4,"delete","133.16","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,5,"delete","137.17","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,6,"delete","132.86","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,7,"delete","138.77","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,8,"delete","133.92","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,9,"delete","131.99","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,23,10,"delete","130.64","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,23,1,"delete","82.18","80.00","60.84","40.19","7765.31","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 51}, ""server_ms"": 80, ""counters"": {}}"
"neo4j","optimized","steady",5,23,2,"delete","84.64","82.00","59.07","40.64","7765.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 52}, ""server_ms"": 82, ""counters"": {}}"
"neo4j","optimized","steady",5,23,3,"delete","86.03","83.00","58.12","39.91","7765.03","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 53}, ""server_ms"": 83, ""counters"": {}}"
"neo4j","optimized","steady",5,23,4,"delete","84.59","78.00","59.11","39.33","7765.27","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 54}, ""server_ms"": 78, ""counters"": {}}"
"neo4j","optimized","steady",5,23,5,"delete","84.06","81.00","59.48","41.47","7765.55","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 55}, ""server_ms"": 81, ""counters"": {}}"
"neo4j","optimized","steady",5,23,6,"delete","82.72","69.00","60.45","39.23","7765.15","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 56}, ""server_ms"": 69, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,7,"delete","75.95","73.00","65.84","43.42","7765.42","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 57}, ""server_ms"": 73, ""counters"": {}}"
"neo4j","optimized","steady",5,23,8,"delete","85.78","84.00","58.29","41.88","7764.94","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 58}, ""server_ms"": 84, ""counters"": {}}"
"neo4j","optimized","steady",5,23,9,"delete","84.60","73.00","59.10","41.16","7765.31","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 59}, ""server_ms"": 73, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,23,10,"delete","82.92","80.00","60.30","40.60","7765.41","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 60}, ""server_ms"": 80, ""counters"": {}}"
"neo4j","optimized","warmup",5,24,1,"delete","301.48","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,2,"delete","320.31","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,3,"delete","322.55","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,4,"delete","306.98","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,5,"delete","323.61","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,6,"delete","300.02","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,7,"delete","321.33","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,8,"delete","322.43","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,9,"delete","331.01","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",5,24,10,"delete","326.49","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",5,24,1,"delete","281.55","264.00","17.76","39.96","7765.38","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 51}, ""server_ms"": 264, ""counters"": {}}"
"neo4j","optimized","steady",5,24,2,"delete","267.44","249.00","18.70","40.20","7765.17","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 52}, ""server_ms"": 249, ""counters"": {}}"
"neo4j","optimized","steady",5,24,3,"delete","251.49","249.00","19.88","40.94","7765.60","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 53}, ""server_ms"": 249, ""counters"": {}}"
"neo4j","optimized","steady",5,24,4,"delete","276.87","245.00","18.06","42.67","7765.18","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 54}, ""server_ms"": 245, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",5,24,5,"delete","264.26","263.00","18.92","40.05","7765.32","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 55}, ""server_ms"": 263, ""counters"": {}}"
"neo4j","optimized","steady",5,24,6,"delete","271.58","262.00","18.41","40.87","7765.64","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 56}, ""server_ms"": 262, ""counters"": {}}"
"neo4j","optimized","steady",5,24,7,"delete","267.07","258.00","18.72","40.96","7765.59","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 57}, ""server_ms"": 258, ""counters"": {}}"
"neo4j","optimized","steady",5,24,8,"delete","238.76","235.00","20.94","42.21","7765.37","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 58}, ""server_ms"": 235, ""counters"": {}}"
"neo4j","optimized","steady",5,24,9,"delete","271.54","245.00","18.41","39.97","7765.38","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 59}, ""server_ms"": 245, ""counters"": {}}"
"neo4j","optimized","steady",5,24,10,"delete","256.22","251.00","19.51","40.98","7764.86","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 60}, ""server_ms"": 251, ""counters"": {}}"
"neo4j","optimized","warmup",10,1,1,"simple","10566.49","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,2,"simple","10587.87","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,3,"simple","10533.63","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,4,"simple","10490.98","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,5,"simple","10496.93","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,6,"simple","10551.25","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,7,"simple","10520.32","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,8,"simple","10582.65","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,9,"simple","10538.03","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,1,10,"simple","10501.08","nan","nan","nan","nan","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,1,1,"simple","10575.33","517.00","0.95","4.45","7812.44","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 517, ""counters"": {}}"
"neo4j","optimized","steady",10,1,2,"simple","10526.03","544.00","0.95","4.34","7812.50","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 544, ""counters"": {}}"
"neo4j","optimized","steady",10,1,3,"simple","10555.33","547.00","0.95","4.36","7812.21","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 547, ""counters"": {}}"
"neo4j","optimized","steady",10,1,4,"simple","10571.42","464.00","0.95","4.24","7812.26","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 464, ""counters"": {}}"
"neo4j","optimized","steady",10,1,5,"simple","10531.35","511.00","0.95","4.43","7812.46","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 511, ""counters"": {}}"
"neo4j","optimized","steady",10,1,6,"simple","10625.24","497.00","0.94","4.30","7812.36","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 497, ""counters"": {}}"
"neo4j","optimized","steady",10,1,7,"simple","10628.76","534.00","0.94","4.25","7812.59","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 534, ""counters"": {}}"
"neo4j","optimized","steady",10,1,8,"simple","10445.62","497.00","0.96","4.49","7812.40","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 497, ""counters"": {}}"
"neo4j","optimized","steady",10,1,9,"simple","10511.03","494.00","0.95","4.36","7812.40","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 494, ""counters"": {}}"
"neo4j","optimized","steady",10,1,10,"simple","10511.16","444.00","0.95","4.25","7812.79","690.86","         MATCH (p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 10000;         ","{""rows"": 10000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 444, ""counters"": {}}"
"neo4j","optimized","warmup",10,2,1,"simple","125.68","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,2,"simple","124.23","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,3,"simple","123.74","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,4,"simple","123.60","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,5,"simple","123.84","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,6,"simple","123.52","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,7,"simple","135.66","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,8,"simple","124.44","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,9,"simple","123.69","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,2,10,"simple","123.12","nan","nan","nan","nan","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,2,1,"simple","76.78","1.00","130.25","5.15","7812.59","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,2,"simple","72.12","1.00","138.65","5.43","7812.50","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,3,"simple","72.39","0.00","138.13","6.22","7812.79","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,4,"simple","73.27","0.00","136.49","5.44","7812.54","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,5,"simple","73.21","0.00","136.60","5.47","7812.34","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,6,"simple","73.17","0.00","136.67","5.46","7812.67","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,7,"simple","72.17","0.00","138.56","5.66","7812.68","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,8,"simple","73.38","1.00","136.27","5.31","7812.71","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 1, ""counters"": {}}"
"neo4j","optimized","steady",10,2,9,"simple","72.42","0.00","138.08","5.37","7812.52","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","steady",10,2,10,"simple","71.23","0.00","140.39","5.50","7812.65","690.86","         MATCH (c:Category)         RETURN c.id   AS id,                c.name AS name         ORDER BY id         LIMIT 5000;         ","{""rows"": 321, ""first"": {""id"": 1, ""name"": ""Hi-Fi Speakers""}, ""server_ms"": 0, ""counters"": {}}"
"neo4j","optimized","warmup",10,3,1,"simple","347.33","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,2,"simple","358.55","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,3,"simple","343.37","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,4,"simple","363.28","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,5,"simple","342.62","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,6,"simple","342.98","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,7,"simple","353.55","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,8,"simple","340.40","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,9,"simple","340.68","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,3,10,"simple","346.70","nan","nan","nan","nan","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,3,1,"simple","287.90","33.00","34.73","10.99","7812.59","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Metzplatz 3/9"", ""city"": ""Wetzlar"", ""zip"": ""19228"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",10,3,2,"simple","308.75","43.00","32.39","10.15","7812.62","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Metzplatz 3/9"", ""city"": ""Wetzlar"", ""zip"": ""19228"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 43, ""counters"": {}}"
"neo4j","optimized","steady",10,3,3,"simple","292.81","30.00","34.15","10.89","7812.44","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Metzplatz 3/9"", ""city"": ""Wetzlar"", ""zip"": ""19228"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","steady",10,3,4,"simple","295.05","33.00","33.89","10.72","7812.57","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Metzplatz 3/9"", ""city"": ""Wetzlar"", ""zip"": ""19228"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 33, ""counters"": {}}"
"neo4j","optimized","steady",10,3,5,"simple","289.37","34.00","34.56","11.17","7812.59","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Metzplatz 3/9"", ""city"": ""Wetzlar"", ""zip"": ""19228"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",10,3,6,"simple","291.85","34.00","34.26","10.93","7812.54","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Metzplatz 3/9"", ""city"": ""Wetzlar"", ""zip"": ""19228"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",10,3,7,"simple","289.64","32.00","34.53","10.85","7812.68","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Metzplatz 3/9"", ""city"": ""Wetzlar"", ""zip"": ""19228"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 32, ""counters"": {}}"
"neo4j","optimized","steady",10,3,8,"simple","292.97","34.00","34.13","11.47","7812.57","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Metzplatz 3/9"", ""city"": ""Wetzlar"", ""zip"": ""19228"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",10,3,9,"simple","285.51","34.00","35.03","11.25","7812.40","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Metzplatz 3/9"", ""city"": ""Wetzlar"", ""zip"": ""19228"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 34, ""counters"": {}}"
"neo4j","optimized","steady",10,3,10,"simple","305.58","30.00","32.72","10.69","7812.57","690.86","         MATCH (a:Address)         RETURN a.id         AS id,                a.user_id    AS user_id,                a.street     AS street,                a.city       AS city,                a.zip        AS zip,                a.country    AS country,                a.is_primary AS is_primary         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 61, ""user_id"": 44, ""street"": ""Metzplatz 3/9"", ""city"": ""Wetzlar"", ""zip"": ""19228"", ""country"": ""Deutschland"", ""is_primary"": true}, ""server_ms"": 30, ""counters"": {}}"
"neo4j","optimized","warmup",10,4,1,"medium","1772.30","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,2,"medium","2193.67","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,3,"medium","2196.58","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,4,"medium","2097.05","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,5,"medium","2465.16","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,6,"medium","2266.51","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,7,"medium","2271.18","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,8,"medium","2130.29","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,9,"medium","1960.03","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,4,10,"medium","2091.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,4,1,"medium","2040.37","1016.00","4.90","49.60","7870.88","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 1016, ""counters"": {}}"
"neo4j","optimized","steady",10,4,2,"medium","1927.40","937.00","5.19","44.41","7870.53","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 937, ""counters"": {}}"
"neo4j","optimized","steady",10,4,3,"medium","2111.29","1125.00","4.74","47.72","7870.83","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 1125, ""counters"": {}}"
"neo4j","optimized","steady",10,4,4,"medium","2159.63","1140.00","4.63","62.98","7870.66","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 1140, ""counters"": {}}"
"neo4j","optimized","steady",10,4,5,"medium","2454.74","1495.00","4.07","65.35","7871.38","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 1495, ""counters"": {}}"
"neo4j","optimized","steady",10,4,6,"medium","1907.75","938.00","5.24","44.70","7871.60","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 938, ""counters"": {}}"
"neo4j","optimized","steady",10,4,7,"medium","2084.22","1089.00","4.80","46.77","7871.62","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 1089, ""counters"": {}}"
"neo4j","optimized","steady",10,4,8,"medium","2193.09","1161.00","4.56","62.18","7871.58","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 1161, ""counters"": {}}"
"neo4j","optimized","steady",10,4,9,"medium","2311.30","1342.00","4.33","51.30","7871.96","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 1342, ""counters"": {}}"
"neo4j","optimized","steady",10,4,10,"medium","1933.54","942.00","5.17","44.75","7872.11","690.86","         MATCH (p:Product)-[:BELONGS_TO]->(:Category)         WITH DISTINCT p         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at         ORDER BY id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 1, ""name"": ""Echo Dot (5th generation, 2022 release) | Big vibrant sound Wi-Fi and Bluetooth smart speaker with Alexa | Charcoal"", ""price"": 21.989999771118164, ""stock"": 224, ""created_at"": ""2020-03-08T20:04:15.000000000+00:00"", ""updated_at"": ""2023-07-10T00:59:19.000000000+00:00""}, ""server_ms"": 942, ""counters"": {}}"
"neo4j","optimized","warmup",10,5,1,"medium","318.99","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,2,"medium","194.69","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,3,"medium","174.12","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,4,"medium","173.38","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,5,"medium","172.71","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,6,"medium","170.25","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,7,"medium","182.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,8,"medium","172.06","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,9,"medium","174.11","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,5,10,"medium","171.66","nan","nan","nan","nan","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,5,1,"medium","118.88","111.00","84.12","80.91","7872.33","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 111, ""counters"": {}}"
"neo4j","optimized","steady",10,5,2,"medium","130.21","124.00","76.80","84.36","7872.15","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 124, ""counters"": {}}"
"neo4j","optimized","steady",10,5,3,"medium","145.49","103.00","68.73","64.86","7872.41","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 103, ""counters"": {}}"
"neo4j","optimized","steady",10,5,4,"medium","123.42","115.00","81.02","78.87","7872.59","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 115, ""counters"": {}}"
"neo4j","optimized","steady",10,5,5,"medium","125.67","112.00","79.57","81.07","7872.46","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 112, ""counters"": {}}"
"neo4j","optimized","steady",10,5,6,"medium","120.65","116.00","82.89","80.14","7872.23","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 116, ""counters"": {}}"
"neo4j","optimized","steady",10,5,7,"medium","122.60","118.00","81.57","86.11","7872.16","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 118, ""counters"": {}}"
"neo4j","optimized","steady",10,5,8,"medium","120.91","115.00","82.71","79.20","7872.17","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 115, ""counters"": {}}"
"neo4j","optimized","steady",10,5,9,"medium","126.30","113.00","79.18","77.36","7872.44","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 113, ""counters"": {}}"
"neo4j","optimized","steady",10,5,10,"medium","119.48","113.00","83.69","80.75","7872.34","690.86","         MATCH (o:Order)         WITH o ORDER BY o.created_at DESC, o.id DESC LIMIT 20         MATCH (o)-[oi:CONTAINS]->(p:Product)         RETURN p.id         AS id,                p.name       AS name,                p.price      AS price,                p.stock      AS stock,                p.created_at AS created_at,                p.updated_at AS updated_at,                oi.quantity  AS quantity         ORDER BY o.created_at DESC, o.id DESC, id         LIMIT 500;         ","{""rows"": 0, ""first"": null, ""server_ms"": 113, ""counters"": {}}"
"neo4j","optimized","warmup",10,6,1,"medium","143.19","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,2,"medium","141.45","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,3,"medium","142.85","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,4,"medium","142.60","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,5,"medium","149.35","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,6,"medium","143.75","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,7,"medium","140.65","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,8,"medium","141.38","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,9,"medium","142.79","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,6,10,"medium","141.60","nan","nan","nan","nan","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,6,1,"medium","92.57","25.00","108.02","25.89","7879.07","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 25, ""counters"": {}}"
"neo4j","optimized","steady",10,6,2,"medium","97.54","24.00","102.52","24.38","7878.83","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,6,3,"medium","90.81","24.00","110.12","24.49","7879.09","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,6,4,"medium","89.48","22.00","111.76","24.94","7878.96","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",10,6,5,"medium","90.98","23.00","109.92","24.98","7879.19","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",10,6,6,"medium","90.76","24.00","110.17","24.68","7878.80","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,6,7,"medium","90.05","22.00","111.05","24.76","7879.41","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",10,6,8,"medium","90.71","23.00","110.24","27.13","7868.74","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 23, ""counters"": {}}"
"neo4j","optimized","steady",10,6,9,"medium","91.32","24.00","109.50","26.69","7868.72","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,6,10,"medium","89.63","22.00","111.58","24.88","7869.04","690.86","         MATCH (u:User)-[rev:REVIEWED]->(p:Product)         RETURN rev.id        AS id,                u.id          AS user_id,                p.id          AS product_id,                rev.rating    AS rating,                rev.created_at AS created_at         ORDER BY rev.created_at DESC, id DESC         LIMIT 100;         ","{""rows"": 100, ""first"": {""id"": 18604, ""user_id"": 74282, ""product_id"": 857727, ""rating"": 1, ""created_at"": ""2025-07-13T20:47:48.000000000+00:00""}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","warmup",10,7,1,"complex","852.93","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,2,"complex","856.12","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,3,"complex","857.74","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,4,"complex","846.96","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,5,"complex","867.79","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,6,"complex","854.04","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,7,"complex","882.81","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,8,"complex","847.62","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,9,"complex","879.47","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,7,10,"complex","861.34","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,7,1,"complex","819.08","511.00","12.21","52.85","7869.18","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 511, ""counters"": {}}"
"neo4j","optimized","steady",10,7,2,"complex","801.30","493.00","12.48","53.04","7871.17","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 493, ""counters"": {}}"
"neo4j","optimized","steady",10,7,3,"complex","820.69","509.00","12.18","55.68","7877.89","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 509, ""counters"": {}}"
"neo4j","optimized","steady",10,7,4,"complex","808.66","497.00","12.37","52.17","7883.15","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 497, ""counters"": {}}"
"neo4j","optimized","steady",10,7,5,"complex","841.60","525.00","11.88","53.45","7883.37","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 525, ""counters"": {}}"
"neo4j","optimized","steady",10,7,6,"complex","798.29","491.00","12.53","52.16","7874.20","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 491, ""counters"": {}}"
"neo4j","optimized","steady",10,7,7,"complex","801.85","496.00","12.47","51.82","7874.08","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 496, ""counters"": {}}"
"neo4j","optimized","steady",10,7,8,"complex","806.24","520.00","12.40","52.55","7874.20","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 520, ""counters"": {}}"
"neo4j","optimized","steady",10,7,9,"complex","799.62","489.00","12.51","53.33","7876.40","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 489, ""counters"": {}}"
"neo4j","optimized","steady",10,7,10,"complex","817.46","495.00","12.23","50.89","7879.15","690.86","         MATCH (o:Order)-[oi:CONTAINS]->(p:Product)         WITH o, SUM(toInteger(oi.quantity) * toFloat(oi.price)) AS total         RETURN o.id         AS id,                o.created_at AS created_at,                total        AS total         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""created_at"": ""2025-05-17T01:12:45.000000000+00:00"", ""total"": 100.52000117301941}, ""server_ms"": 495, ""counters"": {}}"
"neo4j","optimized","warmup",10,8,1,"complex","304.00","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,2,"complex","322.46","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,3,"complex","307.27","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,4,"complex","305.71","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,5,"complex","303.68","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,6,"complex","302.91","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,7,"complex","306.58","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,8,"complex","301.39","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,9,"complex","307.66","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,8,10,"complex","302.14","nan","nan","nan","nan","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,8,1,"complex","253.47","28.00","39.45","11.20","7874.35","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",10,8,2,"complex","255.48","28.00","39.14","10.98","7874.49","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",10,8,3,"complex","263.85","28.00","37.90","10.84","7874.47","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",10,8,4,"complex","264.20","27.00","37.85","12.91","7874.44","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",10,8,5,"complex","251.17","27.00","39.81","10.90","7874.65","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",10,8,6,"complex","250.23","27.00","39.96","10.53","7874.53","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 27, ""counters"": {}}"
"neo4j","optimized","steady",10,8,7,"complex","251.96","28.00","39.69","12.24","7874.24","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",10,8,8,"complex","254.26","28.00","39.33","11.50","7874.53","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",10,8,9,"complex","252.27","28.00","39.64","10.90","7874.55","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","steady",10,8,10,"complex","254.02","28.00","39.37","10.83","7874.47","690.86","         MATCH (p:Product)<-[rev:REVIEWED]-()         WITH p, AVG(toFloat(rev.rating)) AS avg_rating         WHERE avg_rating > 4         RETURN p.id       AS id,                p.name     AS name,                avg_rating AS avg_rating         ORDER BY avg_rating DESC, id         LIMIT 1000;         ","{""rows"": 1000, ""first"": {""id"": 157, ""name"": ""Sonos Era 100 - An icon, remastered. Next-gen acoustics. New look. Now with Bluetooth®. Introducing Era 100. Hear what you've been missing. (White)"", ""avg_rating"": 5.0}, ""server_ms"": 28, ""counters"": {}}"
"neo4j","optimized","warmup",10,9,1,"complex","386.73","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,2,"complex","376.94","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,3,"complex","388.67","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,4,"complex","395.51","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,5,"complex","388.35","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,6,"complex","388.96","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,7,"complex","385.52","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,8,"complex","395.21","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,9,"complex","387.34","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,9,10,"complex","382.70","nan","nan","nan","nan","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,9,1,"complex","336.22","240.00","29.74","59.61","7874.79","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 240, ""counters"": {}}"
"neo4j","optimized","steady",10,9,2,"complex","357.23","246.00","27.99","62.21","7874.88","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 246, ""counters"": {}}"
"neo4j","optimized","steady",10,9,3,"complex","330.47","230.00","30.26","59.97","7874.50","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 230, ""counters"": {}}"
"neo4j","optimized","steady",10,9,4,"complex","347.26","255.00","28.80","64.51","7874.57","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 255, ""counters"": {}}"
"neo4j","optimized","steady",10,9,5,"complex","331.01","229.00","30.21","59.41","7874.61","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 229, ""counters"": {}}"
"neo4j","optimized","steady",10,9,6,"complex","337.61","238.00","29.62","61.96","7874.61","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 238, ""counters"": {}}"
"neo4j","optimized","steady",10,9,7,"complex","321.83","241.00","31.07","65.67","7874.87","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 241, ""counters"": {}}"
"neo4j","optimized","steady",10,9,8,"complex","338.99","245.00","29.50","63.43","7875.62","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 245, ""counters"": {}}"
"neo4j","optimized","steady",10,9,9,"complex","329.21","232.00","30.38","60.97","7875.14","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 232, ""counters"": {}}"
"neo4j","optimized","steady",10,9,10,"complex","337.63","248.00","29.62","62.84","7875.42","690.86","         MATCH (u:User)-[:PLACED]->(o:Order)         WHERE datetime(o.created_at) >= datetime() - duration({days:30})         WITH u, COUNT(o) AS orders_last_30d         RETURN u.id            AS id,                orders_last_30d AS orders_last_30d         ORDER BY id         LIMIT 500;         ","{""rows"": 500, ""first"": {""id"": 1, ""orders_last_30d"": 180}, ""server_ms"": 248, ""counters"": {}}"
"neo4j","optimized","warmup",10,10,1,"very_complex","835.87","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,2,"very_complex","543.97","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,3,"very_complex","518.76","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,4,"very_complex","1014.77","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,5,"very_complex","886.95","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,6,"very_complex","797.61","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,7,"very_complex","552.80","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,8,"very_complex","917.55","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,9,"very_complex","797.21","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,10,10,"very_complex","537.78","nan","nan","nan","nan","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,10,1,"very_complex","849.21","751.00","11.78","81.47","7875.24","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 751, ""counters"": {}}"
"neo4j","optimized","steady",10,10,2,"very_complex","828.56","826.00","12.07","87.82","7875.59","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 826, ""counters"": {}}"
"neo4j","optimized","steady",10,10,3,"very_complex","733.53","723.00","13.63","83.65","7875.28","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 723, ""counters"": {}}"
"neo4j","optimized","steady",10,10,4,"very_complex","483.72","467.00","20.67","84.54","7875.54","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 467, ""counters"": {}}"
"neo4j","optimized","steady",10,10,5,"very_complex","851.75","762.00","11.74","87.17","7875.36","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 762, ""counters"": {}}"
"neo4j","optimized","steady",10,10,6,"very_complex","786.05","776.00","12.72","84.14","7875.64","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 776, ""counters"": {}}"
"neo4j","optimized","steady",10,10,7,"very_complex","711.60","615.00","14.05","81.31","7876.01","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 615, ""counters"": {}}"
"neo4j","optimized","steady",10,10,8,"very_complex","495.40","468.00","20.19","82.71","7875.41","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 468, ""counters"": {}}"
"neo4j","optimized","steady",10,10,9,"very_complex","828.40","799.00","12.07","89.91","7875.34","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 799, ""counters"": {}}"
"neo4j","optimized","steady",10,10,10,"very_complex","607.30","586.00","16.47","85.79","7875.33","690.86","         // Schritt 1: best-seller bestimmen         MATCH (:Order)-[:CONTAINS]->(top:Product)         WITH top, count(*) AS freq ORDER BY freq DESC LIMIT 1          // Schritt 2: alle weiteren Produkte derselben Käufer         MATCH (top)<-[:CONTAINS]-(:Order)<-[:PLACED]-(u:User)         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p:Product)         WHERE p <> top         WITH p, count(*) AS freq         RETURN p.id AS rec_id, freq         ORDER BY freq DESC, rec_id         LIMIT 100;         ","{""rows"": 23, ""first"": {""rec_id"": 168005, ""freq"": 1}, ""server_ms"": 586, ""counters"": {}}"
"neo4j","optimized","warmup",10,11,1,"very_complex","2555.02","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,2,"very_complex","2451.70","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,3,"very_complex","2614.87","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,4,"very_complex","2409.24","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,5,"very_complex","2372.74","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,6,"very_complex","2689.59","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,7,"very_complex","2394.69","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,8,"very_complex","2500.46","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,9,"very_complex","2178.15","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,11,10,"very_complex","2662.20","nan","nan","nan","nan","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,11,1,"very_complex","2559.99","2419.00","3.91","84.45","7875.71","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2419, ""counters"": {}}"
"neo4j","optimized","steady",10,11,2,"very_complex","2467.30","2317.00","4.05","80.80","7875.72","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2317, ""counters"": {}}"
"neo4j","optimized","steady",10,11,3,"very_complex","2213.04","2209.00","4.52","81.35","7875.76","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2209, ""counters"": {}}"
"neo4j","optimized","steady",10,11,4,"very_complex","2810.71","2773.00","3.56","87.47","7875.23","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2773, ""counters"": {}}"
"neo4j","optimized","steady",10,11,5,"very_complex","2316.51","2203.00","4.32","80.94","7875.57","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2203, ""counters"": {}}"
"neo4j","optimized","steady",10,11,6,"very_complex","2659.32","2440.00","3.76","84.30","7875.78","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2440, ""counters"": {}}"
"neo4j","optimized","steady",10,11,7,"very_complex","2380.62","2276.00","4.20","83.60","7875.68","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2276, ""counters"": {}}"
"neo4j","optimized","steady",10,11,8,"very_complex","2361.71","2224.00","4.23","79.98","7875.67","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2224, ""counters"": {}}"
"neo4j","optimized","steady",10,11,9,"very_complex","2612.11","2500.00","3.83","85.77","7875.90","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2500, ""counters"": {}}"
"neo4j","optimized","steady",10,11,10,"very_complex","2569.68","2400.00","3.89","83.52","7875.71","690.86","         MATCH (o:Order)-[:CONTAINS]->(p1:Product)         MATCH (o)-[:CONTAINS]->(p2:Product)         WHERE  p1.id < p2.id          WITH p1, p2, COUNT(DISTINCT o) AS co_orders         RETURN p1.id  AS prodA,             p2.id  AS prodB,             co_orders         ORDER BY co_orders DESC, prodA, prodB         LIMIT 100;         ","{""rows"": 100, ""first"": {""prodA"": 1505145, ""prodB"": 2049460, ""co_orders"": 2}, ""server_ms"": 2400, ""counters"": {}}"
"neo4j","optimized","warmup",10,12,1,"very_complex","1034.86","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,2,"very_complex","752.99","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,3,"very_complex","1100.51","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,4,"very_complex","1083.15","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,5,"very_complex","1028.89","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,6,"very_complex","779.99","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,7,"very_complex","1034.47","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,8,"very_complex","1102.74","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,9,"very_complex","991.63","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,12,10,"very_complex","942.64","nan","nan","nan","nan","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,12,1,"very_complex","853.22","818.00","11.72","85.63","7875.78","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 818, ""counters"": {}}"
"neo4j","optimized","steady",10,12,2,"very_complex","989.55","981.00","10.11","84.16","7876.14","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 981, ""counters"": {}}"
"neo4j","optimized","steady",10,12,3,"very_complex","668.72","660.00","14.95","84.80","7875.93","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 660, ""counters"": {}}"
"neo4j","optimized","steady",10,12,4,"very_complex","863.17","854.00","11.59","83.50","7875.88","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 854, ""counters"": {}}"
"neo4j","optimized","steady",10,12,5,"very_complex","888.31","860.00","11.26","83.55","7875.70","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 860, ""counters"": {}}"
"neo4j","optimized","steady",10,12,6,"very_complex","1014.42","922.00","9.86","81.51","7875.81","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 922, ""counters"": {}}"
"neo4j","optimized","steady",10,12,7,"very_complex","1115.92","980.00","8.96","83.96","7875.67","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 980, ""counters"": {}}"
"neo4j","optimized","steady",10,12,8,"very_complex","927.81","919.00","10.78","85.28","7875.96","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 919, ""counters"": {}}"
"neo4j","optimized","steady",10,12,9,"very_complex","711.04","645.00","14.06","78.15","7875.89","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 645, ""counters"": {}}"
"neo4j","optimized","steady",10,12,10,"very_complex","1113.99","1032.00","8.98","83.82","7876.30","690.86","         MATCH (:Order)-[:CONTAINS]->(tp:Product)         WITH tp, COUNT(*) AS freq         ORDER BY freq DESC, tp.id         LIMIT 1          MATCH (u:User)-[:PLACED]->(:Order)-[:CONTAINS]->(tp)         WITH DISTINCT u, tp         MATCH (u)-[:PLACED]->(:Order)-[:CONTAINS]->(p2:Product)         WHERE p2 <> tp         RETURN p2.id  AS prod_id,                COUNT(*) AS freq         ORDER BY freq DESC, prod_id         LIMIT 100;         ","{""rows"": 29, ""first"": {""prod_id"": 129815, ""freq"": 1}, ""server_ms"": 1032, ""counters"": {}}"
"neo4j","optimized","warmup",10,13,1,"create","89.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,2,"create","89.71","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,3,"create","87.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,4,"create","87.60","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,5,"create","88.97","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,6,"create","102.44","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,7,"create","91.17","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,8,"create","84.12","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,9,"create","88.16","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,13,10,"create","86.69","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,13,1,"create","36.14","27.00","276.67","75.12","7876.31","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134685}, ""server_ms"": 27, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,2,"create","57.85","50.00","172.85","78.53","7876.08","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134686}, ""server_ms"": 50, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,3,"create","36.52","28.00","273.82","68.93","7876.27","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134688}, ""server_ms"": 28, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,4,"create","55.51","49.00","180.15","77.87","7876.01","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134689}, ""server_ms"": 49, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,5,"create","46.02","24.00","217.28","50.19","7875.81","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134690}, ""server_ms"": 24, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,6,"create","32.93","26.00","303.65","76.20","7876.34","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134695}, ""server_ms"": 26, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,7,"create","31.45","27.00","317.92","79.85","7875.98","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134696}, ""server_ms"": 27, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,8,"create","37.14","25.00","269.24","68.47","7875.94","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134698}, ""server_ms"": 25, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,9,"create","32.29","27.00","309.67","80.17","7875.97","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134700}, ""server_ms"": 27, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","steady",10,13,10,"create","32.92","27.00","303.81","87.93","7876.32","690.86","         OPTIONAL MATCH (a:Address)         WITH coalesce(max(a.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:HAS_ADDRESS]->(a:Address {             id:         new_id,             street:     'Foo',             city:       'Bar City',             zip:        '12345',             country:    'DE',             is_primary: false         })         RETURN a.id AS address_id;         ","{""rows"": 1, ""first"": {""address_id"": 134702}, ""server_ms"": 27, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 6}}"
"neo4j","optimized","warmup",10,14,1,"create","98.88","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,2,"create","103.21","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,3,"create","101.91","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,4,"create","102.58","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,5,"create","100.98","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,6,"create","103.68","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,7,"create","100.23","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,8,"create","101.34","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,9,"create","102.01","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,14,10,"create","103.64","nan","nan","nan","nan","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,14,1,"create","53.12","48.00","188.25","94.10","7880.35","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200136}, ""server_ms"": 48, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,2,"create","47.67","38.00","209.79","77.64","7880.30","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200139}, ""server_ms"": 38, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,3,"create","50.87","42.00","196.57","72.94","7880.23","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200141}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,4,"create","52.10","44.00","191.94","76.53","7880.17","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200142}, ""server_ms"": 44, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,5,"create","47.79","42.00","209.26","77.95","7876.70","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200145}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,6,"create","47.43","42.00","210.85","79.37","7872.96","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200148}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,7,"create","46.61","42.00","214.54","79.62","7872.94","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200151}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,8,"create","48.86","43.00","204.67","78.46","7873.28","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200153}, ""server_ms"": 43, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,9,"create","48.10","41.00","207.92","76.45","7873.11","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200154}, ""server_ms"": 41, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","steady",10,14,10,"create","50.73","42.00","197.10","76.15","7872.93","690.86","         OPTIONAL MATCH (o:Order)         WITH coalesce(max(o.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         CREATE (u)-[:PLACED]->(o:Order {             id:         new_id,             status:     'pending',             total:      0.0,             created_at: datetime()         })         RETURN o.id AS order_id;         ","{""rows"": 1, ""first"": {""order_id"": 200156}, ""server_ms"": 42, ""counters"": {""_contains_updates"": true, ""labels_added"": 1, ""relationships_created"": 1, ""nodes_created"": 1, ""properties_set"": 4}}"
"neo4j","optimized","warmup",10,15,1,"create","123.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,2,"create","121.52","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,3,"create","117.42","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,4,"create","119.92","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,5,"create","122.42","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,6,"create","125.07","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,7,"create","122.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,8,"create","122.84","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,9,"create","121.82","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,15,10,"create","120.35","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,15,1,"create","74.85","62.00","133.60","73.76","7876.78","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150540}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,2,"create","74.20","62.00","134.77","73.19","7876.67","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150541}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,3,"create","67.37","58.00","148.44","80.10","7877.22","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150542}, ""server_ms"": 58, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,4,"create","72.35","62.00","138.21","76.07","7876.76","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150544}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,5,"create","73.58","61.00","135.90","73.67","7876.86","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150545}, ""server_ms"": 61, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,6,"create","72.86","65.00","137.24","77.36","7877.11","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150546}, ""server_ms"": 65, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,7,"create","77.71","67.00","128.68","84.86","7876.87","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150547}, ""server_ms"": 67, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,8,"create","74.37","62.00","134.46","73.65","7877.03","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150548}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,9,"create","67.30","62.00","148.60","80.91","7877.01","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150549}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","steady",10,15,10,"create","74.82","62.00","133.66","73.90","7877.04","690.86","         OPTIONAL MATCH ()-[c:HAS_IN_CART]-()         WITH coalesce(max(c.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[c:HAS_IN_CART {             id:       new_id,             quantity: 2,             added_at: datetime()         }]->(p)         RETURN c.id AS cart_rel_id;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 150550}, ""server_ms"": 62, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 3}}"
"neo4j","optimized","warmup",10,16,1,"create","515.10","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,2,"create","510.53","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,3,"create","500.88","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,4,"create","545.09","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,5,"create","511.46","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,6,"create","508.86","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,7,"create","503.31","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,8,"create","535.81","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,9,"create","508.18","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,16,10,"create","507.62","nan","nan","nan","nan","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,16,1,"create","459.37","431.00","21.77","80.66","7877.20","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049233}, ""server_ms"": 431, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,2,"create","462.93","456.00","21.60","83.26","7877.12","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049238}, ""server_ms"": 456, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,3,"create","448.42","435.00","22.30","82.20","7877.33","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049240}, ""server_ms"": 435, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,4,"create","453.15","432.00","22.07","81.26","7877.36","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049244}, ""server_ms"": 432, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,5,"create","452.86","430.00","22.08","81.76","7877.48","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049251}, ""server_ms"": 430, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,6,"create","460.78","458.00","21.70","83.04","7877.40","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049260}, ""server_ms"": 458, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,7,"create","448.19","445.00","22.31","82.21","7877.21","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049264}, ""server_ms"": 445, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,8,"create","456.29","440.00","21.92","81.53","7877.18","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049265}, ""server_ms"": 440, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,9,"create","451.28","438.00","22.16","81.89","7877.42","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049270}, ""server_ms"": 438, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","steady",10,16,10,"create","461.93","448.00","21.65","82.71","7877.26","690.86","         OPTIONAL MATCH ()-[v:VIEWED]-()         WITH coalesce(max(v.id),0)+1 AS new_id         MATCH (u:User) WITH u,new_id LIMIT 1         MATCH (p:Product) WITH u,p,new_id LIMIT 1         CREATE (u)-[v:VIEWED {             id:        new_id,             viewed_at: datetime()         }]->(p)         RETURN v.id AS view_rel_id;         ","{""rows"": 1, ""first"": {""view_rel_id"": 1049274}, ""server_ms"": 448, ""counters"": {""_contains_updates"": true, ""relationships_created"": 1, ""properties_set"": 2}}"
"neo4j","optimized","warmup",10,17,1,"update","591.25","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,2,"update","591.97","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,3,"update","588.13","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,4,"update","617.21","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,5,"update","594.58","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,6,"update","598.94","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,7,"update","596.65","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,8,"update","577.11","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,9,"update","592.52","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,17,10,"update","580.02","nan","nan","nan","nan","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,17,1,"update","544.39","520.00","18.37","80.96","7877.28","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 328}, ""server_ms"": 520, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,2,"update","538.54","501.00","18.57","78.53","7877.14","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 338}, ""server_ms"": 501, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,3,"update","561.13","546.00","17.82","79.25","7877.38","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 351}, ""server_ms"": 546, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,4,"update","541.52","523.00","18.47","80.46","7877.18","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 361}, ""server_ms"": 523, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,5,"update","537.65","532.00","18.60","80.40","7877.40","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 371}, ""server_ms"": 532, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,6,"update","530.95","468.00","18.83","80.92","7876.96","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 375}, ""server_ms"": 468, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,7,"update","558.16","533.00","17.92","79.23","7876.91","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 392}, ""server_ms"": 533, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,8,"update","539.30","537.00","18.54","81.66","7877.20","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 404}, ""server_ms"": 537, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,9,"update","531.81","513.00","18.80","81.21","7877.23","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 407}, ""server_ms"": 513, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,17,10,"update","540.58","521.00","18.50","80.21","7877.49","690.86","         MATCH (p:Product) WITH p ORDER BY p.id LIMIT 1         SET   p.stock = coalesce(p.stock,0) + 1         RETURN p.id   AS product_id,                p.stock AS new_stock;         ","{""rows"": 1, ""first"": {""product_id"": 1, ""new_stock"": 418}, ""server_ms"": 521, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,18,1,"update","75.05","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,2,"update","66.73","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,3,"update","66.58","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,4,"update","66.31","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,5,"update","69.09","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,6,"update","66.33","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,7,"update","66.17","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,8,"update","66.82","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,9,"update","66.48","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,18,10,"update","66.38","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,18,1,"update","16.49","12.00","606.45","76.62","7877.04","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,2,"update","16.02","11.00","624.32","77.78","7877.28","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,3,"update","16.19","12.00","617.51","78.11","7877.11","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,4,"update","20.54","11.00","486.90","60.65","7876.98","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,5,"update","16.04","12.00","623.62","78.98","7877.53","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,6,"update","15.60","12.00","641.00","81.23","7877.19","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,7,"update","15.87","12.00","630.31","78.72","7877.39","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,8,"update","15.83","11.00","631.90","80.44","7877.18","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 11, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,9,"update","16.20","12.00","617.27","77.04","7877.09","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,18,10,"update","16.11","12.00","620.71","77.94","7877.21","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         SET   rev.rating = CASE                              WHEN toInteger(rev.rating) > 1                              THEN toInteger(rev.rating) - 1                              ELSE 1                            END         RETURN rev.id     AS review_rel_id,                rev.rating AS new_rating;         ","{""rows"": 1, ""first"": {""review_rel_id"": 61, ""new_rating"": 1}, ""server_ms"": 12, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,19,1,"update","140.24","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,2,"update","141.49","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,3,"update","141.04","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,4,"update","137.75","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,5,"update","133.28","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,6,"update","139.83","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,7,"update","138.20","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,8,"update","136.49","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,9,"update","139.28","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,19,10,"update","141.07","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,19,1,"update","88.07","82.00","113.54","69.60","7877.33","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 323}, ""server_ms"": 82, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,2,"update","86.67","79.00","115.38","69.17","7877.21","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 350}, ""server_ms"": 79, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,3,"update","80.45","78.00","124.31","74.39","7877.46","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 392}, ""server_ms"": 78, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,4,"update","89.82","85.00","111.33","67.00","7877.42","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 416}, ""server_ms"": 85, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,5,"update","94.13","68.00","106.23","63.86","7877.38","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 425}, ""server_ms"": 68, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,6,"update","88.00","85.00","113.64","68.38","7877.39","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 479}, ""server_ms"": 85, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,7,"update","82.14","70.00","121.74","73.09","7877.33","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 491}, ""server_ms"": 70, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,8,"update","90.66","85.00","110.30","66.61","7877.01","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 536}, ""server_ms"": 85, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,9,"update","91.88","84.00","108.84","66.34","7877.40","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 560}, ""server_ms"": 84, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,19,10,"update","82.30","70.00","121.51","73.71","7877.20","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WITH  c ORDER BY c.id LIMIT 1         SET   c.quantity = coalesce(toInteger(c.quantity),0) + 3         RETURN c.id       AS cart_rel_id,                c.quantity AS new_quantity;         ","{""rows"": 1, ""first"": {""cart_rel_id"": 61, ""new_quantity"": 584}, ""server_ms"": 70, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,20,1,"update","74.06","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,2,"update","72.57","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,3,"update","65.76","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,4,"update","73.93","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,5,"update","72.37","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,6,"update","68.47","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,7,"update","80.75","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,8,"update","80.12","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,9,"update","70.70","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,20,10,"update","73.59","nan","nan","nan","nan","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,20,1,"update","22.54","9.00","443.63","15.87","7877.41","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,2,"update","22.37","9.00","447.02","16.06","7877.53","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,3,"update","21.92","0.00","456.16","16.05","7877.52","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,4,"update","24.08","9.00","415.21","15.69","7877.41","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 9, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,5,"update","17.07","0.00","585.72","20.43","7877.55","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,6,"update","26.71","0.00","374.37","14.07","7877.68","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,7,"update","16.81","3.00","594.81","22.49","7877.44","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 3, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,8,"update","22.54","0.00","443.59","16.13","7877.36","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,9,"update","21.87","0.00","457.22","15.90","7877.45","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 0, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","steady",10,20,10,"update","14.99","1.00","667.12","23.23","7877.27","690.86","         MATCH (u:User) WITH u LIMIT 1         SET   u.email = u.email + '.tmp'         RETURN u.id   AS user_id,                u.email AS new_email;         ","{""rows"": 1, ""first"": {""user_id"": 1, ""new_email"": ""ypechel@example.net.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp.tmp""}, ""server_ms"": 1, ""counters"": {""_contains_updates"": true, ""properties_set"": 1}}"
"neo4j","optimized","warmup",10,21,1,"delete","91.60","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,2,"delete","90.16","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,3,"delete","87.49","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,4,"delete","88.38","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,5,"delete","90.55","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,6,"delete","91.21","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,7,"delete","90.59","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,8,"delete","90.42","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,9,"delete","91.35","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,21,10,"delete","90.74","nan","nan","nan","nan","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,21,1,"delete","34.77","30.00","287.60","79.26","7877.58","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 71}, ""server_ms"": 30, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,2,"delete","34.67","31.00","288.40","80.21","7877.47","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 72}, ""server_ms"": 31, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,3,"delete","36.77","33.00","271.97","75.87","7877.24","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 73}, ""server_ms"": 33, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,4,"delete","39.21","36.00","255.04","73.17","7877.38","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 74}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,5,"delete","37.16","34.00","269.11","75.52","7877.19","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 75}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,6,"delete","35.23","34.00","283.83","76.86","7877.40","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 76}, ""server_ms"": 34, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,7,"delete","41.06","38.00","243.57","70.19","7877.26","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 77}, ""server_ms"": 38, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,8,"delete","38.87","36.00","257.26","71.97","7877.34","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 78}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,9,"delete","45.88","43.00","217.97","61.41","7877.35","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 79}, ""server_ms"": 43, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","steady",10,21,10,"delete","38.76","36.00","258.00","71.65","7877.37","690.86","         MATCH (a:Address)         WITH  a ORDER BY a.id LIMIT 1         WITH  a.id AS deleted_address_id, a         DETACH DELETE a         RETURN deleted_address_id;         ","{""rows"": 1, ""first"": {""deleted_address_id"": 80}, ""server_ms"": 36, ""counters"": {""_contains_updates"": true, ""nodes_deleted"": 1}}"
"neo4j","optimized","warmup",10,22,1,"delete","67.09","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,2,"delete","72.88","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,3,"delete","74.07","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,4,"delete","73.17","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,5,"delete","73.39","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,6,"delete","73.78","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,7,"delete","66.95","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,8,"delete","75.57","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,9,"delete","71.99","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,22,10,"delete","67.04","nan","nan","nan","nan","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,22,1,"delete","23.39","21.00","427.61","54.30","7877.70","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 71}, ""server_ms"": 21, ""counters"": {}}"
"neo4j","optimized","steady",10,22,2,"delete","27.63","19.00","361.93","44.37","7877.60","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 72}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","steady",10,22,3,"delete","24.89","22.00","401.74","51.86","7877.20","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 73}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",10,22,4,"delete","27.71","24.00","360.87","86.57","7877.44","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 74}, ""server_ms"": 24, ""counters"": {}}"
"neo4j","optimized","steady",10,22,5,"delete","24.77","22.00","403.78","51.83","7877.44","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 75}, ""server_ms"": 22, ""counters"": {}}"
"neo4j","optimized","steady",10,22,6,"delete","16.98","14.00","588.98","75.33","7877.61","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 76}, ""server_ms"": 14, ""counters"": {}}"
"neo4j","optimized","steady",10,22,7,"delete","23.12","20.00","432.46","55.12","7877.50","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 77}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",10,22,8,"delete","23.39","20.00","427.61","54.54","7877.40","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 78}, ""server_ms"": 20, ""counters"": {}}"
"neo4j","optimized","steady",10,22,9,"delete","23.44","10.00","426.63","54.45","7877.45","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 79}, ""server_ms"": 10, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,22,10,"delete","23.19","19.00","431.31","54.77","7877.32","690.86","         MATCH ()-[rev:REVIEWED]-()         WITH  rev ORDER BY rev.id LIMIT 1         WITH  rev.id AS deleted_review_rel_id, rev         DELETE rev         RETURN deleted_review_rel_id;         ","{""rows"": 1, ""first"": {""deleted_review_rel_id"": 80}, ""server_ms"": 19, ""counters"": {}}"
"neo4j","optimized","warmup",10,23,1,"delete","137.86","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,2,"delete","141.06","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,3,"delete","136.62","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,4,"delete","141.52","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,5,"delete","142.19","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,6,"delete","136.83","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,7,"delete","144.87","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,8,"delete","153.09","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,9,"delete","142.66","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,23,10,"delete","138.23","nan","nan","nan","nan","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,23,1,"delete","90.40","88.00","110.62","78.04","7877.42","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 71}, ""server_ms"": 88, ""counters"": {}}"
"neo4j","optimized","steady",10,23,2,"delete","91.05","89.00","109.83","78.31","7877.43","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 72}, ""server_ms"": 89, ""counters"": {}}"
"neo4j","optimized","steady",10,23,3,"delete","89.24","87.00","112.06","79.50","7877.50","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 73}, ""server_ms"": 87, ""counters"": {}}"
"neo4j","optimized","steady",10,23,4,"delete","87.73","84.00","113.99","79.83","7877.42","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 74}, ""server_ms"": 84, ""counters"": {}}"
"neo4j","optimized","steady",10,23,5,"delete","87.69","84.00","114.03","78.66","7877.51","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 75}, ""server_ms"": 84, ""counters"": {}}"
"neo4j","optimized","steady",10,23,6,"delete","92.04","88.00","108.65","76.04","7877.47","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 76}, ""server_ms"": 88, ""counters"": {}}"
"neo4j","optimized","steady",10,23,7,"delete","91.59","88.00","109.18","75.95","7877.53","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 77}, ""server_ms"": 88, ""counters"": {}}"
"neo4j","optimized","steady",10,23,8,"delete","87.70","86.00","114.03","80.34","7877.81","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 78}, ""server_ms"": 86, ""counters"": {}}"
"neo4j","optimized","steady",10,23,9,"delete","88.84","86.00","112.56","78.94","7877.83","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 79}, ""server_ms"": 86, ""counters"": {}}"
"neo4j","optimized","steady",10,23,10,"delete","86.37","72.00","115.78","81.66","7877.61","690.86","         MATCH ()-[c:HAS_IN_CART]-()         WHERE c.id IS NOT NULL         WITH  c ORDER BY c.id LIMIT 1         WITH  c.id AS deleted_cart_rel_id, c         DELETE c         RETURN deleted_cart_rel_id;         ","{""rows"": 1, ""first"": {""deleted_cart_rel_id"": 80}, ""server_ms"": 72, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","warmup",10,24,1,"delete","329.91","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,2,"delete","327.72","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,3,"delete","321.99","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,4,"delete","329.46","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,5,"delete","348.51","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,6,"delete","345.30","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,7,"delete","338.13","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,8,"delete","338.79","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,9,"delete","325.21","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","warmup",10,24,10,"delete","323.99","nan","nan","nan","nan","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""note"": ""warmup""}"
"neo4j","optimized","steady",10,24,1,"delete","281.52","260.00","35.52","79.86","7877.43","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 71}, ""server_ms"": 260, ""counters"": {}}"
"neo4j","optimized","steady",10,24,2,"delete","280.89","261.00","35.60","80.70","7877.73","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 72}, ""server_ms"": 261, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,3,"delete","279.14","270.00","35.82","80.49","7877.82","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 73}, ""server_ms"": 270, ""counters"": {}}"
"neo4j","optimized","steady",10,24,4,"delete","280.99","272.00","35.59","80.64","7877.57","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 74}, ""server_ms"": 272, ""counters"": {}}"
"neo4j","optimized","steady",10,24,5,"delete","276.35","272.00","36.19","81.66","7877.74","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 75}, ""server_ms"": 272, ""counters"": {}}"
"neo4j","optimized","steady",10,24,6,"delete","276.26","262.00","36.20","81.82","7877.56","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 76}, ""server_ms"": 262, ""counters"": {""_contains_updates"": true, ""relationships_deleted"": 1}}"
"neo4j","optimized","steady",10,24,7,"delete","275.21","263.00","36.34","80.98","7877.91","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 77}, ""server_ms"": 263, ""counters"": {}}"
"neo4j","optimized","steady",10,24,8,"delete","275.24","272.00","36.33","81.38","7877.63","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 78}, ""server_ms"": 272, ""counters"": {}}"
"neo4j","optimized","steady",10,24,9,"delete","283.41","270.00","35.28","80.18","7877.49","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 79}, ""server_ms"": 270, ""counters"": {}}"
"neo4j","optimized","steady",10,24,10,"delete","275.70","267.00","36.27","81.34","7877.92","690.86","         MATCH ()-[pur:PURCHASED]-()         WHERE pur.id IS NOT NULL         WITH  pur ORDER BY pur.id LIMIT 1         WITH  pur.id AS deleted_purchase_rel_id, pur         DELETE pur         RETURN deleted_purchase_rel_id;         ","{""rows"": 1, ""first"": {""deleted_purchase_rel_id"": 80}, ""server_ms"": 267, ""counters"": {}}"
